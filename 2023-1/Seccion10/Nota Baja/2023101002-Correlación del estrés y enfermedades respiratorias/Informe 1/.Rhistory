)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Nivel moderado de estrés", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Nivel moderado de estrés.", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "36-56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Moderado", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "40 a 56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == ".", NA, PuntosTest
)) -> DProy
DProy$PuntosTest = as.numeric(DProy$PuntosTest)
unique(DProy$PuntosTest)
boxplot(DProy$Edad,
horizontal = TRUE,
xlab = "Edad",
notch = TRUE)
promedio <- mean(DProy$Edad)
abline(v = promedio, col = "red", lwd = 2)
legend("topright", legend = c("Promedio"),
lty = c(1, 1), col = c("red"), lwd = 2)
text(promedio, 1, labels = paste("Promedio:", round(promedio, 2)), pos = 3, col = "red")
DProy %>% select(Distrito) %>% group_by(Distrito) %>% summarise(n())
which.max(table(DProy$Distrito))
barplot(table(DProy$Género))
moda = as.numeric(names(table(DProy$VecesEnfermo)[table(DProy$VecesEnfermo) == max(table(DProy$VecesEnfermo), na.rm = TRUE)]))
hist(DProy$VecesEnfermo, prob = TRUE
, main = "Histograma de veces enfermo"
, xlab = "Veces enfermo"
, ylab = "Frecuencia relativa"
)
abline(v = c(mean(DProy$VecesEnfermo, na.rm=FALSE),
median(DProy$VecesEnfermo,na.rm = FALSE)
),
col = c("red", "blue"),
lty = c(2, 1),
lwd = 2)
legend("topright"
, legend = c("Promedio", "Mediana")
, col = c("red", "blue")
, lty = c(2, 1)
, lwd = 2
, bty = "n"
)
hist(DProy$PuntosTest, prob = TRUE
, main = "Histograma de puntos del test"
, xlab = "Puntos del test"
, ylab = "Frecuencia relativa"
)
abline(v = c(mean(DProy$PuntosTest, na.rm=TRUE),
median(DProy$PuntosTest,na.rm = TRUE)
),
col = c("red", "blue"),
lty = c(2, 1),
lwd = 2)
legend("topright"
, legend = c("Promedio", "Mediana")
, col = c("red", "blue")
, lty = c(2, 1)
, lwd = 2
, bty = "n"
)
genero <- DProy$Género
EnfermoCiclo <- DProy$EnfermoCiclo
tabla <- table(genero, EnfermoCiclo)
mosaicplot(tabla, color = c("red", "blue"), main = "Mosaic Plot: Género vs EnfermoCiclo")
VecesEnfermo <- DProy$VecesEnfermo
PuntosEstres <- DProy$PuntosTest
# Crear el scatter plot
plot(PuntosEstres, VecesEnfermo,
xlab = "Puntos de Estrés", ylab = "Veces Enfermo",
main = "Relación entre Estrés y Enfermedades",
col = "blue", pch = 16)
# Agregar una línea de tendencia
lm_model <- lm(VecesEnfermo ~ PuntosEstres)
abline(lm_model, col = "red")
# Agregar leyenda
legend("topright", legend = "Línea de Tendencia", col = "red", lwd = 1)
NivelEstres <- DProy$NivelEstres
PuntosEstres <- DProy$PuntosTest
# Crear el scatter plot
plot(PuntosEstres, NivelEstres,
xlab = "Puntos de Estrés (Test)", ylab = "Nivel de Estrés (Autoevaluacion)",
main = "Relación entre Estrés autoevaluado y test",
col = "blue", pch = 16)
# Agregar una línea de tendencia
lm_model <- lm(NivelEstres ~ PuntosEstres)
abline(lm_model, col = "red")
# Agregar leyenda
legend("topright", legend = "Línea de Tendencia", col = "red", lwd = 1)
boxplot(PuntosTest ~ EstresExigAcadem, data = DProy,
xlab = "EstresExigAcadem", ylab = "PuntosTest",
main = "Boxplot: EstresExigAcadem vs. PuntosTest")
tb <- DProy %>% group_by(Transport1) %>% summarise (Total_VecesEnfermo= sum(VecesEnfermo, na.rm = T),Total_NivelEstres = sum(NivelEstres, na.rm = T),Total_TestEstres = sum(as.numeric(PuntosTest), na.rm = T)) %>% mutate(Nivel_Total = Total_VecesEnfermo+ Total_NivelEstres+ Total_TestEstres ) %>% arrange(desc(Nivel_Total))
tabla <- table(tb$Transport1, tb$Total_VecesEnfermo)
barplot(tb$Total_VecesEnfermo,
names.arg = tb$Transport1,
xlab = "Transporte",
ylab = "Total Veces Enfermo",
main = "Total Veces Enfermo por Transporte preferido",
col = c("Red", "Blue", "Yellow", "Green"))
boxplot(DProy$PuntosTest ~ DProy$Transport1, data = DProy,
xlab = "Tipo de transporte", ylab = "PuntosTest",
main = "Boxplot de PuntosTest por tipo de transporte")
table(DProy[DProy$Transport1 == "Bus", ][, c("Distrito", "Transport1")])
genero <- DProy$Género
EstresExigAcadem <- DProy$EstresExigAcadem
tabla <- table(genero, EstresExigAcadem)
mosaicplot(tabla, color = c("red", "blue"), main = "Mosaic Plot: Género vs EstresExigAcadem")
View(DProy)
librerias <- c("readr", "car", "dplyr", "stringr", "ggplot2")
not_installed <- librerias[!(librerias %in% installed.packages()[ , "Package"])]
if(length(not_installed)) install.packages(not_installed)
library(readr)
library(car)
library(dplyr)
library(stringr)
library(ggplot2)
DProy <- read_csv("Encuesta - Estrés y enfermedades respiratorias.csv")
#View(DProy)
dim(DProy)
str(DProy)
summary(DProy)
library(dplyr)
names(DProy)
DProy <- rename(DProy, Edad = 'Edad (años)', Estatura = 'Estatura (METROS), por favor agregar \".\" (punto como separador decimal)', Peso = 'Peso (kg),   por favor agregar \".\" (punto como separador decimal)', Distrito = '¿Cuál es el distrito en el que vives actualmente?' )
DProy <- rename(DProy, VecesEnfermo = '¿Cuántas veces en este año has confirmado que te has enfermado?', EnfermoCiclo = '¿Consideras que te enfermas más durante el ciclo académico?' , EnfermoVacación = '¿Consideras que te enfermas más durante las vacaciones?', NivelEstres = '¿Cuál crees que es tu nivel de estrés durante este ciclo académico?', EnfermRespiCampus ='¿Crees que la ubicación de la universidad sea motivo para presentar enfermedades respiratorias?', EnfermResExigenAcadem= '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar dichas enfermedades respiratorias?', EstresExigAcadem = '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar estrés?', Transport1 = 'Primera opción...15' , Transport2 = 'Segunda opción', EnfermHeredit = '¿Presentas alguna enfermedad Hereditaria?', TipoEnfermHeredit = 'Primera opción...37', PuntosTest = 'Realiza el siguiente test y coloca tu puntuación (el número que se encuentra al final de la página), por favor.')
View(DProy)
DProy <- rename(DProy, VecesEnfermo = '¿Cuántas veces en este año has confirmado que te has enfermado?', EnfermoCiclo = '¿Consideras que te enfermas más durante el ciclo académico?' , EnfermoVacación = '¿Consideras que te enfermas más durante las vacaciones?', NivelEstres = '¿Cuál crees que es tu nivel de estrés durante este ciclo académico?', EnfermRespiCampus ='¿Crees que la ubicación de la universidad sea motivo para presentar enfermedades respiratorias?', EnfermResExigenAcadem= '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar dichas enfermedades respiratorias?', EstresExigAcadem = '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar estrés?', Transport1 = 'Primera opción...15' , Transport2 = 'Segunda opción', EnfermHeredit = '¿Presentas alguna enfermedad Hereditaria?', TipoEnfermHeredit = 'Primera opción...18', PuntosTest = 'Realiza el siguiente test y coloca tu puntuación (el número que se encuentra al final de la página), por favor.')
DProy
librerias <- c("readr", "car", "dplyr", "stringr", "ggplot2")
not_installed <- librerias[!(librerias %in% installed.packages()[ , "Package"])]
if(length(not_installed)) install.packages(not_installed)
library(readr)
library(car)
library(dplyr)
library(stringr)
library(ggplot2)
DProy <- read_csv("Encuesta - Estrés y enfermedades respiratorias.csv")
#View(DProy)
dim(DProy)
str(DProy)
summary(DProy)
library(dplyr)
names(DProy)
DProy <- rename(DProy, Edad = 'Edad (años)', Estatura = 'Estatura (METROS), por favor agregar \".\" (punto como separador decimal)', Peso = 'Peso (kg),   por favor agregar \".\" (punto como separador decimal)', Distrito = '¿Cuál es el distrito en el que vives actualmente?' )
DProy <- rename(DProy, VecesEnfermo = '¿Cuántas veces en este año has confirmado que te has enfermado?', EnfermoCiclo = '¿Consideras que te enfermas más durante el ciclo académico?' , EnfermoVacación = '¿Consideras que te enfermas más durante las vacaciones?', NivelEstres = '¿Cuál crees que es tu nivel de estrés durante este ciclo académico?', EnfermRespiCampus ='¿Crees que la ubicación de la universidad sea motivo para presentar enfermedades respiratorias?', EnfermResExigenAcadem= '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar dichas enfermedades respiratorias?', EstresExigAcadem = '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar estrés?', Transport1 = 'Primera opción...15' , Transport2 = 'Segunda opción', EnfermHeredit = '¿Presentas alguna enfermedad Hereditaria?', TipoEnfermHeredit = 'Primera opción...18', PuntosTest = 'Realiza el siguiente test y coloca tu puntuación (el número que se encuentra al final de la página), por favor.')
DProy
names(DProy)
unique(DProy$Estatura)
DProy %>% mutate(Estatura =
ifelse(Estatura == "1:60", "1.60", Estatura
)) -> DProy
DProy %>% mutate(Estatura =
ifelse(Estatura == "1:56", "1.56", Estatura
)) -> DProy
DProy$Estatura = as.numeric(DProy$Estatura)
DProy$Estatura[DProy$Estatura > 2.8 & !is.na(DProy$Estatura)] <- DProy$Estatura[DProy$Estatura > 2.8 & !is.na(DProy$Estatura)]/100
unique(DProy$Estatura)
unique(DProy$Peso)
DProy %>% mutate(Peso =
ifelse(Peso == "79kg", "79", Peso
)) -> DProy
DProy %>% mutate(Peso =
ifelse(Peso == "1.60", NA, Peso
)) -> DProy
DProy %>% mutate(Peso =
ifelse(Peso == "5", NA, Peso
)) -> DProy
DProy$Peso = as.numeric(DProy$Peso)
unique(DProy$Peso)
unique(DProy$PuntosTest)
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "43 de 56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Nivel moderado de estrés", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Nivel moderado de estrés.", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "36-56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Moderado", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "40 a 56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == ".", NA, PuntosTest
)) -> DProy
DProy$PuntosTest = as.numeric(DProy$PuntosTest)
unique(DProy$PuntosTest)
boxplot(DProy$Edad,
horizontal = TRUE,
xlab = "Edad",
notch = TRUE)
promedio <- mean(DProy$Edad)
abline(v = promedio, col = "red", lwd = 2)
legend("topright", legend = c("Promedio"),
lty = c(1, 1), col = c("red"), lwd = 2)
text(promedio, 1, labels = paste("Promedio:", round(promedio, 2)), pos = 3, col = "red")
DProy %>% select(Distrito) %>% group_by(Distrito) %>% summarise(n())
which.max(table(DProy$Distrito))
barplot(table(DProy$Género))
moda = as.numeric(names(table(DProy$VecesEnfermo)[table(DProy$VecesEnfermo) == max(table(DProy$VecesEnfermo), na.rm = TRUE)]))
hist(DProy$VecesEnfermo, prob = TRUE
, main = "Histograma de veces enfermo"
, xlab = "Veces enfermo"
, ylab = "Frecuencia relativa"
)
abline(v = c(mean(DProy$VecesEnfermo, na.rm=FALSE),
median(DProy$VecesEnfermo,na.rm = FALSE)
),
col = c("red", "blue"),
lty = c(2, 1),
lwd = 2)
legend("topright"
, legend = c("Promedio", "Mediana")
, col = c("red", "blue")
, lty = c(2, 1)
, lwd = 2
, bty = "n"
)
hist(DProy$PuntosTest, prob = TRUE
, main = "Histograma de puntos del test"
, xlab = "Puntos del test"
, ylab = "Frecuencia relativa"
)
abline(v = c(mean(DProy$PuntosTest, na.rm=TRUE),
median(DProy$PuntosTest,na.rm = TRUE)
),
col = c("red", "blue"),
lty = c(2, 1),
lwd = 2)
legend("topright"
, legend = c("Promedio", "Mediana")
, col = c("red", "blue")
, lty = c(2, 1)
, lwd = 2
, bty = "n"
)
genero <- DProy$Género
EnfermoCiclo <- DProy$EnfermoCiclo
tabla <- table(genero, EnfermoCiclo)
mosaicplot(tabla, color = c("red", "blue"), main = "Mosaic Plot: Género vs EnfermoCiclo")
VecesEnfermo <- DProy$VecesEnfermo
PuntosEstres <- DProy$PuntosTest
# Crear el scatter plot
plot(PuntosEstres, VecesEnfermo,
xlab = "Puntos de Estrés", ylab = "Veces Enfermo",
main = "Relación entre Estrés y Enfermedades",
col = "blue", pch = 16)
# Agregar una línea de tendencia
lm_model <- lm(VecesEnfermo ~ PuntosEstres)
abline(lm_model, col = "red")
# Agregar leyenda
legend("topright", legend = "Línea de Tendencia", col = "red", lwd = 1)
NivelEstres <- DProy$NivelEstres
PuntosEstres <- DProy$PuntosTest
# Crear el scatter plot
plot(PuntosEstres, NivelEstres,
xlab = "Puntos de Estrés (Test)", ylab = "Nivel de Estrés (Autoevaluacion)",
main = "Relación entre Estrés autoevaluado y test",
col = "blue", pch = 16)
# Agregar una línea de tendencia
lm_model <- lm(NivelEstres ~ PuntosEstres)
abline(lm_model, col = "red")
# Agregar leyenda
legend("topright", legend = "Línea de Tendencia", col = "red", lwd = 1)
boxplot(PuntosTest ~ EstresExigAcadem, data = DProy,
xlab = "EstresExigAcadem", ylab = "PuntosTest",
main = "Boxplot: EstresExigAcadem vs. PuntosTest")
tb <- DProy %>% group_by(Transport1) %>% summarise (Total_VecesEnfermo= sum(VecesEnfermo, na.rm = T),Total_NivelEstres = sum(NivelEstres, na.rm = T),Total_TestEstres = sum(as.numeric(PuntosTest), na.rm = T)) %>% mutate(Nivel_Total = Total_VecesEnfermo+ Total_NivelEstres+ Total_TestEstres ) %>% arrange(desc(Nivel_Total))
tabla <- table(tb$Transport1, tb$Total_VecesEnfermo)
barplot(tb$Total_VecesEnfermo,
names.arg = tb$Transport1,
xlab = "Transporte",
ylab = "Total Veces Enfermo",
main = "Total Veces Enfermo por Transporte preferido",
col = c("Red", "Blue", "Yellow", "Green"))
boxplot(DProy$PuntosTest ~ DProy$Transport1, data = DProy,
xlab = "Tipo de transporte", ylab = "PuntosTest",
main = "Boxplot de PuntosTest por tipo de transporte")
table(DProy[DProy$Transport1 == "Bus", ][, c("Distrito", "Transport1")])
genero <- DProy$Género
EstresExigAcadem <- DProy$EstresExigAcadem
tabla <- table(genero, EstresExigAcadem)
mosaicplot(tabla, color = c("red", "blue"), main = "Mosaic Plot: Género vs EstresExigAcadem")
table(DProy$`Nombre de usuario`)
table(DProy$`Nombre de usuario`) > 1
t <- table(DProy$`Nombre de usuario`)
names(t[t > 1])
librerias <- c("readr", "car", "dplyr", "stringr", "ggplot2")
not_installed <- librerias[!(librerias %in% installed.packages()[ , "Package"])]
if(length(not_installed)) install.packages(not_installed)
library(readr)
library(car)
library(dplyr)
library(stringr)
library(ggplot2)
DProy <- read_csv("Encuesta - Estrés y enfermedades respiratorias.csv")
#View(DProy)
dim(DProy)
str(DProy)
boxplot(DProy$Edad,
horizontal = TRUE,
xlab = "Edad",
notch = TRUE)
librerias <- c("readr", "car", "dplyr", "stringr", "ggplot2")
not_installed <- librerias[!(librerias %in% installed.packages()[ , "Package"])]
if(length(not_installed)) install.packages(not_installed)
library(readr)
library(car)
library(dplyr)
library(stringr)
library(ggplot2)
DProy <- read_csv("Encuesta - Estrés y enfermedades respiratorias.csv")
#View(DProy)
dim(DProy)
str(DProy)
boxplot(DProy$Edad,
horizontal = TRUE,
xlab = "Edad",
notch = TRUE)
librerias <- c("readr", "car", "dplyr", "stringr", "ggplot2")
not_installed <- librerias[!(librerias %in% installed.packages()[ , "Package"])]
if(length(not_installed)) install.packages(not_installed)
library(readr)
library(car)
library(dplyr)
library(stringr)
library(ggplot2)
DProy <- read_csv("Encuesta - Estrés y enfermedades respiratorias.csv")
#View(DProy)
dim(DProy)
str(DProy)
boxplot(DProy$Edad,
horizontal = TRUE,
xlab = "Edad",
notch = TRUE)
librerias <- c("readr", "car", "dplyr", "stringr", "ggplot2")
not_installed <- librerias[!(librerias %in% installed.packages()[ , "Package"])]
if(length(not_installed)) install.packages(not_installed)
library(readr)
library(car)
library(dplyr)
library(stringr)
library(ggplot2)
DProy <- read_csv("Encuesta - Estrés y enfermedades respiratorias.csv")
#View(DProy)
dim(DProy)
str(DProy)
summary(DProy)
library(dplyr)
names(DProy)
DProy <- rename(DProy, Edad = 'Edad (años)', Estatura = 'Estatura (METROS), por favor agregar \".\" (punto como separador decimal)', Peso = 'Peso (kg),   por favor agregar \".\" (punto como separador decimal)', Distrito = '¿Cuál es el distrito en el que vives actualmente?' )
DProy <- rename(DProy, VecesEnfermo = '¿Cuántas veces en este año has confirmado que te has enfermado?', EnfermoCiclo = '¿Consideras que te enfermas más durante el ciclo académico?' , EnfermoVacación = '¿Consideras que te enfermas más durante las vacaciones?', NivelEstres = '¿Cuál crees que es tu nivel de estrés durante este ciclo académico?', EnfermRespiCampus ='¿Crees que la ubicación de la universidad sea motivo para presentar enfermedades respiratorias?', EnfermResExigenAcadem= '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar dichas enfermedades respiratorias?', EstresExigAcadem = '¿Crees que el nivel de exigencia académica en la universidad sea motivo para presentar estrés?', Transport1 = 'Primera opción...15' , Transport2 = 'Segunda opción', EnfermHeredit = '¿Presentas alguna enfermedad Hereditaria?', TipoEnfermHeredit = 'Primera opción...18', PuntosTest = 'Realiza el siguiente test y coloca tu puntuación (el número que se encuentra al final de la página), por favor.')
DProy
names(DProy)
unique(DProy$Estatura)
DProy %>% mutate(Estatura =
ifelse(Estatura == "1:60", "1.60", Estatura
)) -> DProy
DProy %>% mutate(Estatura =
ifelse(Estatura == "1:56", "1.56", Estatura
)) -> DProy
DProy$Estatura = as.numeric(DProy$Estatura)
DProy$Estatura[DProy$Estatura > 2.8 & !is.na(DProy$Estatura)] <- DProy$Estatura[DProy$Estatura > 2.8 & !is.na(DProy$Estatura)]/100
unique(DProy$Estatura)
unique(DProy$Peso)
DProy %>% mutate(Peso =
ifelse(Peso == "79kg", "79", Peso
)) -> DProy
DProy %>% mutate(Peso =
ifelse(Peso == "1.60", NA, Peso
)) -> DProy
DProy %>% mutate(Peso =
ifelse(Peso == "5", NA, Peso
)) -> DProy
DProy$Peso = as.numeric(DProy$Peso)
unique(DProy$Peso)
unique(DProy$PuntosTest)
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "43 de 56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Nivel moderado de estrés", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Nivel moderado de estrés.", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "36-56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "Moderado", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == "40 a 56", NA, PuntosTest
)) -> DProy
DProy %>% mutate(PuntosTest =
ifelse(PuntosTest == ".", NA, PuntosTest
)) -> DProy
DProy$PuntosTest = as.numeric(DProy$PuntosTest)
unique(DProy$PuntosTest)
boxplot(DProy$Edad,
horizontal = TRUE,
xlab = "Edad",
notch = TRUE)
promedio <- mean(DProy$Edad)
abline(v = promedio, col = "red", lwd = 2)
legend("topright", legend = c("Promedio"),
lty = c(1, 1), col = c("red"), lwd = 2)
text(promedio, 1, labels = paste("Promedio:", round(promedio, 2)), pos = 3, col = "red")
DProy %>% select(Distrito) %>% group_by(Distrito) %>% summarise(n())
which.max(table(DProy$Distrito))
barplot(table(DProy$Género))
moda = as.numeric(names(table(DProy$VecesEnfermo)[table(DProy$VecesEnfermo) == max(table(DProy$VecesEnfermo), na.rm = TRUE)]))
hist(DProy$VecesEnfermo, prob = TRUE
, main = "Histograma de veces enfermo"
, xlab = "Veces enfermo"
, ylab = "Frecuencia relativa"
)
abline(v = c(mean(DProy$VecesEnfermo, na.rm=FALSE),
median(DProy$VecesEnfermo,na.rm = FALSE)
),
col = c("red", "blue"),
lty = c(2, 1),
lwd = 2)
legend("topright"
, legend = c("Promedio", "Mediana")
, col = c("red", "blue")
, lty = c(2, 1)
, lwd = 2
, bty = "n"
)
hist(DProy$PuntosTest, prob = TRUE
, main = "Histograma de puntos del test"
, xlab = "Puntos del test"
, ylab = "Frecuencia relativa"
)
abline(v = c(mean(DProy$PuntosTest, na.rm=TRUE),
median(DProy$PuntosTest,na.rm = TRUE)
),
col = c("red", "blue"),
lty = c(2, 1),
lwd = 2)
legend("topright"
, legend = c("Promedio", "Mediana")
, col = c("red", "blue")
, lty = c(2, 1)
, lwd = 2
, bty = "n"
)
genero <- DProy$Género
EnfermoCiclo <- DProy$EnfermoCiclo
tabla <- table(genero, EnfermoCiclo)
mosaicplot(tabla, color = c("red", "blue"), main = "Mosaic Plot: Género vs EnfermoCiclo")
VecesEnfermo <- DProy$VecesEnfermo
PuntosEstres <- DProy$PuntosTest
# Crear el scatter plot
plot(PuntosEstres, VecesEnfermo,
xlab = "Puntos de Estrés", ylab = "Veces Enfermo",
main = "Relación entre Estrés y Enfermedades",
col = "blue", pch = 16)
# Agregar una línea de tendencia
lm_model <- lm(VecesEnfermo ~ PuntosEstres)
abline(lm_model, col = "red")
# Agregar leyenda
legend("topright", legend = "Línea de Tendencia", col = "red", lwd = 1)
NivelEstres <- DProy$NivelEstres
PuntosEstres <- DProy$PuntosTest
# Crear el scatter plot
plot(PuntosEstres, NivelEstres,
xlab = "Puntos de Estrés (Test)", ylab = "Nivel de Estrés (Autoevaluacion)",
main = "Relación entre Estrés autoevaluado y test",
col = "blue", pch = 16)
# Agregar una línea de tendencia
lm_model <- lm(NivelEstres ~ PuntosEstres)
abline(lm_model, col = "red")
# Agregar leyenda
legend("topright", legend = "Línea de Tendencia", col = "red", lwd = 1)
boxplot(PuntosTest ~ EstresExigAcadem, data = DProy,
xlab = "EstresExigAcadem", ylab = "PuntosTest",
main = "Boxplot: EstresExigAcadem vs. PuntosTest")
tb <- DProy %>% group_by(Transport1) %>% summarise (Total_VecesEnfermo= sum(VecesEnfermo, na.rm = T),Total_NivelEstres = sum(NivelEstres, na.rm = T),Total_TestEstres = sum(as.numeric(PuntosTest), na.rm = T)) %>% mutate(Nivel_Total = Total_VecesEnfermo+ Total_NivelEstres+ Total_TestEstres ) %>% arrange(desc(Nivel_Total))
tabla <- table(tb$Transport1, tb$Total_VecesEnfermo)
barplot(tb$Total_VecesEnfermo,
names.arg = tb$Transport1,
xlab = "Transporte",
ylab = "Total Veces Enfermo",
main = "Total Veces Enfermo por Transporte preferido",
col = c("Red", "Blue", "Yellow", "Green"))
boxplot(DProy$PuntosTest ~ DProy$Transport1, data = DProy,
xlab = "Tipo de transporte", ylab = "PuntosTest",
main = "Boxplot de PuntosTest por tipo de transporte")
table(DProy[DProy$Transport1 == "Bus", ][, c("Distrito", "Transport1")])
genero <- DProy$Género
EstresExigAcadem <- DProy$EstresExigAcadem
tabla <- table(genero, EstresExigAcadem)
mosaicplot(tabla, color = c("red", "blue"), main = "Mosaic Plot: Género vs EstresExigAcadem")
