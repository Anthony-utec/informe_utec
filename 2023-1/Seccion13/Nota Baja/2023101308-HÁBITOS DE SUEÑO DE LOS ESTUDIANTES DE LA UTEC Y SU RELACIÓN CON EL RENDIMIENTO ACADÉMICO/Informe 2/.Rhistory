filter(DF,Cant.Cursos == 6)
filter(DF,Cant.Cursos == 7)
filter(DF,Cant.Cursos == 8)
DF$H.Sueño
filter(DF,H.Sueño== 8.00)
filter(DF,H.Sueño == 5.30)
filter(DF,H.Sueño == 6.00)
filter(DF,H.Sueño == 6.30)
filter(DF,H.Sueño == 7.00)
filter(DF,H.Sueño== 4.30)
filter(DF,H.Sueño== 5.00)
filter(DF,H.Sueño == 7.30)
filter(DF,H.Sueño == 4.00)
filter(DF,H.Sueño== 2.30)
filter(DF,H.Sueño == 4.60)
filter(DF,H.Sueño== 7.15)
filter(DF,H.Sueño== 8.30)
filter(DF,H.Sueño == 6.10)
filter(DF,H.Sueño == 5.20)
filter(DF,H.Sueño == 3.00)
filter(DF,H.Sueño == 3.20)
filter(DF,H.Sueño== 10.00)
filter(DF,H.Sueño== 6.50)
filter(DF,H.Sueño == 2.00)
filter(DF,H.Sueño == 6.45)
filter(DF,H.Sueño == 9.00)
filter(DF,H.Sueño == 7.45)
filter(DF,H.Sueño== 15.00)
filter(DF,H.Sueño == 7.40)
filter(DF,H.Sueño== 5.45)
nointervalos <- 5   # Número de intervalos que se desea
amplitud <- 2.00 #valor mínimo
rangointervalos <- amplitud / nointervalos
rangointervalos
print(paste("Los valores de cada grupos van ..."," de ", rangointervalos, " en  ", rangointervalos, " a partir de :", min(DF$H.Sueño)))
tabla.intervalos <- transform(table(cut(DF$H.Sueño, breaks = 5)))
tabla.intervalos
plot(tabla.intervalos, main = "H.sueño en intervalos")
# Filtrar los valores no faltantes (NA)
DF_filtered <- na.omit(DF)
# Calcular la correlación entre las variables filtradas
correlation <- cor(DF_filtered$H.Sueño, DF_filtered$Horas.de.estudio)
print(correlation)
ggplot(DF,aes(x=DF$H.Sueño,y=DF$Horas.de.estudio)) +
geom_point(shape=1) +
labs(title="Gráfico 1: Comparación entre horas de sueño y horas de estudio",x="Horas de sueño",y="Horas de estudio") + theme_light() +
geom_abline(intercept=0, slope=1, col="red")
# La probabilidad que un estudiante duerma 4 horas al día, sobre un promedio de 10 horas. Sería 4/10
dormir4 = 4/10
Prob15semanales = 0.6
Phorasdormidasyestudiadas = Prob15semanales*dormir4
Phorasdormidasyestudiadas
ProbAtalqueB = Phorasdormidasyestudiadas/Prob15semanales
ProbAtalqueB
ProbBtalqueA = Phorasdormidasyestudiadas/dormir4
ProbBtalqueA
# Filtramos la cantidad de gente que se quedaron dormidos mas de una hora en clase
(filter(DF,DF$Cant.D.U>1))
# Podemos visualizar que tenemos 84 observaciones, por lo tanto, 84 estudiantes se quedaron dormidos más de una hora en clase.
Estudiantesdormidosmas1hr = 84
Total = 227
Probabilidad = Estudiantesdormidosmas1hr/Total
Probabilidad
Probdormir8horas  = 18/227
Probdormir8horas
Probdormir5horas  = 11/227
Probdormir5horas
Probdormir6horas  = 45/227
Probdormir6horas
Probdormir7horas  = 44/227
Probdormir7horas
Probdormir4horas  = 4/227
Probdormir4horas
Probdormir2horas  = 1/227
Probdormir2horas
Probb = Probdormir2horas+Probdormir4horas+Probdormir5horas+Probdormir6horas+Probdormir7horas+Probdormir8horas
Probb
Probconjunta = 11/227
table(DF$Cant.Cursos)
DFP<- table(DF$Cant.Cursos)/nrow(DF)
round(DFP,4)
μ <- mean(DF$Cant.Cursos)
σ <- sd(DF$Cant.Cursos)
x2 <- c(8, seq(1,1,length=8),1)
y2 <- c(8, dnorm(seq(1,1,length=8), mean = μ, sd = σ), 1)
curve(dnorm(x, mean = μ, sd = σ), from=0, to=8, ylab="",xlab = "",lwd = 1, main="Cantidad de cursos")
text(x = 7, y = 1, 'P(x < 10)' ,cex = 1)
# Cálculo de la probabilidad utilizando la distribución binomial
P6 <- dbinom(80 , nrow(DF),  sum(DF$Cant.Cursos == "6")/nrow(DF) )
P6
P6*100
P6
n <- 80  # Número de ensayos
p <- P6  # Probabilidad de éxito
valor_esperado <- n * p
# Varianza
varianza <- n * p * (1 - p)
print(valor_esperado)
print(varianza)
plot(dnbinom(0:99 ,40,99/227),type="h",xlab="x",ylab="P(X=k)",main="Función de Probabilidad ")
# Cálculo de la probabilidad utilizando la distribución binomial
P7 <- dbinom(30, nrow(DF),  sum(DF$Cant.Cursos == "7")/nrow(DF) )
P7
P7*100
n <- 30  # Número de ensayos
p <- P7  # Probabilidad de éxito
valor_esperado <- n * p
# Varianza
varianza <- n * p * (1 - p)
print(valor_esperado)
print(varianza)
plot(dnbinom(0:41 ,15,41/227),type="h",xlab="x",ylab="P(X=k)",main="Función de Probabilidad ")
table(DF$Calidad.de.sueño)
DFP<- table(DF$Calidad.de.sueño)/nrow(DF)
round(DFP,4)
plot(dnbinom(0:104,75,104/227),type="h",xlab="x",ylab="P(X=k)",main="Función de Probabilidad ")
table(DF$Calidad.de.sueño)
cat('Probabilidad (phyper(x, M, N − M, n)):', phyper(20,104,123,50),'\n')
cat('Valor esperado (E(X)= n*M/N):', 50*104/227,'\n')
cat('Varianza (V(X) = (n*M/N)(1 − M/N)(N-n)/(N-1)):', (50*(50/227))*(1-(50/227))*(227-50)/(227-1),'\n')
cat('Desviación estándar (D(x)=((n*M/N)(1 − M/N)(N-n)/(N-1))^0.5:', ((50*(50/227))*(1-(50/227))*(227-50)/(227-1))^0.5,'\n')
cat('Probabilidad (phyper(x, M, N − M, n)):', dhyper(x=5,m=21,n=206,k=45),'\n')
cat('Valor esperado (E(X)= n*M/N):', 45*21/227,'\n')
cat('Varianza (V(X) = (n*M/N)(1 − M/N)(N-n)/(N-1)):', (45*(21/227))*(1-(21/227))*(227-45)/(227-1),'\n')
cat('Desviación estándar (D(x)=((n*M/N)(1 − M/N)(N-n)/(N-1))^0.5:', ((45*(21/227))*(1-(21/227))*(227-45)/(227-1))^0.5,'\n')
# Eliminar filas con valores faltantes en la variable "Promedio"
DF_clean <- na.omit(DF$Promedio)
# Cálculo de la mediana y el promedio
median_value <- median(DF_clean)
mean_value <- mean(DF_clean)
# Gráfico de histograma y curva de densidad para la variable "Promedio"
hist(DF_clean, breaks = "FD", probability = TRUE, col = "lightblue", xlab = "Promedio", main = "Distribución de Promedio")
lines(density(DF_clean), col = "red", lwd = 2)
# Agregar mediana y promedio al gráfico
abline(v = median_value, col = "blue", lwd = 2, lty = 2)
abline(v = mean_value, col = "green", lwd = 2, lty = 2)
legend("topright", legend = c(paste0("Mediana = ", median_value), paste0("Promedio = ", mean_value)), col = c("blue", "green"), lwd = 2, lty = 2)
medtd <- mean(DF$Promedio, na.rm = TRUE)
meditd <- median(DF$Promedio, na.rm = TRUE)
print(medtd)
print(meditd)
utd <- mean(DF$Promedio, na.rm = TRUE)
desvtd <- sd(DF$Promedio, na.rm = TRUE)
print(utd)
print(desvtd)
# Calculamos la varianza
vartd <- var(DF$Promedio, na.rm = TRUE)
print(vartd)
vartd2 <- sum((DF$Promedio - medtd)^2, na.rm = TRUE) / (length(DF$Promedio) - sum(is.na(DF$Promedio)))
print(vartd2)
# Calculamos la varianza
vartd <- var(DF$Promedio, na.rm = TRUE)
print(vartd)
# Calculamos la esperanza
espetd <- mean(DF$Promedio, na.rm = TRUE)
print(espetd)
# Parámetros
promedio <- 14.98
desviacion <- 2.71
umbral <- 9
# Cálculo de la probabilidad P(X > 9) utilizando la función de distribución acumulativa (pnorm) y complementando con 1
probabilidad <- 1 - pnorm(umbral, mean = promedio, sd = desviacion)
print(probabilidad)
# Eliminar filas con valores faltantes en la variable "Horas.de.estudio"
DF_clean <- na.omit(DF$Horas.de.estudio)
# Cálculo de la mediana y el promedio
median_value <- median(DF_clean)
mean_value <- mean(DF_clean)
# Gráfico de histograma y curva de densidad para la variable "Horas.de.estudio"
hist(DF_clean, breaks = "FD", probability = TRUE, col = "lightblue", xlab = "Horas de estudio", main = "Distribución de Horas de estudio")
lines(density(DF_clean), col = "red", lwd = 2)
abline(v = median_value, col = "blue", lwd = 2, lty = 2)
abline(v = mean_value, col = "green", lwd = 2, lty = 2)
legend("topright", legend = c(paste0("Mediana = ", median_value), paste0("Promedio = ", mean_value)), col = c("blue", "green"), lwd = 2, lty = 2)
medtd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
meditd <- median(DF$Horas.de.estudio, na.rm = TRUE)
print(medtd)
print(meditd)
utd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
desvtd <- sd(DF$Horas.de.estudio, na.rm = TRUE)
print(utd)
print(desvtd)
# Calculamos la varianza
vartd <- var(DF$Horas.de.estudio, na.rm = TRUE)
print(vartd)
vartd2 <- sum((DF$Horas.de.estudio - medtd)^2, na.rm = TRUE) / (length(DF$Horas.de.estudio) - sum(is.na(DF$Horas.de.estudio)))
print(vartd2)
# Calculamos la varianza
vartd <- var(DF$Horas.de.estudio, na.rm = TRUE)
print(vartd)
# Calculamos la esperanza
espetd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
print(espetd)
#Utilizando los datos proporcionados, podemos utilizar la distribución normal para calcular la probabilidad. Por ejemplo, si estamos interesados en calcular la probabilidad de que un estudiante duerma más de 10 horas al día, podemos utilizar el siguiente código en R:
promedio <- 8.98
desviacion <- 40.75
umbral <- 10
# Cálculo de la probabilidad P(X > X) utilizando la función de distribución acumulativa (pnorm) y complementando con 1
probabilidad <- 1 - pnorm(umbral, mean = promedio, sd = desviacion)
print(probabilidad)
utd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
desvtd <- sd(DF$Horas.de.estudio, na.rm = TRUE)
print(utd)
print(desvtd)
# Calculamos la varianza
vartd <- var(DF$Horas.de.estudio, na.rm = TRUE)
print(vartd)
vartd2 <- sum((DF$Horas.de.estudio - medtd)^2, na.rm = TRUE) / (length(DF$Horas.de.estudio) - sum(is.na(DF$Horas.de.estudio)))
print(vartd2)
# Calculamos la varianza
vartd <- var(DF$Horas.de.estudio, na.rm = TRUE)
print(vartd)
# Calculamos la esperanza
espetd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
print(espetd)
# Calculamos la varianza
vartd <- var(DF$Horas.de.estudio, na.rm = TRUE)
print(vartd)
# Calculamos la esperanza
espetd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
print(espetd)
write_csv(DF, "baselimpia.csv")
DF<-rename(DF,Edad = "¿Qué edad tienes?"
, Sexo = "Sexo:"
, Carrera = "Carrera:"
, Ciclo = "¿Qué ciclo estás cursando?"
, Cant.Cursos = "¿A cuántos cursos te has matriculado?"
, CursosR = "Respecto al ciclo pasado: ¿Reprobaste algún curso?"
, Promedio = "Respecto al último ciclo académico ¿Cuál fue tu promedio ponderado? Usar como separador decimal el punto ( . ). Ingresar el mismo valor que aparece en tu intranet. Ejemplo: 16.54"
, H.Sueño = "Cuántas horas duermes en promedio? El separador es el punto(.). Ejemplo: Si deseas poner 7h30min, ingresar 7.30"
, H.Nocturno = "¿Tienes el mismo horario de sueño nocturno todos los días?"
, T.T.Dormir = "Desde el momento en el que te acuestas, ¿Cuánto tiempo te toma quedarte dormido? Ingresar la cantidad en minutos"
, Cant.D.U = "¿Cuántas veces te has quedado dormido durante clase en la universidad en la última semana?"
, Somnolencia = "¿Sueles sentirte somnoliento(a) durante las clases?"
, Noches.sin.dormir = "¿Cuántas noches no has podido dormir por motivos académicos en el último ciclo?"
, Horas.de.estudio = "¿Cuánto tiempo le dedicas al estudio por semana?(sin contar las horas de clase). Expresado en horas. Ejemplo: Si fuese 7h y 30min, sería 7.30"
, Calidad.de.sueño = "¿Qué tan descansado(a) te sientes al despertar por la mañana?"
, Espacios_de_descanso = "¿Qué espacios de descanso consideras que existen en UTEC?"
, Satisfacción = "¿Qué tan satisfecho te sientes con las áreas de descanso en UTEC?" )
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)
library(dplyr)
library(stringr)
DF<-read_csv("Datos.csv")
names(DF)
DF<-rename(DF,Edad = "¿Qué edad tienes?"
, Sexo = "Sexo:"
, Carrera = "Carrera:"
, Ciclo = "¿Qué ciclo estás cursando?"
, Cant.Cursos = "¿A cuántos cursos te has matriculado?"
, CursosR = "Respecto al ciclo pasado: ¿Reprobaste algún curso?"
, Promedio = "Respecto al último ciclo académico ¿Cuál fue tu promedio ponderado? Usar como separador decimal el punto ( . ). Ingresar el mismo valor que aparece en tu intranet. Ejemplo: 16.54"
, H.Sueño = "Cuántas horas duermes en promedio? El separador es el punto(.). Ejemplo: Si deseas poner 7h30min, ingresar 7.30"
, H.Nocturno = "¿Tienes el mismo horario de sueño nocturno todos los días?"
, T.T.Dormir = "Desde el momento en el que te acuestas, ¿Cuánto tiempo te toma quedarte dormido? Ingresar la cantidad en minutos"
, Cant.D.U = "¿Cuántas veces te has quedado dormido durante clase en la universidad en la última semana?"
, Somnolencia = "¿Sueles sentirte somnoliento(a) durante las clases?"
, Noches.sin.dormir = "¿Cuántas noches no has podido dormir por motivos académicos en el último ciclo?"
, Horas.de.estudio = "¿Cuánto tiempo le dedicas al estudio por semana?(sin contar las horas de clase). Expresado en horas. Ejemplo: Si fuese 7h y 30min, sería 7.30"
, Calidad.de.sueño = "¿Qué tan descansado(a) te sientes al despertar por la mañana?"
, Espacios_de_descanso = "¿Qué espacios de descanso consideras que existen en UTEC?"
, Satisfacción = "¿Qué tan satisfecho te sientes con las áreas de descanso en UTEC?" )
moda_espaciosdescanso <- names(table(DF$Espacios_de_descanso))[which.max(table(DF$Espacios_de_descanso))]
moda_espaciosdescanso
espacios <- c("Piso 11", "Piso 6", "No hay", "Biblioteca", "Comedor", "Salones vacíos", "Piso 1")
espacio_freq <- colSums(DF[, c("Piso11", "Piso6", "NoEspacio", "Biblioteca", "Comedor", "SalonVacio", "Piso1")])
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)
library(dplyr)
library(stringr)
DF<-read_csv("baselimpia.csv")
names(DF)
DF<-rename(DF,Edad = "¿Qué edad tienes?"
, Sexo = "Sexo:"
, Carrera = "Carrera:"
, Ciclo = "¿Qué ciclo estás cursando?"
, Cant.Cursos = "¿A cuántos cursos te has matriculado?"
, CursosR = "Respecto al ciclo pasado: ¿Reprobaste algún curso?"
, Promedio = "Respecto al último ciclo académico ¿Cuál fue tu promedio ponderado? Usar como separador decimal el punto ( . ). Ingresar el mismo valor que aparece en tu intranet. Ejemplo: 16.54"
, H.Sueño = "Cuántas horas duermes en promedio? El separador es el punto(.). Ejemplo: Si deseas poner 7h30min, ingresar 7.30"
, H.Nocturno = "¿Tienes el mismo horario de sueño nocturno todos los días?"
, T.T.Dormir = "Desde el momento en el que te acuestas, ¿Cuánto tiempo te toma quedarte dormido? Ingresar la cantidad en minutos"
, Cant.D.U = "¿Cuántas veces te has quedado dormido durante clase en la universidad en la última semana?"
, Somnolencia = "¿Sueles sentirte somnoliento(a) durante las clases?"
, Noches.sin.dormir = "¿Cuántas noches no has podido dormir por motivos académicos en el último ciclo?"
, Horas.de.estudio = "¿Cuánto tiempo le dedicas al estudio por semana?(sin contar las horas de clase). Expresado en horas. Ejemplo: Si fuese 7h y 30min, sería 7.30"
, Calidad.de.sueño = "¿Qué tan descansado(a) te sientes al despertar por la mañana?"
, Espacios_de_descanso = "¿Qué espacios de descanso consideras que existen en UTEC?"
, Satisfacción = "¿Qué tan satisfecho te sientes con las áreas de descanso en UTEC?" )
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)
library(dplyr)
library(stringr)
DF<-read_csv("baselimpia.csv")
names(DF)
moda_espaciosdescanso <- names(table(DF$Espacios_de_descanso))[which.max(table(DF$Espacios_de_descanso))]
moda_espaciosdescanso
espacios <- c("Piso 11", "Piso 6", "No hay", "Biblioteca", "Comedor", "Salones vacíos", "Piso 1")
espacio_freq <- colSums(DF[, c("Piso11", "Piso6", "NoEspacio", "Biblioteca", "Comedor", "SalonVacio", "Piso1")])
par(mar = c(5, 10, 4, 2) + 0.1)
barplot(espacio_freq, main = "Lugares que los estudiantes consideran espacios de descanso", xlab = "Espacio de Descanso",cex.axis=0.8, ylab = "Frecuencia", col=rainbow(7), cex.names = 0.7, ylim=c(0,200), cex.main=0.8)
DF$Cant.Cursos
filter(DF,Cant.Cursos == 3)
filter(DF,Cant.Cursos == 4)
filter(DF,Cant.Cursos == 5)
filter(DF,Cant.Cursos == 6)
filter(DF,Cant.Cursos == 7)
filter(DF,Cant.Cursos == 8)
DF$H.Sueño
filter(DF,H.Sueño== 8.00)
filter(DF,H.Sueño == 5.30)
filter(DF,H.Sueño == 6.00)
filter(DF,H.Sueño == 6.30)
filter(DF,H.Sueño == 7.00)
filter(DF,H.Sueño== 4.30)
filter(DF,H.Sueño== 5.00)
filter(DF,H.Sueño == 7.30)
filter(DF,H.Sueño == 4.00)
filter(DF,H.Sueño== 2.30)
filter(DF,H.Sueño == 4.60)
filter(DF,H.Sueño== 7.15)
filter(DF,H.Sueño== 8.30)
filter(DF,H.Sueño == 6.10)
filter(DF,H.Sueño == 5.20)
filter(DF,H.Sueño == 3.00)
filter(DF,H.Sueño == 3.20)
filter(DF,H.Sueño== 10.00)
filter(DF,H.Sueño== 6.50)
filter(DF,H.Sueño == 2.00)
filter(DF,H.Sueño == 6.45)
filter(DF,H.Sueño == 9.00)
filter(DF,H.Sueño == 7.45)
filter(DF,H.Sueño== 15.00)
filter(DF,H.Sueño == 7.40)
filter(DF,H.Sueño== 5.45)
nointervalos <- 5   # Número de intervalos que se desea
amplitud <- 2.00 #valor mínimo
rangointervalos <- amplitud / nointervalos
rangointervalos
print(paste("Los valores de cada grupos van ..."," de ", rangointervalos, " en  ", rangointervalos, " a partir de :", min(DF$H.Sueño)))
tabla.intervalos <- transform(table(cut(DF$H.Sueño, breaks = 5)))
tabla.intervalos
plot(tabla.intervalos, main = "H.sueño en intervalos")
# Filtrar los valores no faltantes (NA)
DF_filtered <- na.omit(DF)
# Calcular la correlación entre las variables filtradas
correlation <- cor(DF_filtered$H.Sueño, DF_filtered$Horas.de.estudio)
print(correlation)
ggplot(DF,aes(x=DF$H.Sueño,y=DF$Horas.de.estudio)) +
geom_point(shape=1) +
labs(title="Gráfico 1: Comparación entre horas de sueño y horas de estudio",x="Horas de sueño",y="Horas de estudio") + theme_light() +
geom_abline(intercept=0, slope=1, col="red")
# La probabilidad que un estudiante duerma 4 horas al día, sobre un promedio de 10 horas. Sería 4/10
dormir4 = 4/10
Prob15semanales = 0.6
Phorasdormidasyestudiadas = Prob15semanales*dormir4
Phorasdormidasyestudiadas
ProbAtalqueB = Phorasdormidasyestudiadas/Prob15semanales
ProbAtalqueB
ProbBtalqueA = Phorasdormidasyestudiadas/dormir4
ProbBtalqueA
# Filtramos la cantidad de gente que se quedaron dormidos mas de una hora en clase
(filter(DF,DF$Cant.D.U>1))
# Podemos visualizar que tenemos 84 observaciones, por lo tanto, 84 estudiantes se quedaron dormidos más de una hora en clase.
Estudiantesdormidosmas1hr = 84
Total = 227
Probabilidad = Estudiantesdormidosmas1hr/Total
Probabilidad
Probdormir8horas  = 18/227
Probdormir8horas
Probdormir5horas  = 11/227
Probdormir5horas
Probdormir6horas  = 45/227
Probdormir6horas
Probdormir7horas  = 44/227
Probdormir7horas
Probdormir4horas  = 4/227
Probdormir4horas
Probdormir2horas  = 1/227
Probdormir2horas
Probb = Probdormir2horas+Probdormir4horas+Probdormir5horas+Probdormir6horas+Probdormir7horas+Probdormir8horas
Probb
Probconjunta = 11/227
table(DF$Cant.Cursos)
DFP<- table(DF$Cant.Cursos)/nrow(DF)
round(DFP,4)
μ <- mean(DF$Cant.Cursos)
σ <- sd(DF$Cant.Cursos)
x2 <- c(8, seq(1,1,length=8),1)
y2 <- c(8, dnorm(seq(1,1,length=8), mean = μ, sd = σ), 1)
curve(dnorm(x, mean = μ, sd = σ), from=0, to=8, ylab="",xlab = "",lwd = 1, main="Cantidad de cursos")
text(x = 7, y = 1, 'P(x < 10)' ,cex = 1)
# Cálculo de la probabilidad utilizando la distribución binomial
P6 <- dbinom(80 , nrow(DF),  sum(DF$Cant.Cursos == "6")/nrow(DF) )
P6
P6*100
P6
n <- 80  # Número de ensayos
p <- P6  # Probabilidad de éxito
valor_esperado <- n * p
# Varianza
varianza <- n * p * (1 - p)
print(valor_esperado)
print(varianza)
plot(dnbinom(0:99 ,40,99/227),type="h",xlab="x",ylab="P(X=k)",main="Función de Probabilidad ")
# Cálculo de la probabilidad utilizando la distribución binomial
P7 <- dbinom(30, nrow(DF),  sum(DF$Cant.Cursos == "7")/nrow(DF) )
P7
P7*100
n <- 30  # Número de ensayos
p <- P7  # Probabilidad de éxito
valor_esperado <- n * p
# Varianza
varianza <- n * p * (1 - p)
print(valor_esperado)
print(varianza)
plot(dnbinom(0:41 ,15,41/227),type="h",xlab="x",ylab="P(X=k)",main="Función de Probabilidad ")
table(DF$Calidad.de.sueño)
DFP<- table(DF$Calidad.de.sueño)/nrow(DF)
round(DFP,4)
plot(dnbinom(0:104,75,104/227),type="h",xlab="x",ylab="P(X=k)",main="Función de Probabilidad ")
table(DF$Calidad.de.sueño)
cat('Probabilidad (phyper(x, M, N − M, n)):', phyper(20,104,123,50),'\n')
cat('Valor esperado (E(X)= n*M/N):', 50*104/227,'\n')
cat('Varianza (V(X) = (n*M/N)(1 − M/N)(N-n)/(N-1)):', (50*(50/227))*(1-(50/227))*(227-50)/(227-1),'\n')
cat('Desviación estándar (D(x)=((n*M/N)(1 − M/N)(N-n)/(N-1))^0.5:', ((50*(50/227))*(1-(50/227))*(227-50)/(227-1))^0.5,'\n')
cat('Probabilidad (phyper(x, M, N − M, n)):', dhyper(x=5,m=21,n=206,k=45),'\n')
cat('Valor esperado (E(X)= n*M/N):', 45*21/227,'\n')
cat('Varianza (V(X) = (n*M/N)(1 − M/N)(N-n)/(N-1)):', (45*(21/227))*(1-(21/227))*(227-45)/(227-1),'\n')
cat('Desviación estándar (D(x)=((n*M/N)(1 − M/N)(N-n)/(N-1))^0.5:', ((45*(21/227))*(1-(21/227))*(227-45)/(227-1))^0.5,'\n')
# Eliminar filas con valores faltantes en la variable "Promedio"
DF_clean <- na.omit(DF$Promedio)
# Cálculo de la mediana y el promedio
median_value <- median(DF_clean)
mean_value <- mean(DF_clean)
# Gráfico de histograma y curva de densidad para la variable "Promedio"
hist(DF_clean, breaks = "FD", probability = TRUE, col = "lightblue", xlab = "Promedio", main = "Distribución de Promedio")
lines(density(DF_clean), col = "red", lwd = 2)
# Agregar mediana y promedio al gráfico
abline(v = median_value, col = "blue", lwd = 2, lty = 2)
abline(v = mean_value, col = "green", lwd = 2, lty = 2)
legend("topright", legend = c(paste0("Mediana = ", median_value), paste0("Promedio = ", mean_value)), col = c("blue", "green"), lwd = 2, lty = 2)
medtd <- mean(DF$Promedio, na.rm = TRUE)
meditd <- median(DF$Promedio, na.rm = TRUE)
print(medtd)
print(meditd)
utd <- mean(DF$Promedio, na.rm = TRUE)
desvtd <- sd(DF$Promedio, na.rm = TRUE)
print(utd)
print(desvtd)
# Calculamos la varianza
vartd <- var(DF$Promedio, na.rm = TRUE)
print(vartd)
vartd2 <- sum((DF$Promedio - medtd)^2, na.rm = TRUE) / (length(DF$Promedio) - sum(is.na(DF$Promedio)))
print(vartd2)
# Calculamos la varianza
vartd <- var(DF$Promedio, na.rm = TRUE)
print(vartd)
# Calculamos la esperanza
espetd <- mean(DF$Promedio, na.rm = TRUE)
print(espetd)
# Parámetros
promedio <- 14.98
desviacion <- 2.71
umbral <- 9
# Cálculo de la probabilidad P(X > 9) utilizando la función de distribución acumulativa (pnorm) y complementando con 1
probabilidad <- 1 - pnorm(umbral, mean = promedio, sd = desviacion)
print(probabilidad)
# Eliminar filas con valores faltantes en la variable "Horas.de.estudio"
DF_clean <- na.omit(DF$Horas.de.estudio)
# Cálculo de la mediana y el promedio
median_value <- median(DF_clean)
mean_value <- mean(DF_clean)
# Gráfico de histograma y curva de densidad para la variable "Horas.de.estudio"
hist(DF_clean, breaks = "FD", probability = TRUE, col = "lightblue", xlab = "Horas de estudio", main = "Distribución de Horas de estudio")
lines(density(DF_clean), col = "red", lwd = 2)
abline(v = median_value, col = "blue", lwd = 2, lty = 2)
abline(v = mean_value, col = "green", lwd = 2, lty = 2)
legend("topright", legend = c(paste0("Mediana = ", median_value), paste0("Promedio = ", mean_value)), col = c("blue", "green"), lwd = 2, lty = 2)
medtd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
meditd <- median(DF$Horas.de.estudio, na.rm = TRUE)
print(medtd)
print(meditd)
utd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
desvtd <- sd(DF$Horas.de.estudio, na.rm = TRUE)
print(utd)
print(desvtd)
# Calculamos la varianza
vartd <- var(DF$Horas.de.estudio, na.rm = TRUE)
print(vartd)
vartd2 <- sum((DF$Horas.de.estudio - medtd)^2, na.rm = TRUE) / (length(DF$Horas.de.estudio) - sum(is.na(DF$Horas.de.estudio)))
print(vartd2)
# Calculamos la varianza
vartd <- var(DF$Horas.de.estudio, na.rm = TRUE)
print(vartd)
# Calculamos la esperanza
espetd <- mean(DF$Horas.de.estudio, na.rm = TRUE)
print(espetd)
#Utilizando los datos proporcionados, podemos utilizar la distribución normal para calcular la probabilidad. Por ejemplo, si estamos interesados en calcular la probabilidad de que un estudiante duerma más de 10 horas al día, podemos utilizar el siguiente código en R:
promedio <- 8.98
desviacion <- 40.75
umbral <- 10
# Cálculo de la probabilidad P(X > X) utilizando la función de distribución acumulativa (pnorm) y complementando con 1
probabilidad <- 1 - pnorm(umbral, mean = promedio, sd = desviacion)
print(probabilidad)
write_csv(DF, "baselimpia.csv")
