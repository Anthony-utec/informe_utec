#Primero cargamos nuestras librerías necesarias
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(plotrix)
library(tidyverse)
library(DT)
library(funModeling)
library(ggalt)
library(RColorBrewer)
#Ahora estableceremos nuestro DataBase para trabajar en Rstudio
DB <- read_csv("DBvol2.0.csv")
names(DB)
DB2 <-rename(DB, Edad= "¿Cuántos años tienes?",
Carrera="¿De qué carrera eres?",
Sexo="Selecciona tu género",
Ciclo="¿Qué ciclo estas cursando actualmente?",
Conocimiento_ChatGPT="¿Qué tanto te sientes familiarizado con el sistema de inteligencia artificial - Chat GPT? \n1: Para nada familiarizado\n10: Soy experto en ChatGPT" ,
Frecuencia_de_uso="¿Con qué frecuencia usas \"Chat GPT\" en tu dia a dia?",
Horas_uso_diario="¿Cuantas horas de uso le das a ChatGPT al dia?",
Obtencion_respuestas="¿Siempre obtienes la respuesta que esperas o buscas en \"ChatGPT\"?",
Tiempo_tareas_sin_ChatGPT ="¿Cuánto tiempo te toma hacer tus tareas en general, SIN usar \"ChatGPT\"?",
Rendimiento_academico_SIN_ChatGPT="¿Cómo solian ser tus notas y tu rendimiento academico antes de que existiera \"ChatGPT\"?",
Nota_promedio_TAREAS_SIN_ChatGPT="¿Cuánto de nota promedio sacabas o sacas en tus quizzes o tareas semanales en un Rango de 0 a 20 sin el uso de \"Chat GPT\"? Menciona una nota promedio aproximada.",
Tiempo_tareas_CON_ChatGPT="¿Qué tiempo aproximadamente empleas para realizar tareas con el uso de \"Chat GPT\"?",
Notas_CON_ChatGPT="Actualmente, ¿Cómo te va con tus tareas y notas con el uso de ChatGPT?",
Nota_promedio_CON_ChatGPT= "Actualmente ¿Cuánto de nota promedio sacas en tus quizzes o tareas semanales en un Rango de 0 a 20 con el uso de \"Chat GPT\"? Menciona una nota promedio aproximada y considera todos los cursos en los que podrias usar ChatGPT.",
Aprendizaje_CON_ChatGPT="Responder con sinceridad, ¿Realmente crees que aprendes al usar \"ChatGPT\"? ¿Solo lo usas para que haga tus tareas, sin intentarlo tu mismo?")
names(DB2)
DB3<-DB2%>%select(-c(1,2,13,17))
DB4<-mutate(DB3, Carrera_cor=case_when(Carrera=="Administración y Negocios Digitales"~"Administración y Negocios Digitales", Carrera=="Bioingeniería"~"Bioingeniería", Carrera=="Ciencia de Datos"~"Ciencia de Datos (CS)", Carrera=="Ciencia de Datos (CS)"~"Ciencia de Datos (CS)", Carrera=="DIngeniería ambiental"~"Ingeniería ambiental", Carrera=="Ingeniería ambiental"~"Ingeniería ambiental", Carrera=="Ingeniería Civil"~"Ingeniería Civil", Carrera=="Ingeniería electrónica"~"Ingeniería electrónica", Carrera=="Ingeniería Industrial"~"Ingeniería Industrial", Carrera=="Ingeniería Mecánica"~"Ingeniería Mecánica", Carrera=="Ingeniería Mecatrónica"~"Ingeniería Mecatrónica", Carrera=="Ingeniería Química"~"Ingeniería Química"))
DB4<-mutate(DB4, Conocimiento_ChatGPT_cor=case_when(Conocimiento_ChatGPT=="1"~"1", Conocimiento_ChatGPT=="2"~"1", Conocimiento_ChatGPT=="3"~"1", Conocimiento_ChatGPT=="4"~"2", Conocimiento_ChatGPT=="5"~"2", Conocimiento_ChatGPT=="6"~"2", Conocimiento_ChatGPT=="7"~"2", Conocimiento_ChatGPT=="8"~"3", Conocimiento_ChatGPT=="9"~"3", Conocimiento_ChatGPT=="10"~"3"))
DB4<-mutate(DB4, Conocimiento_ChatGPT_cor=case_when(Conocimiento_ChatGPT=="1"~"1", Conocimiento_ChatGPT=="2"~"1", Conocimiento_ChatGPT=="3"~"1", Conocimiento_ChatGPT=="4"~"2", Conocimiento_ChatGPT=="5"~"2", Conocimiento_ChatGPT=="6"~"2", Conocimiento_ChatGPT=="7"~"2", Conocimiento_ChatGPT=="8"~"3", Conocimiento_ChatGPT=="9"~"3", Conocimiento_ChatGPT=="10"~"3"))
DB4<-mutate(DB4, Obtencion_respuestas_cor=case_when(Obtencion_respuestas=="Aveces"~"A veces", Obtencion_respuestas=="A veces"~"A veces", Obtencion_respuestas=="Sí"~"Sí", Obtencion_respuestas=="No"~"No"))
DB4<-mutate(DB4, Tiempo_tareas_CON_ChatGPT_cor=case_when(Tiempo_tareas_CON_ChatGPT=="0"~"No uso", Tiempo_tareas_CON_ChatGPT=="00"~"No uso", Tiempo_tareas_CON_ChatGPT=="Nada porque no uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo usé para tareas hasta ahora"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo uso para tareas, solo para información"~"No uso", Tiempo_tareas_CON_ChatGPT=="no uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso charGPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="no uso chat gpt"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso chat gpt"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso Chat GPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso ChatGPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso el chatGTP"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso xd"~"No uso", Tiempo_tareas_CON_ChatGPT=="no utilizo"~"No uso", Tiempo_tareas_CON_ChatGPT=="Nunca"~"No uso", Tiempo_tareas_CON_ChatGPT=="Un par de minutos."~"1 hora", Tiempo_tareas_CON_ChatGPT=="1 hora"~"1 hora", Tiempo_tareas_CON_ChatGPT=="Menos de 1 hora"~"1 hora", Tiempo_tareas_CON_ChatGPT=="2 horas"~"2 horas", Tiempo_tareas_CON_ChatGPT=="3 horas"~"Más de 3 horas", Tiempo_tareas_CON_ChatGPT=="Más de 3 horas"~"Más de 3 horas"))
# Verificar el valor actual en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"]
# Corregir el valor de la nota en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"] <- 11
# Verificar que se haya corregido correctamente
DB4[111, "Nota_promedio_CON_ChatGPT"]
DB4<-mutate(DB4,Horas_uso_diario_cor=case_when(Horas_uso_diario=="No uso"~"No uso", Horas_uso_diario=="Menos de 1 hora"~"1 hora", Horas_uso_diario=="1 hora"~"1 hora", Horas_uso_diario=="2 horas"~"2 horas", Horas_uso_diario=="3 horas"~"3 horas",
Horas_uso_diario=="4 horas"~"4 hora",
Horas_uso_diario=="5 horas"~"5 horas",
Horas_uso_diario=="6 horas"~"Más de 5 horas",
Horas_uso_diario=="7 horas"~"Más de 5 horas",
Horas_uso_diario=="Todo el dia"~"Más de 5 horas"))
DB4$Obtencion_respuestas <-NULL
DB4$Horas_uso_diario <-NULL
DB4$Conocimiento_ChatGPT <-NULL
DB4$Carrera<-NULL
DB4$Tiempo_tareas_CON_ChatGPT<-NULL
DB4$Obtencion_respuestas <-NULL
DB4$Horas_uso_diario <-NULL
DB4$Conocimiento_ChatGPT <-NULL
DB4$Carrera<-NULL
DB4$Tiempo_tareas_CON_ChatGPT<-NULL
ggplot(DB4, aes(x = Carrera_cor, y = Nota_promedio_TAREAS_SIN_ChatGPT, fill=Carrera_cor)) +
geom_boxplot() +
xlab("Profesiones") +
ylab("Promedio de Notas sin CHATGPT") +
ggtitle("Diagrama de Cajas: Carrera vs. Promedio de Notas sin CHATGPT")+
theme(plot.title = element_text(face = "bold", size = 15, family = "Arial", vjust = +1)) +
theme(axis.text.x = element_blank()) +
labs(fill = "Carreras") +
scale_y_continuous(breaks = seq(min(DB4$Nota_promedio_TAREAS_SIN_ChatGPT), max(DB4$Nota_promedio_TAREAS_SIN_ChatGPT), by = 1))
ggplot(DB4, aes(x = Carrera_cor, y = Nota_promedio_CON_ChatGPT, fill=Carrera_cor)) +
geom_boxplot() +
xlab("Profesiones") +
ylab("Promedio de Notas con CHATGPT") +
ggtitle("Diagrama de Cajas: Carrera vs. Promedio de Notas con CHATGPT")+
theme(plot.title = element_text(face = "bold", size = 15, family = "Arial", vjust = +1)) +
theme(axis.text.x = element_blank()) +
labs(fill = "Carreras") +
scale_y_continuous(breaks = seq(min(DB4$Nota_promedio_CON_ChatGPT), max(DB4$Nota_promedio_CON_ChatGPT), by = 1))
promedios <- DB4 %>%
group_by(Conocimiento_ChatGPT_cor) %>%
summarize(Promedio_Antes = mean(Nota_promedio_TAREAS_SIN_ChatGPT, na.rm = TRUE),
Promedio_Despues = mean(Nota_promedio_CON_ChatGPT, na.rm = TRUE))
#Primero cargamos nuestras librerías necesarias
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(plotrix)
library(tidyverse)
library(DT)
library(ggalt)
library(RColorBrewer)
#Ahora estableceremos nuestro DataBase para trabajar en Rstudio
DB <- read_csv("DBvol2.0.csv")
names(DB)
DB2 <-rename(DB, Edad= "¿Cuántos años tienes?",
Carrera="¿De qué carrera eres?",
Sexo="Selecciona tu género",
Ciclo="¿Qué ciclo estas cursando actualmente?",
Conocimiento_ChatGPT="¿Qué tanto te sientes familiarizado con el sistema de inteligencia artificial - Chat GPT? \n1: Para nada familiarizado\n10: Soy experto en ChatGPT" ,
Frecuencia_de_uso="¿Con qué frecuencia usas \"Chat GPT\" en tu dia a dia?",
Horas_uso_diario="¿Cuantas horas de uso le das a ChatGPT al dia?",
Obtencion_respuestas="¿Siempre obtienes la respuesta que esperas o buscas en \"ChatGPT\"?",
Tiempo_tareas_sin_ChatGPT ="¿Cuánto tiempo te toma hacer tus tareas en general, SIN usar \"ChatGPT\"?",
Rendimiento_academico_SIN_ChatGPT="¿Cómo solian ser tus notas y tu rendimiento academico antes de que existiera \"ChatGPT\"?",
Nota_promedio_TAREAS_SIN_ChatGPT="¿Cuánto de nota promedio sacabas o sacas en tus quizzes o tareas semanales en un Rango de 0 a 20 sin el uso de \"Chat GPT\"? Menciona una nota promedio aproximada.",
Tiempo_tareas_CON_ChatGPT="¿Qué tiempo aproximadamente empleas para realizar tareas con el uso de \"Chat GPT\"?",
Notas_CON_ChatGPT="Actualmente, ¿Cómo te va con tus tareas y notas con el uso de ChatGPT?",
Nota_promedio_CON_ChatGPT= "Actualmente ¿Cuánto de nota promedio sacas en tus quizzes o tareas semanales en un Rango de 0 a 20 con el uso de \"Chat GPT\"? Menciona una nota promedio aproximada y considera todos los cursos en los que podrias usar ChatGPT.",
Aprendizaje_CON_ChatGPT="Responder con sinceridad, ¿Realmente crees que aprendes al usar \"ChatGPT\"? ¿Solo lo usas para que haga tus tareas, sin intentarlo tu mismo?")
names(DB2)
DB3<-DB2%>%select(-c(1,2,13,17))
names(DB3)
DB4<-mutate(DB3, Carrera_cor=case_when(Carrera=="Administración y Negocios Digitales"~"Administración y Negocios Digitales", Carrera=="Bioingeniería"~"Bioingeniería", Carrera=="Ciencia de Datos"~"Ciencia de Datos (CS)", Carrera=="Ciencia de Datos (CS)"~"Ciencia de Datos (CS)", Carrera=="DIngeniería ambiental"~"Ingeniería ambiental", Carrera=="Ingeniería ambiental"~"Ingeniería ambiental", Carrera=="Ingeniería Civil"~"Ingeniería Civil", Carrera=="Ingeniería electrónica"~"Ingeniería electrónica", Carrera=="Ingeniería Industrial"~"Ingeniería Industrial", Carrera=="Ingeniería Mecánica"~"Ingeniería Mecánica", Carrera=="Ingeniería Mecatrónica"~"Ingeniería Mecatrónica", Carrera=="Ingeniería Química"~"Ingeniería Química"))
DB4<-mutate(DB4, Conocimiento_ChatGPT_cor=case_when(Conocimiento_ChatGPT=="1"~"1", Conocimiento_ChatGPT=="2"~"1", Conocimiento_ChatGPT=="3"~"1", Conocimiento_ChatGPT=="4"~"2", Conocimiento_ChatGPT=="5"~"2", Conocimiento_ChatGPT=="6"~"2", Conocimiento_ChatGPT=="7"~"2", Conocimiento_ChatGPT=="8"~"3", Conocimiento_ChatGPT=="9"~"3", Conocimiento_ChatGPT=="10"~"3"))
DB4<-mutate(DB4, Obtencion_respuestas_cor=case_when(Obtencion_respuestas=="Aveces"~"A veces", Obtencion_respuestas=="A veces"~"A veces", Obtencion_respuestas=="Sí"~"Sí", Obtencion_respuestas=="No"~"No"))
DB4<-mutate(DB4, Tiempo_tareas_CON_ChatGPT_cor=case_when(Tiempo_tareas_CON_ChatGPT=="0"~"No uso", Tiempo_tareas_CON_ChatGPT=="00"~"No uso", Tiempo_tareas_CON_ChatGPT=="Nada porque no uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo usé para tareas hasta ahora"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo uso para tareas, solo para información"~"No uso", Tiempo_tareas_CON_ChatGPT=="no uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso charGPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="no uso chat gpt"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso chat gpt"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso Chat GPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso ChatGPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso el chatGTP"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso xd"~"No uso", Tiempo_tareas_CON_ChatGPT=="no utilizo"~"No uso", Tiempo_tareas_CON_ChatGPT=="Nunca"~"No uso", Tiempo_tareas_CON_ChatGPT=="Un par de minutos."~"1 hora", Tiempo_tareas_CON_ChatGPT=="1 hora"~"1 hora", Tiempo_tareas_CON_ChatGPT=="Menos de 1 hora"~"1 hora", Tiempo_tareas_CON_ChatGPT=="2 horas"~"2 horas", Tiempo_tareas_CON_ChatGPT=="3 horas"~"Más de 3 horas", Tiempo_tareas_CON_ChatGPT=="Más de 3 horas"~"Más de 3 horas"))
# Verificar el valor actual en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"]
# Corregir el valor de la nota en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"] <- 11
# Verificar que se haya corregido correctamente
DB4[111, "Nota_promedio_CON_ChatGPT"]
DB4<-mutate(DB4,Horas_uso_diario_cor=case_when(Horas_uso_diario=="No uso"~"No uso", Horas_uso_diario=="Menos de 1 hora"~"1 hora", Horas_uso_diario=="1 hora"~"1 hora", Horas_uso_diario=="2 horas"~"2 horas", Horas_uso_diario=="3 horas"~"3 horas",
Horas_uso_diario=="4 horas"~"4 hora",
Horas_uso_diario=="5 horas"~"5 horas",
Horas_uso_diario=="6 horas"~"Más de 5 horas",
Horas_uso_diario=="7 horas"~"Más de 5 horas",
Horas_uso_diario=="Todo el dia"~"Más de 5 horas"))
DB4$Obtencion_respuestas <-NULL
DB4$Horas_uso_diario <-NULL
DB4$Conocimiento_ChatGPT <-NULL
DB4$Carrera<-NULL
DB4$Tiempo_tareas_CON_ChatGPT<-NULL
ggplot(DB4, aes(x = Carrera_cor, y = Nota_promedio_TAREAS_SIN_ChatGPT, fill=Carrera_cor)) +
geom_boxplot() +
xlab("Profesiones") +
ylab("Promedio de Notas sin CHATGPT") +
ggtitle("Diagrama de Cajas: Carrera vs. Promedio de Notas sin CHATGPT")+
theme(plot.title = element_text(face = "bold", size = 15, family = "Arial", vjust = +1)) +
theme(axis.text.x = element_blank()) +
labs(fill = "Carreras") +
scale_y_continuous(breaks = seq(min(DB4$Nota_promedio_TAREAS_SIN_ChatGPT), max(DB4$Nota_promedio_TAREAS_SIN_ChatGPT), by = 1))
ggplot(DB4, aes(x = Carrera_cor, y = Nota_promedio_CON_ChatGPT, fill=Carrera_cor)) +
geom_boxplot() +
xlab("Profesiones") +
ylab("Promedio de Notas con CHATGPT") +
ggtitle("Diagrama de Cajas: Carrera vs. Promedio de Notas con CHATGPT")+
theme(plot.title = element_text(face = "bold", size = 15, family = "Arial", vjust = +1)) +
theme(axis.text.x = element_blank()) +
labs(fill = "Carreras") +
scale_y_continuous(breaks = seq(min(DB4$Nota_promedio_CON_ChatGPT), max(DB4$Nota_promedio_CON_ChatGPT), by = 1))
table(DB4$Carrera_cor, DB4$Ciclo)
DB4$Nota_promedio_CON_ChatGPT <- ifelse(DB4$Nota_promedio_CON_ChatGPT>20, 20, DB4$Nota_promedio_CON_ChatGPT)
colores <- brewer.pal(n = length(unique(DB4$Frecuencia_de_uso)), name = "Set1")
ggplot(DB4, aes(x = Frecuencia_de_uso, y = Nota_promedio_CON_ChatGPT, color = Frecuencia_de_uso)) +
geom_point() +
scale_color_manual(values = colores) +
labs(x = "Frecuencia del uso de Chat GPT", y = "Nota promedio con Chat GPT", title = "Diagrama de Dispersión")
mean(DB4$Nota_promedio_CON_ChatGPT)
colores <- brewer.pal(n = length(unique(DB4$Tiempo_tareas_CON_ChatGPT_cor)), name = "Set1")
ggplot(DB4, aes(x = Tiempo_tareas_CON_ChatGPT_cor, y = Nota_promedio_CON_ChatGPT, color = Tiempo_tareas_CON_ChatGPT_cor)) +
geom_point() +
scale_color_manual(values = colores) +
labs(x = "Tiempo que emplean en tarea", y = "Nota promedio con Chat GPT", title = "Diagrama de Dispersión")
promedios <- DB4 %>%
group_by(Conocimiento_ChatGPT_cor) %>%
summarize(Promedio_Antes = mean(Nota_promedio_TAREAS_SIN_ChatGPT, na.rm = TRUE),
Promedio_Despues = mean(Nota_promedio_CON_ChatGPT, na.rm = TRUE))
promedios$Conocimiento_ChatGPT_cor <- factor(promedios$Conocimiento_ChatGPT_cor,
levels = c(1, 2, 3),
labels = c("Poco", "Regular", "Avanzado"))
ggplot(promedios, aes(x = Conocimiento_ChatGPT_cor, y = Promedio_Antes)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.5) +
geom_text(aes(label = round(Promedio_Antes, 2)), vjust = -0.5, color = "black")+
labs(title = "Diagrama de barras de promedios de notas antes del uso de ChatGPT",
x = "Nivel de conocimiento previo",
y = "Promedio de Notas") +
theme_minimal()
ggplot(promedios, aes(x = Conocimiento_ChatGPT_cor, y = Promedio_Despues)) +
geom_bar(stat = "identity", fill = "green", alpha = 0.5) +
geom_text(aes(label = round(Promedio_Despues, 2)), vjust = -0.5, color = "black") +
labs(title = "Diagrama de barras de promedios de notas después del uso de ChatGPT",
x = "Nivel de conocimiento previo",
y = "Promedio de Notas") +
theme_minimal()
resultado_prueba_t <- t.test(DB4$Nota_promedio_TAREAS_SIN_ChatGPT, DB4$Nota_promedio_CON_ChatGPT)
estadisticas <- c(Diferencia_Medias = resultado_prueba_t$estimate,
Valor_p = resultado_prueba_t$p.value,
Intervalo_Confianza = c(resultado_prueba_t$conf.int[1], resultado_prueba_t$conf.int[2]))
estadisticas
# Crear un data frame con las frecuencias
frecuencia_anterior <- table(DB4$Rendimiento_academico_SIN_ChatGPT)
frecuencia_actual <- table(DB4$Notas_CON_ChatGPT)
df <- data.frame(Categoría = c(names(frecuencia_anterior), names(frecuencia_actual)),
Antes_ChatGPT = c(frecuencia_anterior ),
Con_ChatGPT = c(frecuencia_actual))
frecuencia_anterior
frecuencia_actual
# Gráfico de barras con etiquetas de cantidad
nombres <- c("[1][5]", "[2][6]", "[3][7]", "[4][8]", "[1][5]", "[2][6]", "[3][7]", "[4][8]")
ggplot(df, aes(x = Categoría)) +
geom_bar(aes(y = Antes_ChatGPT, fill = "Antes de ChatGPT"), stat = "identity", position = "dodge") +
geom_bar(aes(y = Con_ChatGPT, fill = "Con ChatGPT"), stat = "identity", position = "dodge") +
labs(title = "Diagrama de barras de comparación de Categorías de Notas",
x = "Categoría",
y = "Frecuencia",
fill = "Categoría") +scale_x_discrete(labels = nombres)+
scale_fill_manual(values = c("blue", "green"),
labels = c("Antes de ChatGPT", "Con ChatGPT")) +
geom_text(aes(y = Antes_ChatGPT, label = Antes_ChatGPT), vjust = -0.5, color = "black") +
geom_text(aes(y = Con_ChatGPT, label = Con_ChatGPT), vjust = -0.5, color = "black") +
theme_minimal()
# Cargar el paquete "irr"
library(irr)
# Crear una matriz de clasificación
matriz_clasificacion <- matrix(c(DB4$Rendimiento_academico_SIN_ChatGPT, DB4$Notas_CON_ChatGPT), ncol = 2)
# Calcular el coeficiente de concordancia de Fleiss
kappa <- kappam.fleiss(matriz_clasificacion)$value
kappa
#Primero cargamos nuestras librerías necesarias
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(plotly)
library(plotrix)
library(tidyverse)
library(DT)
library(ggalt)
library(RColorBrewer)
#Ahora estableceremos nuestro DataBase para trabajar en Rstudio
DB <- read_csv("DBvol2.0.csv")
names(DB)
DB2 <-rename(DB, Edad= "¿Cuántos años tienes?",
Carrera="¿De qué carrera eres?",
Sexo="Selecciona tu género",
Ciclo="¿Qué ciclo estas cursando actualmente?",
Conocimiento_ChatGPT="¿Qué tanto te sientes familiarizado con el sistema de inteligencia artificial - Chat GPT? \n1: Para nada familiarizado\n10: Soy experto en ChatGPT" ,
Frecuencia_de_uso="¿Con qué frecuencia usas \"Chat GPT\" en tu dia a dia?",
Horas_uso_diario="¿Cuantas horas de uso le das a ChatGPT al dia?",
Obtencion_respuestas="¿Siempre obtienes la respuesta que esperas o buscas en \"ChatGPT\"?",
Tiempo_tareas_sin_ChatGPT ="¿Cuánto tiempo te toma hacer tus tareas en general, SIN usar \"ChatGPT\"?",
Rendimiento_academico_SIN_ChatGPT="¿Cómo solian ser tus notas y tu rendimiento academico antes de que existiera \"ChatGPT\"?",
Nota_promedio_TAREAS_SIN_ChatGPT="¿Cuánto de nota promedio sacabas o sacas en tus quizzes o tareas semanales en un Rango de 0 a 20 sin el uso de \"Chat GPT\"? Menciona una nota promedio aproximada.",
Tiempo_tareas_CON_ChatGPT="¿Qué tiempo aproximadamente empleas para realizar tareas con el uso de \"Chat GPT\"?",
Notas_CON_ChatGPT="Actualmente, ¿Cómo te va con tus tareas y notas con el uso de ChatGPT?",
Nota_promedio_CON_ChatGPT= "Actualmente ¿Cuánto de nota promedio sacas en tus quizzes o tareas semanales en un Rango de 0 a 20 con el uso de \"Chat GPT\"? Menciona una nota promedio aproximada y considera todos los cursos en los que podrias usar ChatGPT.",
Aprendizaje_CON_ChatGPT="Responder con sinceridad, ¿Realmente crees que aprendes al usar \"ChatGPT\"? ¿Solo lo usas para que haga tus tareas, sin intentarlo tu mismo?")
names(DB2)
DB3<-DB2%>%select(-c(1,2,13,17))
names(DB3)
DB4<-mutate(DB3, Carrera_cor=case_when(Carrera=="Administración y Negocios Digitales"~"Administración y Negocios Digitales", Carrera=="Bioingeniería"~"Bioingeniería", Carrera=="Ciencia de Datos"~"Ciencia de Datos (CS)", Carrera=="Ciencia de Datos (CS)"~"Ciencia de Datos (CS)", Carrera=="DIngeniería ambiental"~"Ingeniería ambiental", Carrera=="Ingeniería ambiental"~"Ingeniería ambiental", Carrera=="Ingeniería Civil"~"Ingeniería Civil", Carrera=="Ingeniería electrónica"~"Ingeniería electrónica", Carrera=="Ingeniería Industrial"~"Ingeniería Industrial", Carrera=="Ingeniería Mecánica"~"Ingeniería Mecánica", Carrera=="Ingeniería Mecatrónica"~"Ingeniería Mecatrónica", Carrera=="Ingeniería Química"~"Ingeniería Química"))
DB4<-mutate(DB4, Conocimiento_ChatGPT_cor=case_when(Conocimiento_ChatGPT=="1"~"1", Conocimiento_ChatGPT=="2"~"1", Conocimiento_ChatGPT=="3"~"1", Conocimiento_ChatGPT=="4"~"2", Conocimiento_ChatGPT=="5"~"2", Conocimiento_ChatGPT=="6"~"2", Conocimiento_ChatGPT=="7"~"2", Conocimiento_ChatGPT=="8"~"3", Conocimiento_ChatGPT=="9"~"3", Conocimiento_ChatGPT=="10"~"3"))
DB4<-mutate(DB4, Obtencion_respuestas_cor=case_when(Obtencion_respuestas=="Aveces"~"A veces", Obtencion_respuestas=="A veces"~"A veces", Obtencion_respuestas=="Sí"~"Sí", Obtencion_respuestas=="No"~"No"))
DB4<-mutate(DB4, Tiempo_tareas_CON_ChatGPT_cor=case_when(Tiempo_tareas_CON_ChatGPT=="0"~"No uso", Tiempo_tareas_CON_ChatGPT=="00"~"No uso", Tiempo_tareas_CON_ChatGPT=="Nada porque no uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo usé para tareas hasta ahora"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No lo uso para tareas, solo para información"~"No uso", Tiempo_tareas_CON_ChatGPT=="no uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso charGPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="no uso chat gpt"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso chat gpt"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso Chat GPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso ChatGPT"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso el chatGTP"~"No uso", Tiempo_tareas_CON_ChatGPT=="No uso xd"~"No uso", Tiempo_tareas_CON_ChatGPT=="no utilizo"~"No uso", Tiempo_tareas_CON_ChatGPT=="Nunca"~"No uso", Tiempo_tareas_CON_ChatGPT=="Un par de minutos."~"1 hora", Tiempo_tareas_CON_ChatGPT=="1 hora"~"1 hora", Tiempo_tareas_CON_ChatGPT=="Menos de 1 hora"~"1 hora", Tiempo_tareas_CON_ChatGPT=="2 horas"~"2 horas", Tiempo_tareas_CON_ChatGPT=="3 horas"~"Más de 3 horas", Tiempo_tareas_CON_ChatGPT=="Más de 3 horas"~"Más de 3 horas"))
# Verificar el valor actual en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"]
# Corregir el valor de la nota en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"] <- 11
# Verificar que se haya corregido correctamente
DB4[111, "Nota_promedio_CON_ChatGPT"]
DB4<-mutate(DB4,Horas_uso_diario_cor=case_when(Horas_uso_diario=="No uso"~"No uso", Horas_uso_diario=="Menos de 1 hora"~"1 hora", Horas_uso_diario=="1 hora"~"1 hora", Horas_uso_diario=="2 horas"~"2 horas", Horas_uso_diario=="3 horas"~"3 horas",
Horas_uso_diario=="4 horas"~"4 hora",
Horas_uso_diario=="5 horas"~"5 horas",
Horas_uso_diario=="6 horas"~"Más de 5 horas",
Horas_uso_diario=="7 horas"~"Más de 5 horas",
Horas_uso_diario=="Todo el dia"~"Más de 5 horas"))
DB4$Obtencion_respuestas <-NULL
DB4$Horas_uso_diario <-NULL
DB4$Conocimiento_ChatGPT <-NULL
DB4$Carrera<-NULL
DB4$Tiempo_tareas_CON_ChatGPT<-NULL
ggplot(DB4, aes(x = Carrera_cor, y = Nota_promedio_TAREAS_SIN_ChatGPT, fill=Carrera_cor)) +
geom_boxplot() +
xlab("Profesiones") +
ylab("Promedio de Notas sin CHATGPT") +
ggtitle("Diagrama de Cajas: Carrera vs. Promedio de Notas sin CHATGPT")+
theme(plot.title = element_text(face = "bold", size = 15, family = "Arial", vjust = +1)) +
theme(axis.text.x = element_blank()) +
labs(fill = "Carreras") +
scale_y_continuous(breaks = seq(min(DB4$Nota_promedio_TAREAS_SIN_ChatGPT), max(DB4$Nota_promedio_TAREAS_SIN_ChatGPT), by = 1))
ggplot(DB4, aes(x = Carrera_cor, y = Nota_promedio_CON_ChatGPT, fill=Carrera_cor)) +
geom_boxplot() +
xlab("Profesiones") +
ylab("Promedio de Notas con CHATGPT") +
ggtitle("Diagrama de Cajas: Carrera vs. Promedio de Notas con CHATGPT")+
theme(plot.title = element_text(face = "bold", size = 15, family = "Arial", vjust = +1)) +
theme(axis.text.x = element_blank()) +
labs(fill = "Carreras") +
scale_y_continuous(breaks = seq(min(DB4$Nota_promedio_CON_ChatGPT), max(DB4$Nota_promedio_CON_ChatGPT), by = 1))
table(DB4$Carrera_cor, DB4$Ciclo)
DB4$Nota_promedio_CON_ChatGPT <- ifelse(DB4$Nota_promedio_CON_ChatGPT>20, 20, DB4$Nota_promedio_CON_ChatGPT)
colores <- brewer.pal(n = length(unique(DB4$Frecuencia_de_uso)), name = "Set1")
ggplot(DB4, aes(x = Frecuencia_de_uso, y = Nota_promedio_CON_ChatGPT, color = Frecuencia_de_uso)) +
geom_point() +
scale_color_manual(values = colores) +
labs(x = "Frecuencia del uso de Chat GPT", y = "Nota promedio con Chat GPT", title = "Diagrama de Dispersión")
mean(DB4$Nota_promedio_CON_ChatGPT)
colores <- brewer.pal(n = length(unique(DB4$Tiempo_tareas_CON_ChatGPT_cor)), name = "Set1")
ggplot(DB4, aes(x = Tiempo_tareas_CON_ChatGPT_cor, y = Nota_promedio_CON_ChatGPT, color = Tiempo_tareas_CON_ChatGPT_cor)) +
geom_point() +
scale_color_manual(values = colores) +
labs(x = "Tiempo que emplean en tarea", y = "Nota promedio con Chat GPT", title = "Diagrama de Dispersión")
promedios <- DB4 %>%
group_by(Conocimiento_ChatGPT_cor) %>%
summarize(Promedio_Antes = mean(Nota_promedio_TAREAS_SIN_ChatGPT, na.rm = TRUE),
Promedio_Despues = mean(Nota_promedio_CON_ChatGPT, na.rm = TRUE))
promedios$Conocimiento_ChatGPT_cor <- factor(promedios$Conocimiento_ChatGPT_cor,
levels = c(1, 2, 3),
labels = c("Poco", "Regular", "Avanzado"))
ggplot(promedios, aes(x = Conocimiento_ChatGPT_cor, y = Promedio_Antes)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.5) +
geom_text(aes(label = round(Promedio_Antes, 2)), vjust = -0.5, color = "black")+
labs(title = "Diagrama de barras de promedios de notas antes del uso de ChatGPT",
x = "Nivel de conocimiento previo",
y = "Promedio de Notas") +
theme_minimal()
ggplot(promedios, aes(x = Conocimiento_ChatGPT_cor, y = Promedio_Despues)) +
geom_bar(stat = "identity", fill = "green", alpha = 0.5) +
geom_text(aes(label = round(Promedio_Despues, 2)), vjust = -0.5, color = "black") +
labs(title = "Diagrama de barras de promedios de notas después del uso de ChatGPT",
x = "Nivel de conocimiento previo",
y = "Promedio de Notas") +
theme_minimal()
resultado_prueba_t <- t.test(DB4$Nota_promedio_TAREAS_SIN_ChatGPT, DB4$Nota_promedio_CON_ChatGPT)
estadisticas <- c(Diferencia_Medias = resultado_prueba_t$estimate,
Valor_p = resultado_prueba_t$p.value,
Intervalo_Confianza = c(resultado_prueba_t$conf.int[1], resultado_prueba_t$conf.int[2]))
estadisticas
# Crear un data frame con las frecuencias
frecuencia_anterior <- table(DB4$Rendimiento_academico_SIN_ChatGPT)
frecuencia_actual <- table(DB4$Notas_CON_ChatGPT)
df <- data.frame(Categoría = c(names(frecuencia_anterior), names(frecuencia_actual)),
Antes_ChatGPT = c(frecuencia_anterior ),
Con_ChatGPT = c(frecuencia_actual))
frecuencia_anterior
frecuencia_actual
# Gráfico de barras con etiquetas de cantidad
nombres <- c("[1][5]", "[2][6]", "[3][7]", "[4][8]", "[1][5]", "[2][6]", "[3][7]", "[4][8]")
ggplot(df, aes(x = Categoría)) +
geom_bar(aes(y = Antes_ChatGPT, fill = "Antes de ChatGPT"), stat = "identity", position = "dodge") +
geom_bar(aes(y = Con_ChatGPT, fill = "Con ChatGPT"), stat = "identity", position = "dodge") +
labs(title = "Diagrama de barras de comparación de Categorías de Notas",
x = "Categoría",
y = "Frecuencia",
fill = "Categoría") +scale_x_discrete(labels = nombres)+
scale_fill_manual(values = c("blue", "green"),
labels = c("Antes de ChatGPT", "Con ChatGPT")) +
geom_text(aes(y = Antes_ChatGPT, label = Antes_ChatGPT), vjust = -0.5, color = "black") +
geom_text(aes(y = Con_ChatGPT, label = Con_ChatGPT), vjust = -0.5, color = "black") +
theme_minimal()
# Cargar el paquete "irr"
library(irr)
# Crear una matriz de clasificación
matriz_clasificacion <- matrix(c(DB4$Rendimiento_academico_SIN_ChatGPT, DB4$Notas_CON_ChatGPT), ncol = 2)
# Calcular el coeficiente de concordancia de Fleiss
kappa <- kappam.fleiss(matriz_clasificacion)$value
kappa
# Verificar el valor actual en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"]
# Corregir el valor de la nota en la fila 111 de la columna "Notas_CON_ChatGPT"
DB4[111, "Nota_promedio_CON_ChatGPT"] <- 11
# Verificar que se haya corregido correctamente
DB4[111, "Nota_promedio_CON_ChatGPT"]
