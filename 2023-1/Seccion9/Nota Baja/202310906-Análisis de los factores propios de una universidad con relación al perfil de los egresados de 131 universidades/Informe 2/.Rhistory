EMTiempo
frec = 0
prob = 0
EMTiempo$`Tiempo de búsqueda del primer empleo en meses` <- as.numeric(EMTiempo$`Tiempo de búsqueda del primer empleo en meses`)
for(x in EMTiempo$`Tiempo de búsqueda del primer empleo en meses`){
if (EMTiempo$`Tiempo de búsqueda del primer empleo en meses`[x] <= 6){
frec = frec+EMTiempo$Frecuencia[x]
prob = prob+EMTiempo$Probabilidad[x]
}}
EATiempo <- data.frame(`Tiempo de búsqueda del primer empleo en meses`=c('Como máximo 6'), Frecuencia = frec, Probabilidad= prob)
EATiempo
P_A = EMBolsa2$Probabilidad[3]
P_B = EATiempo$Probabilidad[1]
cat(
paste(
"a) La probabilidad de seleccionar a un egresado que sí accedió a la bolsa de trabajo de la universidad en la muestra es P(A) =", r(P_A), "\n\n",
"b) La probabilidad de seleccionar a un egresado que no accedió a la bolsa de trabajo o no existió en la universidad en la muestra es 1-P(A) =", r(1 - P_A), "\n\n",
"c) La probabilidad de que un egresado que sí accedió a la bolsa de trabajo haya encontrado su primer empleo en máximo 6 meses es  P(A)P(B) =", r(P_A*P_B), "\n\n",
"d) La probabilidad de que un egresado que no tuvo acceso a la bolsa de trabajo o no existe en su universidad haya encontrado su primer empleo en máximo 6 meses es P(B)*(1-P(A)) =", r(P_B*(1-P_A))
)
)
librerias <- c("plyr", "tidyverse", "knitr", "agricolae", "ggplot2", "haven")
for (libreria in librerias) {
if (!require(libreria, character.only = TRUE)) {
install.packages(libreria)
library(libreria, character.only = TRUE)
} else {
library(libreria, character.only = TRUE)
}
}
r <- function(x){
return (round(x, 2))
}
cv <- function(x){
return(sd(x, na.rm=TRUE)/mean(x, na.rm=TRUE)) # na.rm=TRUE (no toma los NA)
}
library(dplyr)
# Primero, cargamos la base de datos limpia
DataFinal <- read_sav("DataLimpia.sav")
# Los datos "" son reemplazados por NA
DataFinal[] <- lapply(DataFinal, function(x) ifelse(x == "", NA, x))
# Trabajamos sin contar los NA
tb_titulacion = data.frame(stringsAsFactors=FALSE,
"Estado de Titulación" = c("No","Sí","Total"),
"fi" = c(1687,1618,3305),
"Porcentaje" = c(0.51*100,0.49*100,(0.51*100+0.49*100)))
tb_titulacion
tb_descrip = data.frame(stringsAsFactors=FALSE,
"Descriptores numéricos" = c("Media","Mediana","Coeficiente de variación","Desviación estándar"),
"Tiempo de búsqueda" = c(mean(DataFinal$Tiempo, na.rm=T),median(DataFinal$Tiempo, na.rm=T),cv(DataFinal$Tiempo),sd(DataFinal$Tiempo, na.rm=T)),
"Horas semanales en el primer empleo" = c(mean(DataFinal$HorasSemana, na.rm=T),median(DataFinal$HorasSemana, na.rm=T),cv(DataFinal$HorasSemana),sd(DataFinal$HorasSemana, na.rm=T)))
tb_descrip
tb_bolsa = data.frame(stringsAsFactors=FALSE,
"Acceso a la bolsa de trabajo" = c("Sí","No","No existe","Total"),
"fi"= c(1157,2592,123,3872),
"Porcentaje" = c(0.2988*100,0.6694*100,0.0318*100,(0.2988+0.6694+0.0318)*100))
tb_bolsa
tabtitulacionypracticas<-table(DataFinal$Titulación, DataFinal$Práticas)
tabtitulacionypracticas
barplot(tabtitulacionypracticas,
main="Titulación y la cantidad de meses en los que se realizó prácticas",
xlab="Duración de prácticas (en meses)",
ylab="Número de egresados",
legend = c("No titulado", "Titulado"))
intervalos <- c(0.00, 750.0, 1000.00, 1500.00, 2500.00, 3500.00, 4500.00, 5500.00, 6500.00, 10000)
labels_intervalos <- c("(0, 750]", "(750, 1000]", "(1000, 1500]", "(1500, 2500]", "(2500, 3500]", "(3500, 4500]", "(4500, 5500]", "(5500, 6500]", "(6500 a más)")
Ingreso_intervalos <- cut(DataFinal$Ingreso, intervalos, labels = labels_intervalos, include.lowest = T, right = T)
tabIngresoYtitulo <- table(Ingreso_intervalos, DataFinal$Titulación)
tabIngresoYtitulo
Equivalencias <- c("1", "2", "3", "4", "5", "6", "7", "8", "9")
Ingreso_visual <- cut(DataFinal$Ingreso, intervalos, labels = Equivalencias, include.lowest = T, right = T)
tabIngresoYtitulo2 <- table(Ingreso_visual, DataFinal$Titulación)
mosaicplot(tabIngresoYtitulo2, main="Titulación vs Ingreso bruto mensual \n en el primer empleo como egresado",col=c("coral2","cadetblue4"), xlab='Ingreso bruto mensual (en soles)', ylab='Titulación')
ggplot(DataFinal, aes(x = BolsaTrabajo, y = Tiempo, fill = BolsaTrabajo)) +
geom_violin(color = "black", alpha = 0.8) +
geom_boxplot(width = 0.2, color = "black", fill = "white", alpha = 0.3, outlier.colour = "red") +
labs(title = "Acceso a la bolsa de trabajo proporcionada por la universidad \n y el tiempo de búsqueda del primer empleo después del egreso",
x = "Acceso a bolsa de trabajo",
y = "Tiempo de búsqueda (en meses)") +
scale_fill_manual(values = c("Sí" = "lightblue", "No" = "lightgreen", "No existe" ="lightpink"))
plot(DataFinal$Tiempo~DataFinal$Práticas, col = "royalblue4", xlab='Tiempo de prácticas (en meses)', ylab='Tiempo de búsqueda (en meses)', main='Tiempo de búsqueda del primer empleo después del empleo \n según el n° total de meses de prácticas pre profesionales realizadas', cex.main = 1)
abline(lm(DataFinal$Tiempo~DataFinal$Práticas,data=DataFinal), col = 'indianred1')
cat("Coeficiente de correlación: ", cor(complete.cases(DataFinal$Tiempo), complete.cases(DataFinal$Práticas)))
T <- sum(complete.cases(DataFinal$HorasSemana))
cat('Cantidad de observaciones sin NA: ', T)
# ESPACIO MUESTRAL
EMHoras <- data.frame(table(DataFinal$HorasSemana))
EMHoras <- rename(EMHoras, 'Horas a la semana'=Var1, Frecuencia=Freq)
EMHoras
EMHoras2 <- mutate(EMHoras, Probabilidad = Frecuencia/T)
EMHoras2
frec = 0
prob = 0
EMHoras2$`Horas a la semana` <- as.numeric(EMHoras2$`Horas a la semana`)
for(x in EMHoras2$`Horas a la semana`){
if (EMHoras2$`Horas a la semana`[x] <= 48){
frec = frec+EMHoras2$Frecuencia[x]
prob = prob+EMHoras2$Probabilidad[x]
}}
EAHoras <- data.frame('Horas de trabajo a la semana'=c('Más de 48', 'Menos de 48'), Frecuencia = c(frec, T-frec), Probabilidad= c(prob, 1-prob)) # Por complemento
EAHoras
T2 <- sum(complete.cases(DataFinal$BolsaTrabajo))
cat('Cantidad de observaciones sin NA: ', T2)
# ESPACIO MUESTRAL
EMBolsa <- data.frame(table(DataFinal$BolsaTrabajo))
EMBolsa <- rename(EMBolsa, 'Acceso a bolsa de trabajo'=Var1, Frecuencia=Freq)
EMBolsa
EMBolsa2 <- mutate(EMBolsa, Probabilidad = Frecuencia/T2)
EMBolsa2
# VARIABLE PRÁCTICAS
EMPrácticas <- data.frame(table(DataFinal$Práticas))
EMPrácticas <- rename(EMPrácticas, 'Meses de prácticas pre profesionales'=Var1, Frecuencia=Freq)
EMPrácticas <- mutate(EMPrácticas, Probabilidad = Frecuencia/sum(complete.cases(DataFinal$Práticas)))
EMPrácticas
# VARIABLE TITULACIÓN
EMTitulación <- data.frame(table(DataFinal$Titulación))
EMTitulación <- rename(EMTitulación, 'Estado de titulación'=Var1, Frecuencia=Freq)
EMTitulación<- mutate(EMTitulación, Probabilidad = Frecuencia/sum(complete.cases(DataFinal$Titulación)))
EMTitulación
frec = 0
prob = 0
EMPrácticas$`Meses de prácticas pre profesionales` <- as.numeric(EMPrácticas$`Meses de prácticas pre profesionales`)
for(x in EMPrácticas$`Meses de prácticas pre profesionales`){
if (EMPrácticas$`Meses de prácticas pre profesionales`[x] >= 3){
frec = frec+EMPrácticas$Frecuencia[x]
prob = prob+EMPrácticas$Probabilidad[x]
}}
EAPrácticas <- data.frame(`Meses de prácticas pre profesionales`=c('Como mínimo 3'), Frecuencia = frec, Probabilidad= prob)
EAPrácticas
P_A = EAPrácticas$Probabilidad[1]
P_B = EMTitulación$Probabilidad[2]
cat(
paste(
"a) La probabilidad de seleccionar a un egresado titulado en la muestra es P(B) =", r(P_B), "\n\n",
"b) La probabilidad de seleccionar a un egresado no titulado en la muestra es 1-P(B) =", r(1 - P_B), "\n\n",
"c) La probabilidad de que un egresado titulado haya realizado como mínimo 3 meses de prácticas pre-profesionales es P(A)P(B) =", r(P_A*P_B), "\n\n",
"d) La probabilidad de que un egresado no titulado haya realizado como mínimo 3 meses de prácticas pre-profesionales es P(A)*(1-P(B)) =", r(P_A*(1-P_B))
)
)
(P_B*(P_A*P_B))+((1 - P_B*(P_A*(1-P_B))))
EMBolsa2
EMTiempo<- data.frame(table(DataFinal$Tiempo))
EMTiempo <- rename(EMTiempo, 'Tiempo de búsqueda del primer empleo en meses'=Var1, Frecuencia=Freq)
EMTiempo<- mutate(EMTiempo, Probabilidad = Frecuencia/sum(complete.cases(DataFinal$Tiempo)))
EMTiempo
frec = 0
prob = 0
EMTiempo$`Tiempo de búsqueda del primer empleo en meses` <- as.numeric(EMTiempo$`Tiempo de búsqueda del primer empleo en meses`)
for(x in EMTiempo$`Tiempo de búsqueda del primer empleo en meses`){
if (EMTiempo$`Tiempo de búsqueda del primer empleo en meses`[x] <= 6){
frec = frec+EMTiempo$Frecuencia[x]
prob = prob+EMTiempo$Probabilidad[x]
}}
EATiempo <- data.frame(`Tiempo de búsqueda del primer empleo en meses`=c('Como máximo 6'), Frecuencia = frec, Probabilidad= prob)
EATiempo
P_A = EMBolsa2$Probabilidad[3]
P_B = EATiempo$Probabilidad[1]
cat(
paste(
"a) La probabilidad de seleccionar a un egresado que sí accedió a la bolsa de trabajo de la universidad en la muestra es P(A) =", r(P_A), "\n\n",
"b) La probabilidad de seleccionar a un egresado que no accedió a la bolsa de trabajo o no existió en la universidad en la muestra es 1-P(A) =", r(1 - P_A), "\n\n",
"c) La probabilidad de que un egresado que sí accedió a la bolsa de trabajo haya encontrado su primer empleo en máximo 6 meses es  P(A)P(B) =", r(P_A*P_B), "\n\n",
"d) La probabilidad de que un egresado que no tuvo acceso a la bolsa de trabajo o no existe en su universidad haya encontrado su primer empleo en máximo 6 meses es P(B)*(1-P(A)) =", r(P_B*(1-P_A))
)
)
x = sum(complete.cases(DataFinal$Titulación))
p = EMTitulación$Frecuencia[2]/n
x = sum(complete.cases(DataFinal$Titulación))
p = EMTitulación$Frecuencia[2]/n
n = sum(complete.cases(DataFinal$Titulación))
x <- 0:n
p = EMTitulación$Frecuencia[2]/n
cat('X ~ N(', x, ',', p, ')')
x = sum(complete.cases(DataFinal$Titulación))
p = EMTitulación$Frecuencia[2]/n
cat('X ~ N(', x, ',', p, ')')
help(dgeom)
x = sum(complete.cases(DataFinal$Titulación))
p = EMTitulación$Frecuencia[2]/n
cat('X ~ N(', x, ',', p, ')')
n = sum(complete.cases(DataFinal$Titulación))
x <- 0:n
p = EMTitulación$Frecuencia[2]/n
cat('X ~ N(', x, ',', p, ')')
n = sum(complete.cases(DataFinal$Titulación))
p = EMTitulación$Frecuencia[2]/n
x = 1/p-1
cat('X ~ N(', x, ',', p, ')')
n = sum(complete.cases(DataFinal$Titulación))
p = EMTitulación$Frecuencia[2]/n
x = 1/p-1
cat('X ~ N(', x, ',', p, ')')
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,30), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,30), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), ylim(0,100), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), ylim=c(0,100), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), ylim=c(0,50), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), ylim=c(0,30), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), ylim=c(0,1), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), ylim=c(0,0.7), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
# Calcular el valor de la función de probabilidad
x <- 0:n
y <- dgeom(x, p)
# Graficar la función de densidad
plot(x, y, xlim=c(0,40), ylim=c(0,0.6), type="h", lwd=2, xlab="Número de ensayos hasta el primer éxito", ylab="Probabilidad", main="Función de densidad de una distribución geométrica")
ES = 1/p
V = (1-p)^(x-1)*p
CV = V/ES
ES
V
CV
ES = 1/p
V = (1-p)^(x-1)*p
CV = V/ES
ES
V
ES = 1/p
V = (1-p)^(x-1)*p
CV = V/ES
ES
ES = 1/p
V = (1-p)/(p^2)
CV = V/ES
ES
V
CV
ES = 1/p
V = (1-p)/(p^2)
CV = sqrt(V)/(1/p)
ES
V
CV
n = sum(complete.cases(DataFinal$BolsaTrabajo))
p = EMBolsa$Frecuencia[2]/n
cat('X ~ N(', n, ',', p, ')')
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
abline(v = x, col = "gray", lty = "dashed")
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
abline(v = x, col = "gray", lty = "dashed")
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
abline(v = x, col = "gray", lty = "dashed", lwd=0.5)
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
abline(v = x, col = "gray", lty = "dashed", lwd=0.2)
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
abline(v = x, col = "gray", lty = "dashed", lwd=0.5)
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 3,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
abline(v = x, col = "gray", lty = "dashed")
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
abline(v = x, col = "gray", lty = "dashed")
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
par(lwd=0.5)
abline(v = x, col = "gray", lty = "dashed")
# Calcular la función de probabilidad
x <- 0:n
y <- dbinom(x,n,p)
# Graficar la densidad
plot(x, y, xlim=c(0,300), type = "h", col = "blue", lwd = 2,
xlab = "Número de éxitos", ylab = "P(X=x)", main = "Función de Densidad Binomial")
ES = n*p
V = (n*p)*(1-p)
CV = V/ES
ES
V
CV
ES = n*p
V = (n*p)*(1-p)
CV = V/ES
ES
V
CV
ES = n*p
V = (n*p)*(1-p)
CV = V/ES
n
p
ES
V
CV
ES = n*p
V = (n*p)*(1-p)
CV = V/ES
n
p
ES
V
CV
ES = n*p
V = (n*p)*(1-p)
CV = V/ES
ES
V
CV
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
dbinom(x=10, size=50, prob=p)
# Para dibujar la función de masa de probabilidad para una binomial (n=50,p=0.29881198) se usa el siguiente código.
x <- 0:05  # Soporte (dominio) de la variable
Probabilidad <- dbinom(x=x, size=50, prob=p)
plot(x=x, y=Probabilidad,
type='h', las=1, lwd=6)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
dbinom(x=10, size=50, prob=p)
# Para dibujar la función de masa de probabilidad para una binomial (n=50,p=0.29881198) se usa el siguiente código.
x <- 0:05  # Soporte (dominio) de la variable
Probabilidad <- dbinom(x=x, size=50, prob=p)
plot(x=x, y=Probabilidad,
type='h', las=1, lwd=6)
# Para dibujar la función de masa de probabilidad para una binomial (n=50,p=0.29881198) se usa el siguiente código.
x <- 0:10  # Soporte (dominio) de la variable
Probabilidad <- dbinom(x=x, size=50, prob=p)
plot(x=x, y=Probabilidad,
type='h', las=1, lwd=6)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
dbinom(x=10, size=50, prob=p)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
dbinom(x=10, size=50, prob=p)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
round(dbinom(x=10, size=50, prob=p), 8)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
round(dbinom(x=10, size=50, prob=p), 4)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
round(dbinom(x=10, size=50, prob=p), 5)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
round(dbinom(x=10, size=50, prob=p), 5)
# Aquí se tiene una distribución binomial (n=50,p=0.29881198) y se desea calcular P(X=10). Para obtener esta probabilidad se usa la siguiente instrucción.
dbinom(x=10, size=50, prob=p)
# Para dibujar la función de masa de probabilidad para una binomial se usa el siguiente código.
x <- 0:10
Probabilidad <- dbinom(x=x, size=50, prob=p)
plot(x=x, y=Probabilidad,
type='h', las=1, lwd=6, ylim=0.5)
# Para dibujar la función de masa de probabilidad para una binomial se usa el siguiente código.
x <- 0:10
Probabilidad <- dbinom(x=x, size=50, prob=p)
plot(x=x, y=Probabilidad,
type='h', las=1, lwd=6, ylim=c(0, 0.5))
Ing <- DataFinal$Ingreso[!is.na(DataFinal$Ingreso)]
hist(Ing)
curve(dnorm(x,µ,σ),xlim=c(0,6000),col="blue",lwd=2, xlab="x",ylab="f(x)",main="Función de Densidad N(µ,σ)")
µ <- mean(Ing)
σ <- sd(Ing)
curve(dnorm(x,µ,σ),xlim=c(0,6000),col="blue",lwd=2, xlab="x",ylab="f(x)",main="Función de Densidad N(µ,σ)")
µ <- mean(Ing)
σ <- sd(Ing)
curve(dnorm(x,µ,σ),xlim=c(0,6000),col="blue",lwd=2, xlab="x",ylab="f(x)",main="Función de Densidad N(µ,σ)")
curve(pnorm(x,µ,σ),xlim=c(0,6000),col="blue",lwd=2, xlab="x",ylab="f(x)",main="Función de Distribución N(µ,σ)")
mean(Ing)>median(Ing)
skewness(Ing)
µ <- mean(Ing)
median(Ing)
σ2 <- var(Ing)
σ <- sd(Ing)
cat('X ~ N(', µ, ',', σ, ')')
probIng <- pnorm(1025,µ, σ, lower.tail=FALSE )
probIng
cat('Hay un', r(probIng)*100, '% de probabilidad de que un egresado, en su primer sueldo, gane más de 1025 soles mensuales')
sum(complete.cases(DataFinal$Tiempo))
Tm<-(DataFinal$Tiempo[!is.na(DataFinal$Tiempo)])
hist(Tm)
Tm<-(DataFinal$Tiempo[!is.na(DataFinal$Tiempo)])
hist(Tm)
lambdaTiem <- (mean(DataFinal$Tiempo, na.rm=TRUE))
x <- seq(0, lambdaTiem, 0.01)
plot(x, dexp(x, lambdaTiem), type = "l",
ylab = "F(x)", lwd = 1, col = "blue",main="variable exponencial")
mean(DataFinal$Tiempo<=3, na.rm=TRUE)
median(DataFinal$Tiempo[DataFinal$Tiempo<=3], na.rm=TRUE)
mean(Tm)
median(DataFinal$Tiempo[DataFinal$Tiempo<=3], na.rm=TRUE)
mean(DataFinal$Tiempo<=3, na.rm=TRUE)
median(DataFinal$Tiempo[DataFinal$Tiempo<=3], na.rm=TRUE)
ES<-mean(DataFinal$Tiempo, na.rm=TRUE)
ES
mean(DataFinal$Tiempo<=3, na.rm=TRUE)
median(DataFinal$Tiempo[DataFinal$Tiempo<=3], na.rm=TRUE)
e1=mean((DataFinal$Tiempo)^2)
e2=mean((DataFinal$Tiempo))^2
v1<-e1-e2
v2<-var(DataFinal$Tiempo)
all.equal(v1, v2,tolerance=0.01)
β = mean(DataFinal$Tiempo<=3, na.rm=TRUE)
median(DataFinal$Tiempo[DataFinal$Tiempo<=3], na.rm=TRUE)
ES = β
Var = β^2
β = mean(DataFinal$Tiempo<=3, na.rm=TRUE)
median(DataFinal$Tiempo[DataFinal$Tiempo<=3], na.rm=TRUE)
ES = β
Var = β^2
ES
Var
β = mean(DataFinal$Tiempo<=3, na.rm=TRUE)
median(DataFinal$Tiempo[DataFinal$Tiempo<=3], na.rm=TRUE)
ES = β
Var = β^2
ES
Var
probTm<-pexp(6,µ,σ,lower.tail = F)
probTm
cat('Hay un',r(probTm)*100,"% de probabilidad de que un egresado, encuentre su primer empelo en un tiempo mayor a los 6 meses")
probTm<-pexp(6,β,lower.tail = F)
probTm
cat('Hay un',r(probTm)*100,"% de probabilidad de que un egresado, encuentre su primer empleo en un tiempo mayor a los 6 meses")
probTm<-pexp(6,β,lower.tail = F)
probTm
cat('Hay un',probTm*100,"% de probabilidad de que un egresado, encuentre su primer empleo en un tiempo mayor a los 6 meses")
g<-function(x){x*p*q^(x-1)}
integrate(g,0,n)
g<-function(x){x*p*(q)^(x-1)}
integrate(g,0,n)
g<-function(x){x*p*(q^(x-1))}
integrate(g,0,n)
g<-function(x){x*p*(q^(x-1))}
integrate(g,0,n)
g<-function(x){x*p*((1-p)^(x-1))}
integrate(g,0,n)
ES = (1-p)/p
V = (1-p)/(p^2)
CV = sqrt(V)/(1/p)
ES
V
CV
#Esperado
g<-function(x){x*p*((1-p)^(x-1))}
integrate(g,0,n)
ES = (1-p)/p
ES
