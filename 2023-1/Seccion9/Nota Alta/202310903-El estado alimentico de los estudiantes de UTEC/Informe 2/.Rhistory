ifelse(Estatura == 160, 1.6,
ifelse(Estatura == 170, 1.7,
Estatura)))))
table(DC$Estatura)
unique(DL$Estatura)
DC<-DL %>% mutate(Estatura =
ifelse(Estatura == 164, 1.64,
ifelse(Estatura == 163, 1.63,
ifelse(Estatura == 160, 1.6,
ifelse(Estatura == 170, 1.7,
Estatura)))))
table(DC$Estatura)
View(DC)
View(DC)
unique(DL$Dormido)
DC <- DL %>% mutate(Dormido =
ifelse(Dormido == "En ocaciones", "En ocasiones",
Dormido
))
table(DC$Dormido)
unique(DL$Edad)
DC <- DL %>% mutate(Edad =
ifelse(Edad == 18.66, 18,
Edad
))
table(DC$Edad)
unique(DL$Estatura)
DC<-DL %>% mutate(Estatura =
ifelse(Estatura == 164, 1.64,
ifelse(Estatura == 163, 1.63,
ifelse(Estatura == 160, 1.6,
ifelse(Estatura == 170, 1.7,
Estatura)))))
table(DC$Estatura)
unique(DL$Agua)
DC<-DL %>% mutate(Agua =
ifelse(Agua == 12, 3,    #Ej. 12 vasos representan 3 litros de agua.
ifelse(Agua == 8.5,2.125,
ifelse(Agua == 5, 1.25,
ifelse(Agua== 7,1.75,
ifelse(Agua==8,2,
ifelse(Agua==6,1.5,
ifelse(Agua==4,1,
Agua))))))))
table(DC$Agua)
View(DC)
View(DC)
DC<-DL %>% mutate(Agua =
ifelse(Agua == 12, 3,    #Ej. 12 vasos representan 3 litros de agua.
ifelse(Agua == 8.5,2.125,
ifelse(Agua == 5, 1.25,
ifelse(Agua== 7,1.75,
ifelse(Agua==8,2,
ifelse(Agua==6,1.5,
ifelse(Agua==4,1,
Agua))))))))
table(DC$Agua)
DC<-DL %>% mutate(Estatura =
ifelse(Estatura == 164, 1.64,
ifelse(Estatura == 163, 1.63,
ifelse(Estatura == 160, 1.6,
ifelse(Estatura == 170, 1.7,
Estatura)))))
table(DC$Estatura)
DC <- DL %>% mutate(Edad =
ifelse(Edad == 18.66, 18,
Edad
))
table(DC$Edad)
DC <- DL %>% mutate(Dormido =
ifelse(Dormido == "En ocaciones", "En ocasiones",
Dormido
))
table(DC$Dormido)
View(DC)
View(DC)
View(DC)
View(DC)
View(DL)
View(DL)
DC<-DL %>% mutate(Estatura =
ifelse(Estatura == 164, 1.64,
ifelse(Estatura == 163, 1.63,
ifelse(Estatura == 160, 1.6,
ifelse(Estatura == 170, 1.7,
Estatura)))))
table(DC$Estatura)
View(DC)
View(DC)
DC<-DL %>% mutate(Agua =
ifelse(Agua == 12, 3,    #Ej. 12 vasos representan 3 litros de agua.
ifelse(Agua == 8.5,2.125,
ifelse(Agua == 5, 1.25,
ifelse(Agua== 7,1.75,
ifelse(Agua==8,2,
ifelse(Agua==6,1.5,
ifelse(Agua==4,1,
Agua))))))))
table(DC$Agua)
View(DC)
View(DC)
unique(DC$Dormido)
DC <- DC %>% mutate(Dormido =
ifelse(Dormido == "En ocaciones", "En ocasiones",
Dormido
))
table(DC$Dormido)
unique(DC$Edad)
DC <- DC %>% mutate(Edad =
ifelse(Edad == 18.66, 18,
Edad
))
table(DC$Edad)
unique(DC$Estatura)
DC<-DC %>% mutate(Estatura =
ifelse(Estatura == 164, 1.64,
ifelse(Estatura == 163, 1.63,
ifelse(Estatura == 160, 1.6,
ifelse(Estatura == 170, 1.7,
Estatura)))))
table(DC$Estatura)
unique(DC$Agua)
DC<-DC %>% mutate(Agua =
ifelse(Agua == 12, 3,    #Ej. 12 vasos representan 3 litros de agua.
ifelse(Agua == 8.5,2.125,
ifelse(Agua == 5, 1.25,
ifelse(Agua== 7,1.75,
ifelse(Agua==8,2,
ifelse(Agua==6,1.5,
ifelse(Agua==4,1,
Agua))))))))
table(DC$Agua)
View(DC)
View(DC)
write.csv(DC, file = "C:/Users/ACER/OneDrive/Documentos/Esta_&_Proba/2023-1/S3_Fuente/datoslimpios1.csv")
DC <- read_csv("datoslimpios1.csv")
DC
View(DC)
if(!require(readr)){install.packages('readr')}
library(readr)
if(!require(car)){install.packages('car')}
library(car)
if(!require(stringr)){install.packages('stringr')}
library(stringr)
if(!require(DescTools)){install.packages('DescTools')}
library(DescTools)
if(!require(raster)){install.packages('raster')}
library(raster)
if(!require(dplyr)){install.packages('dplyr')}
library(dplyr)
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
if(!require(ggmosaic)){install.packages('ggmosaic')}
library(ggmosaic)
if(!require(modeest)){install.packages('modeest')}
library(modeest)
if(!require(ggthemes)){install.packages('ggthemes')}
library(ggthemes)
DC <- read_csv("datoslimpios1.csv")
DC
summary(DC$Edad)
table(DC$Edad)       # moda
IQR(DC$Edad)       # rango intercuartil
sd(DC$Edad)        # desviación estándar
cv(DC$Edad)        # coeficiente de variación
table(DC$Carrera,DC$Académicas)
sum(DC$Académicas == "Sí")
nrow(DC)
porcentaje_si <- (sum(DC$Académicas == "Sí") / nrow(DC)) * 100
porcentaje_si
summary(DC$Curso)
table(DC$Curso)       # moda
IQR(DC$Curso)       # rango intercuartil
sd(DC$Curso)        # desviación estándar
cv(DC$Curso)        # coeficiente de variación
# para cambiar el orden
DC$H.Desayuno <- factor(DC$H.Desayuno, levels= c("5-6am","6-7am" ,"7-8am","8-9am","9-10am","10-11am","No suelo desayunar"))
table(DC$Curso,DC$H.Desayuno)
ggplot(DC) +
geom_mosaic(aes(x=product(Curso, H.Desayuno), fill=Curso, size = 1), color="black") +
scale_fill_manual(values=c("white","lightcyan","lightblue","royalblue","blue","darkblue","black")) +
labs(title="Hora de desayuno de los estudiantes por número de cursos",x="Hora de desayuno",y="N° Cursos", fill="Número de cursos") +
theme_light() +
theme(axis.text.x=element_text(size=5))
DC$H.Almuerzo <- factor(DC$H.Almuerzo, levels= c("11:00-12:00 PM","12:00-1:00 PM","1:00-2:00 PM","2:00-3:00 PM","3:00 a más","No suelo almorzar"))
table(DC$Curso,DC$H.Almuerzo)
ggplot(DC) +
geom_mosaic(aes(x=product(Curso, H.Almuerzo), fill=Curso, size = 1), color="black") +
scale_fill_manual(values=c("white","#AB82FF","#6959CD","#5D478B","#473C8B","#551A8B","black")) +
labs(title="Horario de almuerzo de los estudiantes por número de cursos",x="Hora de almuerzo",y="N° Cursos", fill="Número de cursos") +
theme_light() +
theme(axis.text.x=element_text(size=5))#473C8B  #5D478B
ggplot(data=DC,mapping = aes(x=H.Estudio,y=Comer))+geom_point()+geom_smooth(method = "lm") + labs(x = "Horas de estudio", y = "Tiempo de comida") + ggtitle("Relación de Horas de estudio y Tiempo de comer")
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
DC$imc <- DC$Peso/(DC$Estatura^2)
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
mean(DC$imc,na.rm=T)
median(DC$imc,na.rm=T)
var(DC$imc,na.rm=T)
sd(DC$imc,na.rm=T)
#X<-DC$Agua
#hist(X)
#plot(density(X),col="red")
x1= seq(2,12,0.1)
plot(x1,dexp(x1,1/mean(DC$Agua)),type="l",ylab="f(x)",xlab="Litros de agua",col="red")
#X<-DC$Agua
#hist(X)
#plot(density(X),col="red")
x1= seq(2,12,0.1)
plot(x1,dexp(x1,1/mean(DC$Agua)),type="l",ylab="f(x)",xlab="Litros de agua",col="red")
X<-DC$Agua
hist(X)
plot(density(X),col="red")
x1= seq(2,12,0.1)
plot(x1,dexp(x1,1/mean(DC$Agua)),type="l",ylab="f(x)",xlab="Litros de agua",col="red")
x1= seq(2,12,0.1)
plot(x1,dexp(x1,1/mean(DC$Agua)),type="l",ylab="f(x)",xlab="Litros de agua",col="red")
hist(DC$H.Estudio,breaks= 10 , freq=FALSE, main="Histograma de H.Estudio", xlab="H.Estudio", col="green")
lines(density(DC$H.Estudio, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$H.Estudio,na.rm=TRUE), sd(DC$H.Estudio,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
mean(DC$H.Estudio,na.rm=T)
median(DC$H.Estudio,na.rm=T)
var(DC$H.Estudio)
sd(DC$H.Estudio)
DC <- DC %>% mutate(Alimentación =
ifelse(Alimentación == "1.Muy Mala", "Mala",
ifelse(Alimentación == "2.Mala", "Mala",
ifelse(Alimentación == "3.Regular", "Buena",
ifelse(Alimentación == "4.Buena", "Buena",
ifelse(Alimentación == "5.Muy Buena", "Buena",
Alimentación
))))))
table(DC$Alimentación)
DC <- DC %>% mutate(Alimentación =
ifelse(Alimentación == "1", "Mala",
ifelse(Alimentación == "2", "Mala",
ifelse(Alimentación == "3", "Buena",
ifelse(Alimentación == "4", "Buena",
ifelse(Alimentación == "5", "Buena",
Alimentación
))))))
table(DC$Alimentación)
tabla2 <- table(DC$Género, DC$Alimentación)
tabla2
prob_con <- tabla2[2, 1] / sum(tabla2)     #  P(A n B)
prob_con
prob_gen <- sum(tabla2[2, ]) / sum(tabla2)   #  P(A)
prob_gen
prob_ali <- sum(tabla2[, 1]) / sum(tabla2)   #  P(B)
prob_ali
probcondi2 <- tabla2[2, 1] / sum(tabla2[ ,1])   #  P(A|B) = P(A n B) /P(B)
probcondi2
probba2 <- probcondi2 * prob_ali / prob_gen    #  P(B|A) utilizando el teorema de Bayes
probba2
if (prob_gen == probcondi2) {       #  P(A|B) = P(A)
cat("Los eventos son independientes\n")
} else
cat("Los eventos son dependientes\n")
DC <- DC %>% mutate(Dormido =
ifelse(Dormido == "En ocasiones", "Si",
ifelse(Dormido == "Con frecuencia", "Si",
ifelse(Dormido == "Nunca", "No",
Dormido
))))
table(DC$Dormido)
tabla<-table(DC$Dormido, DC$H.Estudio > 5)
tabla
probco <- tabla[2, 2] / sum(tabla)  # Probabilidad conjunta P(A n B)
probco
probb <- sum(tabla[, 2]) / sum(tabla)  # Probabilidad marginal P(B)
probb
proba <- sum(tabla[2,]) / sum(tabla)  # Probabilidad marginal P(A)
proba
probcondi <- tabla[2, 2] / sum(tabla[, 2])   # Probabilidad condicional P(A|B)  = P(A n B) /P(B)
probcondi
probba <- probcondi * probb / proba    # Probabilidad condicional P(B|A) utilizando el teorema de Bayes
probba
if (probcondi == proba) {        #  P(A|B) = P(A)
cat("Los eventos son independientes\n")
}else
cat("Los eventos son dependientes\n")
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
media <- mean(DC$imc) # Mean: 16.25
mediana <- median(DC$imc) # Meadian: 16.5
abline(v=media,col="blue")
abline(v=mediana,col="red")
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
media <- mean(DC$imc) # Mean: 16.25
mediana <- median(DC$imc) # Meadian: 16.5
abline(v=media,col="blue")
abline(v=mediana,col="red")
text(media+0.1, par("usr")[4], labels=paste("Media:", round(media,2)), pos=4,col="blue")
text(mediana+0.1, par("usr")[4], labels=paste("Mediana:", round(mediana,2)), pos=4,col="red")
ggplot(DC, aes(x=imc)) +
geom_histogram(binwidth=1, color="black", fill="gray") +
geom_vline(aes(xintercept=median(imc), color = "Mediana"), lwd=1) +
geom_vline(aes(xintercept=mean(imc), color = "Media"), lwd=1) +
geom_vline(aes(xintercept=Mode(imc), color = "Moda"), lwd=1) +
labs(title="Distribución de IMC de los alumnos de UTEC",x="IMC (peso y estatura)",y="Frecuencia") +
scale_color_manual(name = " ", values = c(Mediana="red", Media ="blue", Moda ="green")) +
theme_light() +
geom_label(aes(x=mean(imc), y=17, label=round(mean(imc),digits=2)), fill="white", size=3, col="blue") +
geom_label(aes(x=median(imc), y=20, label=round(median(imc),digits=2)), fill="white", size=3, col="red") +
geom_label(aes(x=Mode(imc), y=22, label=round(Mode(imc),digits=2)), fill="white", size=3, col="green")
ggplot(DC, aes(x=imc)) +
geom_histogram(binwidth=1, color="black", fill="gray") +
geom_vline(aes(xintercept=median(imc), color = "Mediana"), lwd=1) +
geom_vline(aes(xintercept=mean(imc), color = "Media"), lwd=1) +
geom_vline(aes(xintercept=Mode(imc), color = "Moda"), lwd=1) +
labs(title="Distribución de IMC de los alumnos de UTEC",x="IMC (peso y estatura)",y="Frecuencia") +
scale_color_manual(name = " ", values = c(Mediana="red", Media ="blue", Moda ="green")) +
theme_light() +
geom_label(aes(x=mean(imc), y=17, label=round(mean(imc),digits=2)), fill="white", size=3, col="blue") +
geom_label(aes(x=median(imc), y=20, label=round(median(imc),digits=2)), fill="white", size=3, col="red") +
ggplot(DC, aes(x=imc)) +
geom_histogram(binwidth=1, color="black", fill="gray") +
geom_vline(aes(xintercept=median(imc), color = "Mediana"), lwd=1) +
geom_vline(aes(xintercept=mean(imc), color = "Media"), lwd=1) +
geom_vline(aes(xintercept=Mode(imc), color = "Moda"), lwd=1) +
labs(title="Distribución de IMC de los alumnos de UTEC",x="IMC (peso y estatura)",y="Frecuencia") +
scale_color_manual(name = " ", values = c(Mediana="red", Media ="blue", Moda ="green")) +
theme_light() +
geom_label(aes(x=mean(imc), y=17, label=round(mean(imc),digits=2)), fill="white", size=3, col="blue") +
geom_label(aes(x=median(imc), y=20, label=round(median(imc),digits=2)), fill="white", size=3, col="red")
ggplot(DC, aes(x=imc)) +
geom_histogram(binwidth=1, color="black", fill="gray") +
geom_vline(aes(xintercept=median(imc), color = "Mediana"), lwd=1) +
geom_vline(aes(xintercept=mean(imc), color = "Media"), lwd=1) +
labs(title="Distribución de IMC de los alumnos de UTEC",x="IMC (peso y estatura)",y="Frecuencia") +
scale_color_manual(name = " ", values = c(Mediana="red", Media ="blue")) +
theme_light() +
geom_label(aes(x=mean(imc), y=17, label=round(mean(imc),digits=2)), fill="white", size=3, col="blue") +
geom_label(aes(x=median(imc), y=20, label=round(median(imc),digits=2)), fill="white", size=3, col="red")
View(DC)
View(DC)
x <- rnorm(100)
mx <- mean(x)
hist(x)
abline(v = mx, col = "blue", lwd = 2)
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
media <- mean(DC$imc) # Mean: 16.25
mediana <- median(DC$imc) # Meadian: 16.5
abline(v=media,col="blue")
abline(v=mediana,col="red")
text(media+0.1, par("usr")[4], labels=paste("Media:", round(media,2)), pos=4,col="blue")
text(mediana+0.1, par("usr")[4], labels=paste("Mediana:", round(mediana,2)), pos=4,col="red")
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
media <- mean(DC$imc) # Mean: 16.25
mediana <- median(DC$imc) # Meadian: 16.5
abline(v=media,col="blue")
abline(v=mediana,col="red")
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
media <- mean(DC$imc) # Mean: 16.25
mediana <- median(DC$imc) # Meadian: 16.5
abline(v=media,y=20,fill="white", size=3,col="blue")
abline(v=mediana,y=17,fill="white", size=3,col="red")
hist(DC$imc,breaks=10, freq=FALSE, main="Histograma de IMC", xlab="IMC (kg)", col="#BBFFFF")
lines(density(DC$imc, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(DC$imc,na.rm=TRUE), sd(DC$imc,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva (normal) teórca"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
media <- mean(DC$imc) # Mean: 16.25
mediana <- median(DC$imc) # Meadian: 16.5
abline(v=media,y=20,fill="white",col="blue")
abline(v=mediana,y=17,fill="white",col="red")
ggplot(DC, aes(x=imc)) +
geom_histogram(binwidth=1, color="black", fill="gray") +
geom_vline(aes(xintercept=median(imc), color = "Mediana"), lwd=1) +
geom_vline(aes(xintercept=mean(imc), color = "Media"), lwd=1) +
geom_vline(aes(xintercept=Mode(imc), color = "Moda"), lwd=1) +
labs(title="Distribución de IMC de los alumnos de UTEC",x="IMC (peso y estatura)",y="Frecuencia") +
scale_color_manual(name = " ", values = c(Mediana="red", Media ="blue", Moda ="green")) +
theme_light() +
geom_label(aes(x=mean(imc), y=17, label=round(mean(imc),digits=2)), fill="white", size=3, col="blue") +
geom_label(aes(x=median(imc), y=20, label=round(median(imc),digits=2)), fill="white", size=3, col="red") +
geom_label(aes(x=Mode(imc), y=22, label=round(Mode(imc),digits=2)), fill="white", size=3, col="green")
mean(DC$Comer >= 30)
1-mean(DC$Comer >= 30)
print("La probabilidad es de: ")
pg <- 0.6166667
x <- 3
geo <- dgeom(x - 1, pg)
geo
n <- 10 # número máximo de ensayos
x <- 0:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
mean(DC$Comer >= 20)
1-mean(DC$Comer >= 20)
print("La probabilidad es de: ")
pg <- 0.95
x <- 3
geo <- dgeom(x - 1, pg)
geo
mean(DC$Comer >= 30)
1-mean(DC$Comer >= 30)
print("La probabilidad es de: ")
pg <- 0.6166667
x <- 3
geo <- dgeom(x - 1, pg)
geo
n <- 10 # número máximo de ensayos
x <- 0:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
n <- 10 # número máximo de ensayos
x <- 1:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
n <- 10 # número máximo de ensayos
x <- 0:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
print("La probabilidad es de: ")
pg <- 0.6166667
x1 <- 3
geo <- dgeom(x - 1, pg)
geo
print("La probabilidad es de: ")
pg <- 0.6166667
x1 <- 3
geo <- dgeom(x1 - 1, pg)
geo
n <- 10 # número máximo de ensayos
x <- 0:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
print("La probabilidad es de: ")
pg <- 0.6166667
x <- 3
geo <- dgeom(x - 1, pg)
geo
n <- 10 # número máximo de ensayos
x <- 0:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
mean(DC$Comer >= 30)
1-mean(DC$Comer >= 30)
print("La probabilidad es de: ")
pg <- 0.6166667
x <- 3
geo <- dgeom(x - 1, pg)
geo
DC$Comer
table(DC$Comer>=30)
print("La probabilidad es de: ")
pg <- 0.6166667
x <- 3
geo <- dgeom(x - 1, pg)
geo
n <- 10 # número máximo de ensayos
x <- 0:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
n <- 10 # número máximo de ensayos
x <- 1:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
n <- 10 # número máximo de ensayos
x <- 0:n
y <- dgeom(x, pg)
barplot(y, names.arg = x, col = "blue", main = "Distribución Geométrica", xlab = "Número de fracasos antes del primer éxito", ylab = "Probabilidad")
x <- 0:n
y <- dbinom(x, n, pb)
print("La probabilidad es de :")
n <- 20
pb <- 0.3055556
x <- 5
1 - pbinom(x - 1, n, pb)
x <- 0:n
y <- dbinom(x, n, pb)
barplot(y, names.arg = x, col = "blue", main = "Distribución Binomial", xlab = "Número de éxitos", ylab = "Probabilidad")
