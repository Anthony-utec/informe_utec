prob_provincia_ate <- prob_empirica["ate", "Provincia"]
prob_provincia_ate
prob_condicional <- aggregate(data$CantTransportes, by = list(data$GDiarioTransporte), FUN = function(x) table(x)/length(x))
# Calcular probabilidades condicionales
prob_2_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 2))
prob_3_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 3))
prob_4_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 4))
# Imprimir resultados
prob_2_transportes$prob
prob_3_transportes$prob
prob_4_transportes$prob
# Calculando la probabilidad conjunta de la carrera y el lugar de procedencia
prob_conjunta <- aggregate(data$Carrera, by = list(data$DProcedencia), FUN = function(x) table(x)/length(x))
prob_individual_carrera <- table(data$Carrera)/length(data$Carrera)
prob_individual_carrera
prob_individual_procedencia <- table(data$DProcedencia)/length(data$DProcedencia)
prob_individual_procedencia
prob_conjunta_producto <- outer(prob_individual_carrera,prob_individual_procedencia)
prob_conjunta_producto
# Comparando la probabilidad conjunta con el producto de las probabilidades individuales
all.equal(prob_conjunta, prob_conjunta_producto)
# Calcular probabilidad conjunta
prob_conjunta <- data %>%
summarize(prob = mean(Carrera == "Ing. Civil" & DProcedencia == "Lima Metropolitana o Callao"))
# Calcular probabilidades individuales
prob_carrera <- data %>%
summarize(prob = mean(Carrera == "Ing. Civil"))
prob_procedencia <- data %>%
summarize(prob = mean(DProcedencia == "Lima Metropolitana o Callao"))
# Imprimir resultados
prob_conjunta$prob
prob_carrera$prob
prob_procedencia$prob
prob_conjunta_productos <- outer(prob_carrera$prob,prob_procedencia$prob)
prob_conjunta_productos
XD <- data.frame(table(Edad))
XD <- data.frame(table(datos$Edad))
packages <- c(
"knitr",
"stringr",
"ggthemes",
"dplyr",
"readr",
"tidyverse",
"corrplot",
"modeest",
"ggplot2",
"car",
"fitdistrplus",
"tidyr"
)
missing.packages = packages[!(packages %in% rownames(installed.packages()))]
if (length(missing.packages) > 0) {
install.packages(missing.packages)
}
lapply(packages, library, character.only = TRUE)
datos <- read_csv("DataLimpia.csv")
# Medidas de tendencia central y dispersión para las variables numéricas
print("summary(datos$Edad)")
summary(datos$Edad)
print("summary(datos$GDiarioTransporte)")
summary(datos$GDiarioTransporte)
print("summary(datos$CantTransportes)")
summary(datos$CantTransportes)
print("summary(datos$CantTransportes)")
summary(datos$TimeTrans)
#Calificación de los espacios de áreas verdes y para discapacitados:
## Calificación promedio de los espacios de áreas verdes
mean(datos$CAVerdes)
# Calificación promedio de los espacios para discapacitados
mean(datos$CADiscapacidad)
# Tabla de frecuencia de la preferencia de ubicación de los estudiantes según la calificación de los espacios de áreas verdes
table(datos$DSede, datos$CAVerdes)
# Tabla de frecuencia de la preferencia de ubicación de los estudiantes según la calificación de los espacios para discapacitados
table(datos$DSede, datos$CADiscapacidad)
### Calificacion lugara centrico y lugares de estudio
# Calificación promedio de la ubicación céntrica
mean(datos$CALugarCentrico)
# Calificación promedio de los lugares de estudio
mean(datos$CAMasLugaresEstudio)
table(datos$DSede, datos$CALugarCentrico)
table(datos$DSede, datos$CAMasLugaresEstudio)
# Tablas de frecuencia para las variables categóricas
table(datos$Carrera)
table(datos$Ciclo)
table(datos$DProcedencia)
table(datos$DSede)
table(datos$DResidencia)
# Gráficos para visualizar la distribución de los datos
hist(datos$Edad)
boxplot(datos$Ciclo)
hist(datos$GDiarioTransporte)
boxplot(datos$CantTransportes)
hist(datos$TimeTrans)
barplot(table(datos$Carrera))
barplot(table(datos$DProcedencia))
barplot(table(datos$DSede))
barplot(table(datos$DResidencia))
# Cargando los datos
data <- read.csv("DataLimpia.csv")
# Espacio de resultados teórico para la DSede
espacio_Dsede <- unique(data$DSede)
# Probabilidades empíricas para la carrera
prob_empirica_DSede <- table(data$DSede)/length(data$DSede)
# Imprimiendo los resultados
espacio_Dsede
prob_empirica_DSede
# Espacio de resultados teórico para el lugar de procedencia
espacio_procedencia <- unique(data$DProcedencia)
# Probabilidades empíricas para el lugar de procedencia
prob_empirica_procedencia <- table(data$DProcedencia)/length(data$DProcedencia)
# Imprimiendo los resultados
espacio_procedencia
prob_empirica_procedencia
tabla <- table(data$DSede, data$DProcedencia)
tabla
prob_empirica <- tabla / sum(tabla)
prob_empirica
# Probabilidad de que un estudiante sea de "Lima Metropolitana o Callao" y prefiera "San Isidro"
prob_lima_sanisidro <- prob_empirica["san isidro", "Lima Metropolitana o Callao"]
prob_lima_sanisidro
# Probabilidad de que un estudiante sea de provincia y prefiera Ate
prob_provincia_ate <- prob_empirica["ate", "Provincia"]
prob_provincia_ate
prob_condicional <- aggregate(data$CantTransportes, by = list(data$GDiarioTransporte), FUN = function(x) table(x)/length(x))
# Calcular probabilidades condicionales
prob_2_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 2))
prob_3_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 3))
prob_4_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 4))
# Imprimir resultados
prob_2_transportes$prob
prob_3_transportes$prob
prob_4_transportes$prob
# Calculando la probabilidad conjunta de la carrera y el lugar de procedencia
prob_conjunta <- aggregate(data$Carrera, by = list(data$DProcedencia), FUN = function(x) table(x)/length(x))
prob_individual_carrera <- table(data$Carrera)/length(data$Carrera)
prob_individual_carrera
prob_individual_procedencia <- table(data$DProcedencia)/length(data$DProcedencia)
prob_individual_procedencia
prob_conjunta_producto <- outer(prob_individual_carrera,prob_individual_procedencia)
prob_conjunta_producto
# Comparando la probabilidad conjunta con el producto de las probabilidades individuales
all.equal(prob_conjunta, prob_conjunta_producto)
# Calcular probabilidad conjunta
prob_conjunta <- data %>%
summarize(prob = mean(Carrera == "Ing. Civil" & DProcedencia == "Lima Metropolitana o Callao"))
# Calcular probabilidades individuales
prob_carrera <- data %>%
summarize(prob = mean(Carrera == "Ing. Civil"))
prob_procedencia <- data %>%
summarize(prob = mean(DProcedencia == "Lima Metropolitana o Callao"))
# Imprimir resultados
prob_conjunta$prob
prob_carrera$prob
prob_procedencia$prob
prob_conjunta_productos <- outer(prob_carrera$prob,prob_procedencia$prob)
prob_conjunta_productos
XD <- data.frame(table(datos$Edad))
CME <- XD[1,2] + XD[2,2] + XD[3,2] + XD[4,2]
print("Alumnos jóvenes")
CME
print("Alumnos adultos")
CAA <- sum(XD$Freq) - CME
CAA
TOT <- sum(XD$Freq)
p_jovenes <- CME/TOT
print("Probabilidad de que sean alumnos jóvenes")
p_jovenes
p_alum_mayores <- 1 - (p_jovenes)
print("Probabilidad de que sean alumnos adultos")
p_alum_mayores
dbinom(70,TOT,p_alum_mayores)
dbinom(80,TOT,p_jovenes)
# Definir nuestros parámetros
k <- 0:100
# Calcular las probabilidades para cada valor de k utilizando dbinom
prob_alum_mayores <- dbinom(k, size = TOT, prob = p_alum_mayores)
prob_jovenes <- dbinom(k, size = TOT, prob = p_jovenes)
# Crear el gráfico de densidad
plot(k, prob_alum_mayores, type = "l", xlab = "Variable Aleatoria", ylab = "Densidad",
main = "Gráfico de Densidad - Distribución Binomial", lwd = 2)
lines(k, prob_jovenes, col = "red", lwd = 2)
legend("topright", legend = c("Alumnos Mayores", "Alumnos Jóvenes"), col = c("black", "red"), lwd = 2)
prom_trans <- mean(data$CantTransportes)
print(round(prom_trans))
SM <- round((168*round(prom_trans))/24)
SM
#La probabilidad de que usen 15 o más cantidad de transportes es de un 43%
prob <- round(ppois(14,SM,lower.tail=F),3)
prob
#El porcentaje resulta la variable prob * 100%
PP <- prob * 100
PP
library(ggplot2)
# Se establece unos parámetros para ubicar mis variables
x <- 0:30
# Calculamos la densidad de probabilidad utilizando la función dpois
densidad <- dpois(x, SM)
# Establecemos un data frame con los valores de x y la densidad de probabilidad
df <- data.frame(x = x, densidad = densidad)
# Creamos el gráfico de densidad utilizando ggplot2
ggplot(df, aes(x, densidad)) +
geom_line(color = "blue", size = 1) +
geom_vline(xintercept = 15, linetype = "dashed", color = "red") +
labs(x = "Cantidad de transportes", y = "Densidad de probabilidad") +
ggtitle("Distribución de Poisson - Uso de transportes semanales") +
theme_minimal()
# Calcular la Esperanza(E) y la Varianza(V) para GDiarioTransporte
# 1) GDiarioTransporte
Media1 <- mean(data$GDiarioTransporte)
Desviación1 <- sd(data$GDiarioTransporte)
maximo1 <- max(data$GDiarioTransporte)
minimo1 <- min(data$GDiarioTransporte)
#Esperanza
EGD <- Media1
EGD
#Variación
VGD <- (Desviación1)^2
VGD
# Calcular la Esperanza(E) y la Varianza(V) para  TimeTrans
# 2)TimeTrans
Media2 <- mean(data$TimeTrans)
Desviacion2 <- sd(data$TimeTrans)
maximo2 <- max(data$TimeTrans)
minimo2 <- min(data$TimeTrans)
#Esperanza
ETT <- Media2
ETT
#Variación
VTT <- (Desviacion2)^2
VTT
# 1) Ejemplo para GDiarioTrans
#Para el GDiarioTrans indicaremos cual es la probabilidad de que las personas gasten más de 50 soles.
probabilidad1 <- (pnorm(50,Media1,Desviación1,lower.tail=F))
probabilidad1*100
# 2) Ejemplo para TimeTrans
#Para el TimeTras indicaremos cual es la probabilidad de que las personas se demoran más 60 minutos en llegar a la Utec.
probabilidad2 <- (pnorm(60,Media2,Desviacion2,lower.tail=F))
probabilidad2*100
# 1) Calcular la densidad de las variables.
# 2) Crear una Grafica de la densidad de la distribucion normal
# Densidad de GDiariTrans
x1 <- seq(-maximo1,maximo1,length.out = 150)
densidad1 <- dnorm(x1,Media1,Desviación1)
#Grafico de la densidad de la distribucion normal de GDiarioTrans
df <- data.frame(x = x1, densidad = densidad1)
ggplot(df, aes(x = x, y = densidad)) +
geom_line() +
labs(title = "Densidad de la Distribución Normal de GDiarioTrans",
x = "Variable Aleatoria",
y = "Densidad") +
theme_minimal()
# 1) Calcular la densidad de las variables.
# 2) Crear una Grafica de la densidad de la distribucion normal
# Densidad de TimeTrans
x2 <- seq(-maximo2,maximo2,length.out = 150)
densidad2 <- dnorm(x2,Media2,Desviacion2)
#Grafico de la densidad de la distribucion normal de TimeTrans
df <- data.frame(x = x2, densidad = densidad2)
ggplot(df, aes(x = x, y = densidad)) +
geom_line() +
labs(title = "Densidad de la Distribución Normal de TimeTrans",
x = "Variable aleatoria",
y = "Densidad") +
theme_minimal()
packages <- c(
"knitr",
"stringr",
"ggthemes",
"dplyr",
"readr",
"tidyverse",
"corrplot",
"modeest",
"ggplot2",
"car",
"fitdistrplus",
"tidyr"
)
missing.packages = packages[!(packages %in% rownames(installed.packages()))]
if (length(missing.packages) > 0) {
install.packages(missing.packages)
}
lapply(packages, library, character.only = TRUE)
datos <- read_csv("DataLimpia.csv")
# Medidas de tendencia central y dispersión para las variables numéricas
print("summary(datos$Edad)")
summary(datos$Edad)
print("summary(datos$GDiarioTransporte)")
summary(datos$GDiarioTransporte)
print("summary(datos$CantTransportes)")
summary(datos$CantTransportes)
print("summary(datos$CantTransportes)")
summary(datos$TimeTrans)
#Calificación de los espacios de áreas verdes y para discapacitados:
## Calificación promedio de los espacios de áreas verdes
mean(datos$CAVerdes)
# Calificación promedio de los espacios para discapacitados
mean(datos$CADiscapacidad)
# Tabla de frecuencia de la preferencia de ubicación de los estudiantes según la calificación de los espacios de áreas verdes
table(datos$DSede, datos$CAVerdes)
# Tabla de frecuencia de la preferencia de ubicación de los estudiantes según la calificación de los espacios para discapacitados
table(datos$DSede, datos$CADiscapacidad)
### Calificacion lugara centrico y lugares de estudio
# Calificación promedio de la ubicación céntrica
mean(datos$CALugarCentrico)
# Calificación promedio de los lugares de estudio
mean(datos$CAMasLugaresEstudio)
table(datos$DSede, datos$CALugarCentrico)
table(datos$DSede, datos$CAMasLugaresEstudio)
# Tablas de frecuencia para las variables categóricas
table(datos$Carrera)
table(datos$Ciclo)
table(datos$DProcedencia)
table(datos$DSede)
table(datos$DResidencia)
# Gráficos para visualizar la distribución de los datos
hist(datos$Edad)
boxplot(datos$Ciclo)
hist(datos$GDiarioTransporte)
boxplot(datos$CantTransportes)
hist(datos$TimeTrans)
barplot(table(datos$Carrera))
barplot(table(datos$DProcedencia))
barplot(table(datos$DSede))
barplot(table(datos$DResidencia))
# Cargando los datos
data <- read.csv("DataLimpia.csv")
# Espacio de resultados teórico para la DSede
espacio_Dsede <- unique(data$DSede)
# Probabilidades empíricas para la carrera
prob_empirica_DSede <- table(data$DSede)/length(data$DSede)
# Imprimiendo los resultados
espacio_Dsede
prob_empirica_DSede
# Espacio de resultados teórico para el lugar de procedencia
espacio_procedencia <- unique(data$DProcedencia)
# Probabilidades empíricas para el lugar de procedencia
prob_empirica_procedencia <- table(data$DProcedencia)/length(data$DProcedencia)
# Imprimiendo los resultados
espacio_procedencia
prob_empirica_procedencia
tabla <- table(data$DSede, data$DProcedencia)
tabla
prob_empirica <- tabla / sum(tabla)
prob_empirica
# Probabilidad de que un estudiante sea de "Lima Metropolitana o Callao" y prefiera "San Isidro"
prob_lima_sanisidro <- prob_empirica["san isidro", "Lima Metropolitana o Callao"]
prob_lima_sanisidro
# Probabilidad de que un estudiante sea de provincia y prefiera Ate
prob_provincia_ate <- prob_empirica["ate", "Provincia"]
prob_provincia_ate
prob_condicional <- aggregate(data$CantTransportes, by = list(data$GDiarioTransporte), FUN = function(x) table(x)/length(x))
# Calcular probabilidades condicionales
prob_2_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 2))
prob_3_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 3))
prob_4_transportes <- data %>%
filter(GDiarioTransporte == 10) %>%
summarize(prob = mean(CantTransportes == 4))
# Imprimir resultados
prob_2_transportes$prob
prob_3_transportes$prob
prob_4_transportes$prob
# Calculando la probabilidad conjunta de la carrera y el lugar de procedencia
prob_conjunta <- aggregate(data$Carrera, by = list(data$DProcedencia), FUN = function(x) table(x)/length(x))
prob_individual_carrera <- table(data$Carrera)/length(data$Carrera)
prob_individual_carrera
prob_individual_procedencia <- table(data$DProcedencia)/length(data$DProcedencia)
prob_individual_procedencia
prob_conjunta_producto <- outer(prob_individual_carrera,prob_individual_procedencia)
prob_conjunta_producto
# Comparando la probabilidad conjunta con el producto de las probabilidades individuales
all.equal(prob_conjunta, prob_conjunta_producto)
# Calcular probabilidad conjunta
prob_conjunta <- data %>%
summarize(prob = mean(Carrera == "Ing. Civil" & DProcedencia == "Lima Metropolitana o Callao"))
# Calcular probabilidades individuales
prob_carrera <- data %>%
summarize(prob = mean(Carrera == "Ing. Civil"))
prob_procedencia <- data %>%
summarize(prob = mean(DProcedencia == "Lima Metropolitana o Callao"))
# Imprimir resultados
prob_conjunta$prob
prob_carrera$prob
prob_procedencia$prob
prob_conjunta_productos <- outer(prob_carrera$prob,prob_procedencia$prob)
prob_conjunta_productos
XD <- data.frame(table(datos$Edad))
CME <- XD[1,2] + XD[2,2] + XD[3,2] + XD[4,2]
print("Alumnos jóvenes")
CME
print("Alumnos adultos")
CAA <- sum(XD$Freq) - CME
CAA
TOT <- sum(XD$Freq)
p_jovenes <- CME/TOT
print("Probabilidad de que sean alumnos jóvenes")
p_jovenes
p_alum_mayores <- 1 - (p_jovenes)
print("Probabilidad de que sean alumnos adultos")
p_alum_mayores
dbinom(70,TOT,p_alum_mayores)
dbinom(80,TOT,p_jovenes)
# Definir nuestros parámetros
k <- 0:100
# Calcular las probabilidades para cada valor de k utilizando dbinom
prob_alum_mayores <- dbinom(k, size = TOT, prob = p_alum_mayores)
prob_jovenes <- dbinom(k, size = TOT, prob = p_jovenes)
# Crear el gráfico de densidad
plot(k, prob_alum_mayores, type = "l", xlab = "Variable Aleatoria", ylab = "Densidad",
main = "Gráfico de Densidad - Distribución Binomial", lwd = 2)
lines(k, prob_jovenes, col = "red", lwd = 2)
legend("topright", legend = c("Alumnos Mayores", "Alumnos Jóvenes"), col = c("black", "red"), lwd = 2)
prom_trans <- mean(data$CantTransportes)
print(round(prom_trans))
SM <- round((168*round(prom_trans))/24)
SM
#La probabilidad de que usen 15 o más cantidad de transportes es de un 43%
prob <- round(ppois(14,SM,lower.tail=F),3)
prob
#El porcentaje resulta la variable prob * 100%
PP <- prob * 100
PP
library(ggplot2)
# Se establece unos parámetros para ubicar mis variables
x <- 0:30
# Calculamos la densidad de probabilidad utilizando la función dpois
densidad <- dpois(x, SM)
# Establecemos un data frame con los valores de x y la densidad de probabilidad
df <- data.frame(x = x, densidad = densidad)
# Creamos el gráfico de densidad utilizando ggplot2
ggplot(df, aes(x, densidad)) +
geom_line(color = "blue", size = 1) +
geom_vline(xintercept = 15, linetype = "dashed", color = "red") +
labs(x = "Cantidad de transportes", y = "Densidad de probabilidad") +
ggtitle("Distribución de Poisson - Uso de transportes semanales") +
theme_minimal()
# Calcular la Esperanza(E) y la Varianza(V) para GDiarioTransporte
# 1) GDiarioTransporte
Media1 <- mean(data$GDiarioTransporte)
Desviación1 <- sd(data$GDiarioTransporte)
maximo1 <- max(data$GDiarioTransporte)
minimo1 <- min(data$GDiarioTransporte)
#Esperanza
EGD <- Media1
EGD
#Variación
VGD <- (Desviación1)^2
VGD
# Calcular la Esperanza(E) y la Varianza(V) para  TimeTrans
# 2)TimeTrans
Media2 <- mean(data$TimeTrans)
Desviacion2 <- sd(data$TimeTrans)
maximo2 <- max(data$TimeTrans)
minimo2 <- min(data$TimeTrans)
#Esperanza
ETT <- Media2
ETT
#Variación
VTT <- (Desviacion2)^2
VTT
# 1) Ejemplo para GDiarioTrans
#Para el GDiarioTrans indicaremos cual es la probabilidad de que las personas gasten más de 50 soles.
probabilidad1 <- (pnorm(50,Media1,Desviación1,lower.tail=F))
probabilidad1*100
# 2) Ejemplo para TimeTrans
#Para el TimeTras indicaremos cual es la probabilidad de que las personas se demoran más 60 minutos en llegar a la Utec.
probabilidad2 <- (pnorm(60,Media2,Desviacion2,lower.tail=F))
probabilidad2*100
# 1) Calcular la densidad de las variables.
# 2) Crear una Grafica de la densidad de la distribucion normal
# Densidad de GDiariTrans
x1 <- seq(-maximo1,maximo1,length.out = 150)
densidad1 <- dnorm(x1,Media1,Desviación1)
#Grafico de la densidad de la distribucion normal de GDiarioTrans
df <- data.frame(x = x1, densidad = densidad1)
ggplot(df, aes(x = x, y = densidad)) +
geom_line() +
labs(title = "Densidad de la Distribución Normal de GDiarioTrans",
x = "Variable Aleatoria",
y = "Densidad") +
theme_minimal()
# 1) Calcular la densidad de las variables.
# 2) Crear una Grafica de la densidad de la distribucion normal
# Densidad de TimeTrans
x2 <- seq(-maximo2,maximo2,length.out = 150)
densidad2 <- dnorm(x2,Media2,Desviacion2)
#Grafico de la densidad de la distribucion normal de TimeTrans
df <- data.frame(x = x2, densidad = densidad2)
ggplot(df, aes(x = x, y = densidad)) +
geom_line() +
labs(title = "Densidad de la Distribución Normal de TimeTrans",
x = "Variable aleatoria",
y = "Densidad") +
theme_minimal()
source("C:/Users/edgar/Desktop/S1_Fuente/S1_Informe.Rmd")
