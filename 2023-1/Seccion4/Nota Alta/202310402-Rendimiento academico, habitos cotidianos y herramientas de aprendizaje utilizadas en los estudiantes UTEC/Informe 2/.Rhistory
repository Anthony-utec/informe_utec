ggplot(combined_data, aes(x = Categoria, y = Frecuencia, color = Variable, group = Variable)) +
geom_path() +
geom_point() +
labs(x = "Nivel (1 al 5)", y = "Frecuencia", color = "Variable",
title = "Polígono Frecuencias - Niveles de Estrés, Ansiedad y Depresión") +
ylim(0, 120) +
theme_minimal()
DHdsd<- data.frame(Nivel = c(4,5,6,7,8,10),
fi = c(18,58,144,63,11,6),
probabilidad = round(c(18,58,144,63,11,6)/nrow(DF),4))
gt(DHdsd) %>%
tab_header(
title = "Tabla Función Probabilística",
subtitle = "Variable Nivel de Estrés") %>%
tab_style(
style = list(
cell_fill(color = "#A5D6A7")),
locations = cells_body(rows = 3)
) %>%
tab_style(
style = list(
cell_fill(color = "#FFAB91")),
locations = cells_body(rows = 6)
)
ggplot(DF, aes(x=Horas_diarias_Sueño)) +
geom_histogram(aes(y = ..density..),binwidth=1, color="black", fill="gray") +
labs(title="Curva de densidad de Horas de Sueño",x="Nivel",y="Frecuencia") +
theme_light() +
stat_function(fun = dnorm, args = list(mean = mean(DF$Horas_diarias_Sueño), sd = sd(DF$Horas_diarias_Sueño)), lwd=1, aes(colour = "Curva Teórica")) +
geom_density(lwd=1) + aes(color = "Curva Real")
invisible({
scale_colour_manual("Curvas", values = c("red", "blue"))})
table(DF$Nivel_de_Estres)
DEst <- data.frame(Nivel = c(1,2,3,4,5),
fi = c(8,33,97,96,66),
probabilidad = round(c(8,33,97,96,66)/nrow(DF),4)*100)
gt(DEst) %>%
tab_header(
title = "Tabla Función Probabilística",
subtitle = "Variable Nivel de Estrés") %>%
tab_style(
style = list(
cell_fill(color = "#A5D6A7")),
locations = cells_body(rows = 3)
) %>%
tab_style(
style = list(
cell_fill(color = "#FFAB91")),
locations = cells_body(rows = 1)
)
ggplot(DF, aes(x=Nivel_de_Estres)) +
geom_histogram(aes(y = ..density..),binwidth=1, color="black", fill="gray") +
labs(title="Curva de densidad del Nivel de Estrés",x="Nivel",y="Frecuencia") +
theme_light() +
stat_function(fun = dnorm, args = list(mean = mean(DF$Nivel_de_Estres), sd = sd(DF$Nivel_de_Estres)), lwd=1, aes(colour = "Curva Teórica")) +
geom_density(lwd=1, aes(color = "Curva Real")) +#
scale_colour_manual("Curvas", values = c("red", "blue"))
#A = horas invertidas mayor a 8
#B = nivel de satisfacción menor a 3
# variables
horas_invertidas <- DF[, 15]
nivel_satisfaccion_pdf <- DF[, 17]
#probabilidad de A
probA <- sum(horas_invertidas >=8) / 312
#probabilidad de B
probB_pdf <- sum(nivel_satisfaccion_pdf <=3) /312
#cantidad de filas de horas invertidas mayor a 8 y niveles de satisfaccion menor a 3
total_nivel_satisfaccion_pdf <- sum(horas_invertidas>=8 & nivel_satisfaccion_pdf <=3)
#probabilidad de AnB
probAnB_pdf <- total_nivel_satisfaccion_pdf / 312
#probabilidades condicionales
prob_condicional_pdf <- probAnB_pdf / probB_pdf
prob_condicional_pdf
porcentaje <- prob_condicional_pdf*100
porcentaje
probA
#A -> niveles altos de estres
#B -> sobrecarga de cursos
cursos_llevados <- DF[, 4]
niveles_estres <- DF[, 5]
total_altos_niveles_emocionales <- sum(cursos_llevados >= 6  & niveles_estres > 4)
#probabilidad de A
prob_A <- sum(niveles_estres>4)/312
#probabilidad de B
prob_B <- sum(cursos_llevados >= 6)/312
#probabilidad de AnB
prob_AnB <- total_altos_niveles_emocionales/312
#probabilidad condicional
prob_condicional_1 <- prob_AnB / prob_B
#en porcentaje
prob_condicional_por <- prob_condicional_1 * 100
prob_condicional_1
prob_condicional_por
prob_A
p<-(sum(DF$Horas_diarias_Sueño<=6))/nrow(DF)
p
dbinom(65,300,0.73)
x<-0:65
probs <- dbinom(0:300, size = 300, prob = 0.73)
x <- seq(0, 300, by = 1)  # Ajustar la longitud de 'x'
plot(x, probs, type = "h", lwd = 1, xlab = "Número de estudiantes que duermen menos de 7 horas", ylab = "Probabilidad", main = "Distribución Binomial")
curso <- DF$Curso_seleccionado
datos_filtrados <- subset(DF,Curso_seleccionado == "Introduccion a la mecánica")
horas_dedicadas_intro <- datos_filtrados$Horas_invertidas_cSelec
horas_dedicadas_prima <- horas_dedicadas_intro[horas_dedicadas_intro >= 0 & horas_dedicadas_intro <= 7]
hist(horas_dedicadas_prima, xlim = c(0, 7), breaks=10, prob = T)
range(horas_dedicadas_prima)
#parametros teoricos
median(horas_dedicadas_prima)
mean(horas_dedicadas_prima)
sd(horas_dedicadas_prima)
mu <- mean(horas_dedicadas_prima)
sd <- sd(horas_dedicadas_prima)
boxplot(horas_dedicadas_prima, horizontal = T)
abline(v = mu, col = "red", lwd = 2)
density(horas_dedicadas_prima)
#curva real
lines(density(horas_dedicadas_prima), col = "blue", lwd = 2)
#valor maximo real
abline(h = 0.1903336, col="black", lwd = 2)
#parametros reales
seq(1, 10, by = 0.5)
Xs <- seq(0, 7, by = 0.05)
Ys <- dnorm(Xs, mean = mu, sd = sd)
hist(horas_dedicadas_prima, xlim = c(0, 7), breaks = 10, ylim = c(0, 0.5), las = 2, ylab = "", prob = T)
# Curva Teorica
lines(Xs, Ys, col = "red", lwd = 2)
# Valor máximo Teórico
max_teorico <- (1/(sd * sqrt(2*pi)))
abline(h = max_teorico, col = "black", lwd = 2)
hitograma <- hist(horas_dedicadas_prima, xlim = c(0, 7), ylim = c(0, 0.5), breaks=10, prob = T)
lines(density(horas_dedicadas_prima), col = "blue", lwd = 2)
lines(Xs, Ys, col = "red", lwd = 2)
abline(h = 0.1903336, col="black", lwd = 2)
abline(h = max_teorico, col = "black", lwd = 2)
promedio_ponderado <- DF$Promedio_ponderado_CicloPasado
promedio_bajo <- subset(DF, Promedio_ponderado_CicloPasado >= 11 & Promedio_ponderado_CicloPasado <= 14)
promedio_alto <- subset(DF, Promedio_ponderado_CicloPasado >= 15 & Promedio_ponderado_CicloPasado <= 20)
estres_promedio_bajo <- promedio_bajo[, 5]
estres_promedio_alto <- promedio_alto[, 5]
#promedio bajo
estres_pb_prima <- estres_promedio_bajo[estres_promedio_bajo >= 1 & estres_promedio_bajo <= 5]
mu <- mean(estres_pb_prima)
sd <- sd(estres_pb_prima)
#parametros reales
Xs <- seq(1, 5, by = 0.05)
Ys <- dnorm(Xs, mean = mu, sd = sd)
# Valor máximo Teórico
max_teorico_ <- (1/(sd * sqrt(2*pi)))
hitograma_promedio_bajo <- hist(estres_pb_prima, xlim = c(0, 7), ylim = c(0, 0.8), breaks=10, prob = T)
lines(density(estres_pb_prima), col = "blue", lwd = 2)
lines(Xs, Ys, col = "red", lwd = 2)
abline(h = 0.5015815, col="black", lwd = 2)
abline(h = max_teorico_, col = "black", lwd = 2)
#promedio alto
estres_pa_prima <- estres_promedio_alto[estres_promedio_alto >= 1 & estres_promedio_alto <= 5]
mu_ <- mean(estres_pa_prima)
sd_ <- sd(estres_pa_prima)
#parametros reales
Xs1 <- seq(1, 5, by = 0.05)
Ys1 <- dnorm(Xs1, mean = mu_, sd = sd_)
# Valor máximo Teórico
max_teorico_1 <- (1/(sd_ * sqrt(2*pi)))
hitograma_promedio_alto <- hist(estres_pa_prima, xlim = c(0, 7), ylim = c(0, 0.8), breaks=10, prob = T)
lines(density(estres_pa_prima), col = "blue", lwd = 2)
lines(Xs, Ys1, col = "red", lwd = 2)
abline(h = 0.735297, col="black", lwd = 2)
abline(h = max_teorico_1, col = "black", lwd = 2)
library(readr)
library(dplyr)
library(ggplot2)
library(knitr)
library(tidyr)
library(tidyverse)
library(scales)
library(ggthemes)
library(ggmosaic)
library(gt)
DF <- read_csv("data.csv")
DF <- subset(DF, select = -`Marca temporal`)
DF <- subset(DF, select = -`Puntuación`)
DF <- subset(DF, select = -`Correo UTEC`)
names(DF)[1]<-"Carrera"
names(DF)[3]<-"Edad"
names(DF)[4]<-"cursos_Por_Ciclo"
names(DF)[5]<-"Nivel_de_Estres"
names(DF)[6]<-"Nivel_de_Ansiedad"
names(DF)[7]<-"Nivel_de_Depresion"
names(DF)[8]<-"Horas_diarias_Sueño"
names(DF)[9]<-"Promedio_ponderado_CicloPasado"
names(DF)[10]<-"Mins_AFisic_PAcademico"
names(DF)[11]<-"Mins_AFisic_Vacaciones"
names(DF)[12]<-"AFisic_Animo_posi"
names(DF)[13]<-"Mins_diarios_estudio_Fuera"
names(DF)[14]<-"Curso_seleccionado"
names(DF)[15]<-"Horas_invertidas_cSelec"
names(DF)[16]<-"Factor_dificultad_Aprendizaje"
names(DF)[17]<-"Satisfaccion_PDF"
names(DF)[18]<-"Satisfaccion_Grabaciones"
names(DF)[19]<-"Satisfaccion_Asesorias"
names(DF)[20]<-"Satisfaccion_LibrosUTEC"
names(DF)[21]<-"Satisfaccion_GrupEstudio"
names(DF)[22]<-"Satisfaccion_Youtube"
names(DF)[23]<-"Satisfaccion_LibrosExternos"
names(DF)[24]<-"Otras_Herramientas"
dataCurso <- data.frame(
pdf = c(DF$Satisfaccion_PDF),
grabs = c(DF$Satisfaccion_Grabaciones),
aseso = c(DF$Satisfaccion_Asesorias),
libUtec = c(DF$Satisfaccion_LibrosUTEC),
grupoEstudio = c(DF$Satisfaccion_GrupEstudio),
youtube = c(DF$Satisfaccion_Youtube),
libExternos = c(DF$Satisfaccion_LibrosExternos),
cursoSelec = c(DF$Curso_seleccionado),
hInver = c(DF$Horas_invertidas_cSelec),
fDificultad = c(DF$Factor_dificultad_Aprendizaje)
)
hInverCurso<-table(dataCurso$hInver, dataCurso$cursoSelec)
hInverCurso <- as.data.frame(hInverCurso)
hInverCurso<- hInverCurso %>%
pivot_wider(
names_from = "Var2",
values_from = "Freq")
ggplot(DF,aes(x=" ",y=DF$Mins_diarios_estudio_Fuera)) +
geom_boxplot(color="black", fill="gray") +
geom_hline(aes(yintercept=mean(DF$Mins_diarios_estudio_Fuera), color = "Media"), lwd=0.75) +
scale_color_manual(name = " ", values = c(Media ="red")) +
labs(title="Minutos diarios de estudio Fuera",x="",y="Minutos") +
theme_light() + coord_flip() +
geom_label(aes(x=1, y=mean(DF$Mins_diarios_estudio_Fuera), label=round(mean(DF$Mins_diarios_estudio_Fuera),digits=3)), fill="white", size=3, col="red")
# Crear una tibble para los descriptores de los minutos fuera
dispersionMinutosFuera <- tibble(
Descriptor = character(),
Resultado = numeric(),
Interpretacion = character()
)
table(DF$Mins_diarios_estudio_Fuera)
# Agregar una fila a la tibble
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Mínimo", Resultado = min(DF$Mins_diarios_estudio_Fuera), Interpretacion = "El minimo de los minutos es 0, tenemos algunos alumnos que no estudian fuera de la universidad")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Máximo", Resultado = max(DF$Mins_diarios_estudio_Fuera), Interpretacion = "La máxima cantidad de minutos presentada fue de 1080 minutos por una sola persona")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Cuartil 3", Resultado = quantile(DF$Mins_diarios_estudio_Fuera, 0.75), Interpretacion = "El 75% de los datos son menores a 270 minutos")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Cuartil 1", Resultado = quantile(DF$Mins_diarios_estudio_Fuera, 0.25), Interpretacion = "El 25% de los datos son menores a 60 minutos")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Rango Intercuartil", Resultado = round(IQR(DF$Mins_diarios_estudio_Fuera), 3), Interpretacion = "El 50% de los datos se encuentra entre 270 minutos y 60 minutos, lo cual nos daría un RIQ igual a 210")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Media", Resultado = round(mean(DF$Mins_diarios_estudio_Fuera), 3), Interpretacion = "En promedio, los alumnos en la muestra estudian 194.953 minutos")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Mediana", Resultado = round(median(DF$Mins_diarios_estudio_Fuera), 3), Interpretacion = "El 50% de los datos son menores o iguales a 180 minutos")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Desviación Estándar", Resultado = round(sd(DF$Mins_diarios_estudio_Fuera), 3), Interpretacion = "Dado que los valores de los minutos de estudio van desde 0 hasta 1080, una desviación estándar de 178.776 sugiere que los minutos de estudio fuera de la universidad varían ampliamente en la muestra. Esto implica que hay una alta variabilidad en los hábitos de estudio de los alumnos fuera del campus universitario.")
dispersionMinutosFuera <- dispersionMinutosFuera %>% add_row(Descriptor = "Coeficiente de variación", Resultado = 100 * round((sd(DF$Mins_diarios_estudio_Fuera)/mean(DF$Mins_diarios_estudio_Fuera)), 3), Interpretacion = "Un coeficiente de variación del 91.7% implica que la dispersión de los minutos de estudio fuera de la universidad es muy amplia en relación con la media. Esto sugiere que hay una gran variabilidad en los hábitos de estudio de los alumnos fuera del campus universitario")
kable(dispersionMinutosFuera)
ggplot(DF, aes(x = Horas_diarias_Sueño)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black", position = "identity") +
geom_vline(aes(xintercept = mean(Horas_diarias_Sueño)), color = "red", linetype = "dashed", lwd = 1) +
geom_vline(aes(xintercept = median(Horas_diarias_Sueño)), color = "blue", linetype = "dashed", lwd = 1) +
geom_vline(aes(xintercept = quantile(Horas_diarias_Sueño, 0.25)), color = "green", linetype = "dashed", lwd = 1) +
geom_vline(aes(xintercept = quantile(Horas_diarias_Sueño, 0.75)), color = "purple", linetype = "dashed", lwd = 1) +
labs(x = "Horas diarias de sueño", y = "Frecuencia", title = "Histograma de Horas diarias de sueño") +
theme_minimal()
# Crear una tibble para los descriptores de los minutos fuera
dispersionHorasSueño <- tibble(
Descriptor = character(),
Resultado = numeric(),
Interpretacion = character()
)
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Mínimo", Resultado = min(DF$Horas_diarias_Sueño), Interpretacion = "El valor mínimo de 4 sugiere que al menos todas las personas encuestadas han dormido al menos 4 horas diarias")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Máximo", Resultado = max(DF$Horas_diarias_Sueño), Interpretacion = "El valor máximo de 1o sugiere que ninguno de los encuestados ha dormido más de 10 horas diarias, es lo máximo que se ha registrado en la muestra")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Cuartil 3", Resultado = quantile(DF$Horas_diarias_Sueño, 0.75), Interpretacion = "Aproximadamente el 75% de las observaciones en los datos tienen un registro de sueño igual o inferior a 7 horas diarias")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Cuartil 1", Resultado = quantile(DF$Horas_diarias_Sueño, 0.25), Interpretacion = "Aproximadamente el 25% de las observaciones en los datos tienen un registro máximo de 5 horas de sueño diarias")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Rango Intercuartil", Resultado = round(IQR(DF$Horas_diarias_Sueño), 3), Interpretacion = "El 50% de los datos se encuentran entre 7 y 5 horas")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Media", Resultado = round(mean(DF$Horas_diarias_Sueño), 3), Interpretacion = "En promedio, las horas registradas muestran que los alumnos durmieron 6.5 horas")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Mediana", Resultado = round(median(DF$Horas_diarias_Sueño), 3), Interpretacion = "El 50% de los datos son menores o iguales a 6 horas")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Desviación Estándar", Resultado = round(sd(DF$Horas_diarias_Sueño), 3), Interpretacion = "Indica una dispersión relativamente baja de los valores alrededor de la media. Esto significa que las horas de sueño de los alumnos en la muestra tienden a estar bastante cercanas a la media y hay una menor variabilidad en las horas observadas.")
dispersionHorasSueño <- dispersionHorasSueño %>% add_row(Descriptor = "Coeficiente de variación", Resultado = 100 * round((sd(DF$Horas_diarias_Sueño)/mean(DF$Horas_diarias_Sueño)), 3), Interpretacion = "Dado que los valores van de 4 a 10, y considerando que el CV es relativamente bajo (17.4%), se puede inferir que la muestra de observaciones tiende a tener una variabilidad moderada en comparación con la media. Esto implica que las horas de sueño diarias de los alumnos no varían significativamente con respecto a la media y se encuentran relativamente agrupadas alrededor de aquella")
kable(dispersionHorasSueño)
# Creamos una lista con los datos de los tres boxplots
data_list <- list(
Calculo1 = hInverCurso$`Calculo 1`,
Introduccion = hInverCurso$`Introduccion a la mecánica`,
Programacion = hInverCurso$`Programación 1`
)
# Convertir la lista en un dataframe
hCursosdf <- data.frame(
Curso = rep(names(data_list), sapply(data_list, length)),
horas = unlist(data_list)
)
ggplot(hCursosdf, aes(x = Curso, y = horas)) +
geom_boxplot() +
labs(title = "Horas invertidas semanalmente a un curso por Curso Seleccionado", y = "Horas invertidas") +
theme_light()
horasxCursos <- tibble(
Descriptores = character(),
'Calculo 1' = numeric(),
'Introduccion a mecánica' = numeric(),
'Programación 1' = numeric()
)
##Minimo
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Mínimo", `Calculo 1` = min(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = min(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = min(hInverCurso$`Programación 1`))
##Maximo
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Máximo", `Calculo 1` = max(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = max(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = max(hInverCurso$`Programación 1`))
##cuartil 3
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Cuartil 3", `Calculo 1` = quantile(hInverCurso$`Calculo 1` , 0.75), `Introduccion a mecánica` = quantile(hInverCurso$`Introduccion a la mecánica` , 0.75), `Programación 1` = quantile(hInverCurso$`Programación 1` , 0.75))
##cuartil 1
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Cuartil 1", `Calculo 1` = quantile(hInverCurso$`Calculo 1` , 0.25), `Introduccion a mecánica` = quantile(hInverCurso$`Introduccion a la mecánica` , 0.25), `Programación 1` = quantile(hInverCurso$`Programación 1` , 0.25))
##IQR
horasxCursos <- horasxCursos %>% add_row(Descriptores = "IQR", `Calculo 1` = IQR(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = IQR(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = IQR(hInverCurso$`Programación 1`))
##Media
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Media", `Calculo 1` = mean(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = mean(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = mean(hInverCurso$`Programación 1`))
##Mediana
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Mediana", `Calculo 1` = median(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = median(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = median(hInverCurso$`Programación 1`))
##Varianza
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Varianza", `Calculo 1` = var(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = var(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = var(hInverCurso$`Programación 1`))
#Desviación Estándar
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Desviación estándar", `Calculo 1` = sd(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = sd(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = sd(hInverCurso$`Programación 1`))
#Coeficiente de Variación
horasxCursos <- horasxCursos %>% add_row(Descriptores = "Coeficiente de Variación", `Calculo 1` = sd(hInverCurso$`Calculo 1`)/mean(hInverCurso$`Calculo 1`), `Introduccion a mecánica` = sd(hInverCurso$`Introduccion a la mecánica`)/mean(hInverCurso$`Introduccion a la mecánica`), `Programación 1` = sd(hInverCurso$`Programación 1`)/mean(hInverCurso$`Programación 1`))
kable(horasxCursos)
# Creamos un data frame con los datos de frecuencia y niveles de estrés, ansiedad y depresión
dataEAD <- data.frame(
Nivel_de_Estres = names(table(DF$Nivel_de_Estres)),
Frecuencia_Estres = as.vector(table(DF$Nivel_de_Estres)),
Nivel_de_Ansiedad = names(table(DF$Nivel_de_Ansiedad)),
Frecuencia_Ansiedad = as.vector(table(DF$Nivel_de_Ansiedad)),
Nivel_de_Depresion = names(table(DF$Nivel_de_Depresion)),
Frecuencia_Depresion = as.vector(table(DF$Nivel_de_Depresion))
)
# Combinamos los datos en un solo data frame
combined_data <- data.frame(
Categoria = c(dataEAD$Nivel_de_Estres, dataEAD$Nivel_de_Ansiedad, dataEAD$Nivel_de_Depresion),
Frecuencia = c(dataEAD$Frecuencia_Estres, dataEAD$Frecuencia_Ansiedad, dataEAD$Frecuencia_Depresion),
Variable = rep(c("Nivel de Estrés", "Nivel de Ansiedad", "Nivel de Depresión"), each = length(dataEAD$Nivel_de_Estres))
)
ggplot(combined_data, aes(x = Categoria, y = Frecuencia, color = Variable, group = Variable)) +
geom_path() +
geom_point() +
labs(x = "Nivel (1 al 5)", y = "Frecuencia", color = "Variable",
title = "Polígono Frecuencias - Niveles de Estrés, Ansiedad y Depresión") +
ylim(0, 120) +
theme_minimal()
DHdsd<- data.frame(Nivel = c(4,5,6,7,8,10),
fi = c(18,58,144,63,11,6),
probabilidad = round(c(18,58,144,63,11,6)/nrow(DF),4))
gt(DHdsd) %>%
tab_header(
title = "Tabla Función Probabilística",
subtitle = "Variable Nivel de Estrés") %>%
tab_style(
style = list(
cell_fill(color = "#A5D6A7")),
locations = cells_body(rows = 3)
) %>%
tab_style(
style = list(
cell_fill(color = "#FFAB91")),
locations = cells_body(rows = 6)
)
ggplot(DF, aes(x=Horas_diarias_Sueño)) +
geom_histogram(aes(y = ..density..),binwidth=1, color="black", fill="gray") +
labs(title="Curva de densidad de Horas de Sueño",x="Nivel",y="Frecuencia") +
theme_light() +
stat_function(fun = dnorm, args = list(mean = mean(DF$Horas_diarias_Sueño), sd = sd(DF$Horas_diarias_Sueño)), lwd=1, aes(colour = "Curva Teórica")) +
geom_density(lwd=1) + aes(color = "Curva Real")
invisible({
scale_colour_manual("Curvas", values = c("red", "blue"))})
table(DF$Nivel_de_Estres)
DEst <- data.frame(Nivel = c(1,2,3,4,5),
fi = c(8,33,97,96,66),
probabilidad = round(c(8,33,97,96,66)/nrow(DF),4)*100)
gt(DEst) %>%
tab_header(
title = "Tabla Función Probabilística",
subtitle = "Variable Nivel de Estrés") %>%
tab_style(
style = list(
cell_fill(color = "#A5D6A7")),
locations = cells_body(rows = 3)
) %>%
tab_style(
style = list(
cell_fill(color = "#FFAB91")),
locations = cells_body(rows = 1)
)
ggplot(DF, aes(x=Nivel_de_Estres)) +
geom_histogram(aes(y = ..density..),binwidth=1, color="black", fill="gray") +
labs(title="Curva de densidad del Nivel de Estrés",x="Nivel",y="Frecuencia") +
theme_light() +
stat_function(fun = dnorm, args = list(mean = mean(DF$Nivel_de_Estres), sd = sd(DF$Nivel_de_Estres)), lwd=1, aes(colour = "Curva Teórica")) +
geom_density(lwd=1, aes(color = "Curva Real")) +#
scale_colour_manual("Curvas", values = c("red", "blue"))
#A = horas invertidas mayor a 8
#B = nivel de satisfacción menor a 3
# variables
horas_invertidas <- DF[, 15]
nivel_satisfaccion_pdf <- DF[, 17]
#probabilidad de A
probA <- sum(horas_invertidas >=8) / 312
#probabilidad de B
probB_pdf <- sum(nivel_satisfaccion_pdf <=3) /312
#cantidad de filas de horas invertidas mayor a 8 y niveles de satisfaccion menor a 3
total_nivel_satisfaccion_pdf <- sum(horas_invertidas>=8 & nivel_satisfaccion_pdf <=3)
#probabilidad de AnB
probAnB_pdf <- total_nivel_satisfaccion_pdf / 312
#probabilidades condicionales
prob_condicional_pdf <- probAnB_pdf / probB_pdf
prob_condicional_pdf
porcentaje <- prob_condicional_pdf*100
porcentaje
probA
#A -> niveles altos de estres
#B -> sobrecarga de cursos
cursos_llevados <- DF[, 4]
niveles_estres <- DF[, 5]
total_altos_niveles_emocionales <- sum(cursos_llevados >= 6  & niveles_estres > 4)
#probabilidad de A
prob_A <- sum(niveles_estres>4)/312
#probabilidad de B
prob_B <- sum(cursos_llevados >= 6)/312
#probabilidad de AnB
prob_AnB <- total_altos_niveles_emocionales/312
#probabilidad condicional
prob_condicional_1 <- prob_AnB / prob_B
#en porcentaje
prob_condicional_por <- prob_condicional_1 * 100
prob_condicional_1
prob_condicional_por
prob_A
p<-(sum(DF$Horas_diarias_Sueño<=6))/nrow(DF)
p
dbinom(65,300,0.73)
x<-0:65
probs <- dbinom(0:300, size = 300, prob = 0.73)
x <- seq(0, 300, by = 1)  # Ajustar la longitud de 'x'
plot(x, probs, type = "h", lwd = 1, xlab = "Número de estudiantes que duermen menos de 7 horas", ylab = "Probabilidad", main = "Distribución Binomial")
Esperanza<-mean(DF$Horas_diarias_Sueño<=6)
Esperanza
Varianza<-var(DF$Horas_diarias_Sueño<=6)
Varianza
autodidactas<-sum(DF$Mins_diarios_estudio_Fuera>=210)
n_autodicatas<-sum(DF$Mins_diarios_estudio_Fuera<210)
m<-autodidactas
n<-nrow(DF)
k<-70
probabilidad <- dhyper(24, m, n - m, k)
x <- 0:k
densidad <- dhyper(x, m, n - m, k)
plot(x, densidad, type = "h", ylim = c(0, max(densidad)),
main = "Distribución Hipergeométrica",
xlab = "Número de personas autodidactas en la muestra", ylab = "Densidad")
curso <- DF$Curso_seleccionado
datos_filtrados <- subset(DF,Curso_seleccionado == "Introduccion a la mecánica")
horas_dedicadas_intro <- datos_filtrados$Horas_invertidas_cSelec
horas_dedicadas_prima <- horas_dedicadas_intro[horas_dedicadas_intro >= 0 & horas_dedicadas_intro <= 7]
hist(horas_dedicadas_prima, xlim = c(0, 7), breaks=10, prob = T)
range(horas_dedicadas_prima)
#parametros teoricos
median(horas_dedicadas_prima)
mean(horas_dedicadas_prima)
sd(horas_dedicadas_prima)
mu <- mean(horas_dedicadas_prima)
sd <- sd(horas_dedicadas_prima)
boxplot(horas_dedicadas_prima, horizontal = T)
abline(v = mu, col = "red", lwd = 2)
density(horas_dedicadas_prima)
#curva real
lines(density(horas_dedicadas_prima), col = "blue", lwd = 2)
#valor maximo real
abline(h = 0.1903336, col="black", lwd = 2)
#parametros reales
seq(1, 10, by = 0.5)
Xs <- seq(0, 7, by = 0.05)
Ys <- dnorm(Xs, mean = mu, sd = sd)
hist(horas_dedicadas_prima, xlim = c(0, 7), breaks = 10, ylim = c(0, 0.5), las = 2, ylab = "", prob = T)
# Curva Teorica
lines(Xs, Ys, col = "red", lwd = 2)
# Valor máximo Teórico
max_teorico <- (1/(sd * sqrt(2*pi)))
abline(h = max_teorico, col = "black", lwd = 2)
hitograma <- hist(horas_dedicadas_prima, xlim = c(0, 7), ylim = c(0, 0.5), breaks=10, prob = T)
lines(density(horas_dedicadas_prima), col = "blue", lwd = 2)
lines(Xs, Ys, col = "red", lwd = 2)
abline(h = 0.1903336, col="black", lwd = 2)
abline(h = max_teorico, col = "black", lwd = 2)
promedio_ponderado <- DF$Promedio_ponderado_CicloPasado
promedio_bajo <- subset(DF, Promedio_ponderado_CicloPasado >= 11 & Promedio_ponderado_CicloPasado <= 14)
promedio_alto <- subset(DF, Promedio_ponderado_CicloPasado >= 15 & Promedio_ponderado_CicloPasado <= 20)
estres_promedio_bajo <- promedio_bajo[, 5]
estres_promedio_alto <- promedio_alto[, 5]
#promedio bajo
estres_pb_prima <- estres_promedio_bajo[estres_promedio_bajo >= 1 & estres_promedio_bajo <= 5]
mu <- mean(estres_pb_prima)
sd <- sd(estres_pb_prima)
#parametros reales
Xs <- seq(1, 5, by = 0.05)
Ys <- dnorm(Xs, mean = mu, sd = sd)
# Valor máximo Teórico
max_teorico_ <- (1/(sd * sqrt(2*pi)))
hitograma_promedio_bajo <- hist(estres_pb_prima, xlim = c(0, 7), ylim = c(0, 0.8), breaks=10, prob = T)
lines(density(estres_pb_prima), col = "blue", lwd = 2)
lines(Xs, Ys, col = "red", lwd = 2)
abline(h = 0.5015815, col="black", lwd = 2)
abline(h = max_teorico_, col = "black", lwd = 2)
#promedio alto
estres_pa_prima <- estres_promedio_alto[estres_promedio_alto >= 1 & estres_promedio_alto <= 5]
mu_ <- mean(estres_pa_prima)
sd_ <- sd(estres_pa_prima)
#parametros reales
Xs1 <- seq(1, 5, by = 0.05)
Ys1 <- dnorm(Xs1, mean = mu_, sd = sd_)
# Valor máximo Teórico
max_teorico_1 <- (1/(sd_ * sqrt(2*pi)))
hitograma_promedio_alto <- hist(estres_pa_prima, xlim = c(0, 7), ylim = c(0, 0.8), breaks=10, prob = T)
lines(density(estres_pa_prima), col = "blue", lwd = 2)
lines(Xs, Ys1, col = "red", lwd = 2)
abline(h = 0.735297, col="black", lwd = 2)
abline(h = max_teorico_1, col = "black", lwd = 2)
