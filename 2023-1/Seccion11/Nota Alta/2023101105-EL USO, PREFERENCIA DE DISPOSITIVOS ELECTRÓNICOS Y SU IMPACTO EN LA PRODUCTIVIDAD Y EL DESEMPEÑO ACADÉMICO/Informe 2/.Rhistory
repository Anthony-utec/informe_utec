View(CA)
names(CA)
str(DDL) #Resumen del tipo de variable de la base de datos
str(CA) #Resumen del tipo de variable de la base de datos
summary(CA) #Resumen general de la base de datos
names(CA) #Nombre de todas las variables
rename(CA,
DISPOSITIVOS="DISPOSITIVOS...15",
CANDISPOSI="DISPOSITIVOS...5",
ORDENM="ORDEN DE MÉRITO",
CANAPLI= "CANTIDAD DE APLICACIONES",
) -> CA
rename(CA,
PROMEDIO="PROMEDIO PONDERADO"
) -> CA
sum(is.na(CA))
sum(!is.na(CA))
sum(complete.cases(CA))
sum(!complete.cases(CA))
unique(CA$COSTO)
CA %>% mutate(COSTO =
ifelse(COSTO == "2", "2000.0",
ifelse(COSTO == "1", "1100.0",
ifelse(COSTO == "20", "2000.0",
ifelse(COSTO == "12", "1200.0",
ifelse(COSTO == "5", "5000.0",
ifelse(COSTO == "100", "1000.0",
COSTO
))))))) ->CA
CA %>% count(COSTO)
CA$Lenovo <- NA
CA$HP <- NA
CA$Asus <- NA
CA$Acer <- NA
CA$Dell <- NA
CA$Samsung <- NA
CA$Apple <- NA
CA$Xiaomi <- NA
CA$Motorola <- NA
CA$Huawei <- NA
CA$Razer <- NA
CA$otros <- NA
CA$Lenovo[grep("Lenovo", CA$MARCA)] <- "Sí"
CA$HP[grep("HP", CA$MARCA)] <- "Sí"
CA$Asus[grep("Asus", CA$MARCA)] <- "Sí"
CA$Acer[grep("Acer", CA$MARCA)] <- "Sí"
CA$Dell[grep("Dell", CA$MARCA)] <- "Sí"
CA$Samsung[grep("Samsung", CA$MARCA)] <- "Sí"
CA$Apple[grep("Apple", CA$MARCA)] <- "Sí"
CA$Xiaomi[grep("Xiaomi", CA$MARCA)] <- "Sí"
CA$Motorola[grep("Motorola", CA$MARCA)] <- "Sí"
CA$Huawei[grep("Huawei", CA$MARCA)] <- "Sí"
CA$Razer[grep("Razer", CA$MARCA)] <- "Sí"
CA$otros[grep("Otros", CA$MARCA)] <- "Sí"
CA$Lenovo[is.na(CA$Lenovo)] <- "No"
CA$HP[is.na(CA$HP)] <- "No"
CA$Asus[is.na(CA$Asus)] <- "No"
CA$Acer[is.na(CA$Acer)] <- "No"
CA$Dell[is.na(CA$Dell)] <- "No"
CA$Samsung[is.na(CA$Samsung)] <- "No"
CA$Apple[is.na(CA$Apple)] <- "No"
CA$Xiaomi[is.na(CA$Xiaomi)] <- "No"
CA$Motorola[is.na(CA$Motorola)] <- "No"
CA$Huawei[is.na(CA$Huawei)] <- "No"
CA$Razer[is.na(CA$Razer)] <- "No"
CA$otros[is.na(CA$otros)] <- "No"
CA %>% select(Lenovo)%>% filter(Lenovo=="Sí") -> graf_Lenovo
CA %>% select(HP)%>% filter(HP=="Sí") -> graf_HP
CA %>% select(Asus)%>% filter(Asus=="Sí") -> graf_Asus
CA %>% select(Acer)%>% filter(Acer=="Sí") -> graf_Acer
CA %>% select(Dell)%>% filter(Dell=="Sí") -> graf_Dell
CA %>% select(Samsung)%>% filter(Samsung=="Sí") -> graf_Samsung
CA %>% select(Apple)%>% filter(Apple=="Sí") -> graf_Apple
CA %>% select(Xiaomi)%>% filter(Xiaomi=="Sí") -> graf_Xiaomi
CA %>% select(Motorola)%>% filter(Motorola=="Sí") -> graf_Motorola
CA %>% select(Huawei)%>% filter(Huawei=="Sí") -> graf_Huawei
CA %>% select(Razer)%>% filter(Razer=="Sí") -> graf_Razer
CA %>% select(otros)%>% filter(otros=="Sí") -> graf_otros
MARCAS <-c("Lenovo", "HP")
for (i in 1:nrow(graf_Lenovo)){
MARCAS[[length(MARCAS) + 1]]<-"Lenovo"}
for (i in 1:nrow(graf_HP)){
MARCAS[[length(MARCAS) + 1]]<-"HP"}
for (i in 1:nrow(graf_Asus)){
MARCAS[[length(MARCAS) + 1]]<-"Asus"}
for (i in 1:nrow(graf_Acer)){
MARCAS[[length(MARCAS) + 1]]<-"Acer"}
for (i in 1:nrow(graf_Dell)){
MARCAS[[length(MARCAS) + 1]]<-"Dell"}
for (i in 1:nrow(graf_Samsung)){
MARCAS[[length(MARCAS) + 1]]<-"Samsung"}
for (i in 1:nrow(graf_Apple)){
MARCAS[[length(MARCAS) + 1]]<-"Apple"}
for (i in 1:nrow(graf_Xiaomi)){
MARCAS[[length(MARCAS) + 1]]<-"Xiaomi"}
for (i in 1:nrow(graf_Motorola)){
MARCAS[[length(MARCAS) + 1]]<-"Motorola"}
for (i in 1:nrow(graf_Huawei)){
MARCAS[[length(MARCAS) + 1]]<-"Huawei"}
for (i in 1:nrow(graf_Razer)){
MARCAS[[length(MARCAS) + 1]]<-"Razer"}
for (i in 1:nrow(graf_otros)){
MARCAS[[length(MARCAS) + 1]]<-"otros"}
MARCAS <- MARCAS [-c(1,2)]
MARCASlevels <- factor(MARCAS, levels = c("Lenovo","HP","Asus", "Acer", "Dell", "Samsung", "Apple", "Xiaomi", "Motorola", "Huawei",
"Razer","otros"))
str(CA)
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("modeest")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("modeest")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
CA <- CA[,c(3:20)]
names(CA)
install.packages("readr")
install.packages("dplyr")
install.packages("car")
install.packages("DescTools")
install.packages("raster")
library("readr")
library("dplyr")
library("car")
library("DescTools")
library("raster")
library("readr")
library("dplyr")
library("car")
library("DescTools")
library("raster")
library("readr")
library("dplyr")
library("car")
library("DescTools")
library("raster")
library("readr")
library("dplyr")
library("car")
library("DescTools")
library("raster")
Datos <- read_csv("Encuesta2023_G5.csv")
Datos <- read_csv("Encuesta2023_G5.xlsx")
View(Datos)
Datos <- read_csv("Encuesta2023_G5.csv")
Datos <- read_csv("Encuesta2023_G5.csv")
Datos <- read_csv("Encuesta2023_G5.csv")
Datos <- Datos[,c(3:20)]
Datos <- read_csv("Encuesta2023_G5.csv")
str(CA) #Resumen del tipo de variable de la base de datos
summary(CA) #Resumen general de la base de datos
names(CA) #Nombre de todas las variables
str(Datos) #Resumen del tipo de variable de la base de datos
summary(Datos) #Resumen general de la base de datos
names(Datos) #Nombre de todas las variables
Datos <- Datos[,c(3:20)]
str(Datos) #Resumen del tipo de variable de la base de datos
summary(Datos) #Resumen general de la base de datos
names(Datos) #Nombre de todas las variables
str(Datos) #Resumen del tipo de variable de la base de datos
#summary(Datos) #Resumen general de la base de datos
names(Datos)
rename(Datos,
DISPOSITIVOS = "DISPOSITIVOS...15",
CANDISPOSI = "DISPOSITIVOS...5",
ORDENM = "ORDEN DE MÉRITO",
CANAPLI = "CANTIDAD DE APLICACIONES",
PROMEDIO = "PROMEDIO PONDERADO",
) -> Datos
str(Datos) #Resumen del tipo de variable de la base de datos
#summary(Datos) #Resumen general de la base de datos
Datos <- read_csv("Encuesta2023_G5.csv")
Datos <- Datos[,c(3:20)]
names(Datos)
rename(Datos,
DISPOSITIVOS = "DISPOSITIVOS...15",
CANTDISPOSITIVO = "DISPOSITIVOS...5",
ORDENM = "ORDEN DE MÉRITO",
CANAPLI = "CANTIDAD DE APLICACIONES",
MAXNOTA = "NOTA",
PROMEDIO = "PROMEDIO PONDERADO",
) -> Datos
str(Datos) #Resumen del tipo de variable de la base de datos
#summary(Datos) #Resumen general de la base de datos
Datos <- Datos[,c(3:20)]
Datos <- read_csv("Encuesta2023_G5.csv")
Datos <- Datos[,c(3:20)]
names(Datos)
rename(Datos,
CANTDISPOSITIVOS = "DISPOSITIVOS...15",
DISPOSITIVOS = "DISPOSITIVOS...5",
ORDENM = "ORDEN DE MÉRITO",
CANAPLI = "CANTIDAD DE APLICACIONES",
MAXNOTA = "NOTA",
PROMEDIO = "PROMEDIO PONDERADO",
) -> Datos
str(Datos) #Resumen del tipo de variable de la base de datos
#summary(Datos) #Resumen general de la base de datos
Datos <- read_csv("Encuesta2023_G5.csv")
Datos <- Datos[,c(3:20)]
names(Datos)
rename(Datos,
CANTDISPOSITIVOS = "DISPOSITIVOS...15",
DISPOSITIVO = "DISPOSITIVOS...5",
ORDENM = "ORDEN DE MÉRITO",
CANAPLI = "CANTIDAD DE APLICACIONES",
MAXNOTA = "NOTA",
PROMEDIO = "PROMEDIO PONDERADO",
) -> Datos
str(Datos) #Resumen del tipo de variable de la base de datos
#summary(Datos) #Resumen general de la base de datos
Datos$CANAPLI <- as.integer(Datos$CANAPLI) #De numérica a entero.
Datos$CANTDISPOSITIVOS <- as.integer(Datos$CANTDISPOSITIVOS) #De numérica a entero.
Datos$CURSOS <- as.integer(Datos$CURSOS) #De numérica a entero.
Datos$DÍAS <- as.integer(Datos$DÍAS) #De numérica a entero.
Datos$SATISFACCIÓN <- as.character(Datos$SATISFACCIÓN) #De numérica a char.
Datos$FRECUENCIA <- as.character(Datos$FRECUENCIA) #De numérica a char.
Datos$MINUTOS <- as.numeric(Datos$MINUTOS) #De char a numérica.
Datos$COSTO<- as.numeric(Datos$COSTO) #De char a numérica.
str(Datos) #Resumen del tipo de variable de la base de datos
#summary(Datos) #Resumen general de la base de datos
names(Datos)
sum(is.na(Datos))
sum(!is.na(Datos))
View(CA)
sum(complete.cases(CA))
sum(!complete.cases(CA))
NewBase$Lenovo <- NA
NewBase$Lenovo <- NA
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = c[1:300]
newBase = Datos
NewBase$Lenovo <- NA
View(newBase)
newBase = Datos
NewBase$Lenovo <- NA
View(newBase)
CA = Datos
CA$Lenovo <- NA
CA$HP <- NA
CA$Asus <- NA
CA$Acer <- NA
CA$Dell <- NA
CA$Samsung <- NA
CA$Apple <- NA
CA$Xiaomi <- NA
CA$Motorola <- NA
CA$Huawei <- NA
CA$Razer <- NA
CA$otros <- NA
CA$Lenovo[grep("Lenovo", CA$MARCA)] <- "Sí"
CA$HP[grep("HP", CA$MARCA)] <- "Sí"
CA$Asus[grep("Asus", CA$MARCA)] <- "Sí"
CA$Acer[grep("Acer", CA$MARCA)] <- "Sí"
CA$Dell[grep("Dell", CA$MARCA)] <- "Sí"
CA$Samsung[grep("Samsung", CA$MARCA)] <- "Sí"
CA$Apple[grep("Apple", CA$MARCA)] <- "Sí"
CA$Xiaomi[grep("Xiaomi", CA$MARCA)] <- "Sí"
CA$Motorola[grep("Motorola", CA$MARCA)] <- "Sí"
CA$Huawei[grep("Huawei", CA$MARCA)] <- "Sí"
CA$Razer[grep("Razer", CA$MARCA)] <- "Sí"
CA$otros[grep("Otros", CA$MARCA)] <- "Sí"
CA$Lenovo[is.na(CA$Lenovo)] <- "No"
CA$HP[is.na(CA$HP)] <- "No"
CA$Asus[is.na(CA$Asus)] <- "No"
CA$Acer[is.na(CA$Acer)] <- "No"
CA$Dell[is.na(CA$Dell)] <- "No"
CA$Samsung[is.na(CA$Samsung)] <- "No"
CA$Apple[is.na(CA$Apple)] <- "No"
CA$Xiaomi[is.na(CA$Xiaomi)] <- "No"
CA$Motorola[is.na(CA$Motorola)] <- "No"
CA$Huawei[is.na(CA$Huawei)] <- "No"
CA$Razer[is.na(CA$Razer)] <- "No"
CA$otros[is.na(CA$otros)] <- "No"
View(CA)
View(CA)
CA <- CA[,c(18:30)]
View(CA)
sum(complete.cases(Datos))
sum(!complete.cases(Datos))
library("readr")
library("dplyr")
library("car")
library("DescTools")
library("raster")
library("ggplot2")
library("knitr")
library("kableExtra")
library("tidyr")
library("tidyverse")
library("rriskDistributions")
library("MASS")
library("fastGraph")
Datos <- read_csv("Base_de_datos_limpio.csv")
sum(is.na(Datos))
sum(!is.na(Datos))
sum(complete.cases(Datos))
sum(!complete.cases(Datos))
par(mar = c(7, 4, 4, 4) + 0.1)
boxplot(PROMEDIO ~ APLICACIONES,
data = Datos,
main = "Gráfico(2.1)
Relacion entre las aplicaciones y el promedio ponderado",
xlab = "",
ylab = "Promedio ponderado",
cex.axis = 0.6,
las = 2,
col = c("lightblue", "lightgreen", "lightyellow"))
title(xlab = "Aplicaciones", line = 5, adj = 0.5)
regre<-plot(Datos$PROMEDIO~Datos$MINUTOS,pch=20,col=c("black","red"),main="Gráfica 2.2
Promedio vs. Minutos",xlab="Minutos",ylab="Promedio")
abline(lm(Datos$PROMEDIO~Datos$MINUTOS),col="blue",lty=1)
ggplot(Datos, aes(x = ORDENM, y = CANTDISPOSITIVOS)) +
geom_violin(fill = "lightblue", color = "black") +
labs(title = "                                                           Gráfica(2.3)
Relacion entre la cantidad de aplicaciones y el promedio ponderado",
x = "Orden de Mérito",
y = "Cantidad de Dispositivos")
boxplot(MAXNOTA ~ ÁREA,
data = Datos,
main = "Gráfica 4.0
Área académica en el que se obtuvo mayor nota",
xlab = "Áreas académicas",
ylab = "Maxima nota obtenida",
cex.axis = 0.6,
las = 1,
col = c("lightblue", "lightgreen", "lightyellow"))
(Total_casos <- sum(table(Datos$DISPOSITIVO)))
Cantidad <- table(Datos$DISPOSITIVO)
Probabilidad <- round(Cantidad/Total_casos,4)
cbind(Cantidad,Probabilidad)
evento_l_intersección_s <- sum(Datos$DISPOSITIVO == "Laptop" & Datos$DISPOSITIVO == "Smartphone")
(probabilida_evento_l_intersección_s <- round((evento_l_intersección_s/Total_casos),4))
evento_l_union_s <- sum(Datos$DISPOSITIVO == "Laptop" | Datos$DISPOSITIVO == "Smartphone")
(probabilida_evento_l_union_s <- round((evento_l_union_s/Total_casos),4))
evento <- sum(Datos$DISPOSITIVO  == "Tablet")
(probabilida_evento <- round((evento/Total_casos),4))
evento_no_tablet <- sum(Datos$DISPOSITIVO  != "Tablet")
(probabilida_evento_no_tablet <- round((evento_no_tablet/Total_casos),4))
(Total_casos <- sum(table(Datos$PROMEDIO)))
Datos$ESCALA = recode(round(Datos$PROMEDIO)," 18:20 = 'Excelente' ; 14:17 = 'Satisfactorio' ; 11:13 = 'Regular' ; 0:10 = 'Deficiente' ")
Frecuencia <- table(Datos$ESCALA)
Probabilidad <- round((Frecuencia/Total_casos),4)
cbind(Frecuencia,Probabilidad)
addmargins(table(Datos$ESCALA,Datos$DISPOSITIVO))
round((21/193),4)
round((63/193),4)
round(((101+9)/193),4)
round((((1+15+21)+(101-84)+(82-63))/193),4)
(evento_A <- sum(Datos$MINUTOS > 320))
(evento_B <- sum(Datos$CANTDISPOSITIVOS < 3))
(evento_A_interseccion_B <- sum(Datos$MINUTOS > 320 & Datos$CANTDISPOSITIVOS < 3))
(total_eventos <- length(Datos$MINUTOS))
(a_menos_b <- evento_A - evento_A_interseccion_B)
(b_menos_a <- evento_B - evento_A_interseccion_B)
P_evento_A <- evento_A / total_eventos
round(P_evento_A,4)
P_evento_B <- evento_B / total_eventos
round(P_evento_B,4)
P_evento_A_interseccion_B <- evento_A_interseccion_B/total_eventos
round(P_evento_A_interseccion_B,4)
round((P_evento_A * P_evento_B),4)
(P_A_dado_B <- round(P_evento_A_interseccion_B / P_evento_B, 4))
(round(P_evento_A,4))
(P_B_dado_A <- round(P_evento_A_interseccion_B / P_evento_A, 4))
(round(P_evento_B,4))
(evento_A <- sum(Datos$DISPOSITIVO == "Laptop"))
(evento_B <- sum(Datos$PROMEDIO > 15))
(evento_A_interseccion_B <- sum(Datos$DISPOSITIVO == "Laptop" & Datos$PROMEDIO > 15))
(total_eventos <- length(Datos$MINUTOS))
(a_menos_b <- evento_A - evento_A_interseccion_B)
(b_menos_a <- evento_B - evento_A_interseccion_B)
P_evento_A <- evento_A / total_eventos
P_evento_A
P_evento_B <- evento_B / total_eventos
P_evento_B
P_evento_A_interseccion_B <- evento_A_interseccion_B/total_eventos
P_evento_A_interseccion_B
P_evento_A * P_evento_B
P_evento_A #P(A)
(P_evento_B_si_evento_A <- (P_evento_A_interseccion_B/P_evento_A)) #P(A|B)
(P_evento_A_si_evento_B <- (P_evento_A_interseccion_B/P_evento_B)) #P(B|A)
round(P_evento_B,4) #P(B)
round((Probabilidad_B <- 0.5233161*0.4455446/0.5),4) #P(B)
1 - (sum(Datos$DISPOSITIVO == "Laptop" | Datos$PROMEDIO > 15))/Total_casos
fi <- table(Datos$CANAPLI)
pi <- prop.table(fi)
cbind(fi,pi)
fi = table(Datos$CANAPLI)
(pi = round(prop.table(fi),4))
hist(Datos$CANAPLI, col = "cyan", border = "black", main = " Gráfico 1
Distribución de Aplicaciones", xlab = "Cantidad de aplicaciones", ylab = "Frecuencia")
X = c(0:8)
P = c(0.0155 ,0.0104 ,0.0725 ,0.1347 ,0.2435 ,0.2124 ,0.0933 ,0.0725 ,0.1451)
(E = sum(X*P))
(V = sum(X^2*P)-E^2)
round((4.82365 / 193),4)
n = 193
p = 0.025
x <- 0:8
prob_condicion <- dbinom(x, 193, 0.025)
plot(x, prob_condicion, type = "h", xlab = "X", ylab = "P(X)", main = "Gráfico 2
Función de la distribución binomial n=193, p=0.0155",lwd = 3,col = "orange")
round((1- pbinom(1, n, p)),4)
round((pbinom(2, n, p)),4)
round((dbinom(3, n, p)),4)
fi <- table(Datos$CURSOS)
pi <- prop.table(fi)
cbind(fi,pi)
fi = table(Datos$CURSOS)
(pi = round(prop.table(fi),4))
hist(Datos$CURSOS, col = "steelblue", border = "black", main = "Gráfico 3
Distribución de Cursos", xlab = "Cursos", ylab = "Frecuencia")
X = c(1:8)
P = c(0.0207 ,0.0052, 0.0155 ,0.0674 ,0.2124 ,0.4611 ,0.2021 ,0.0155)
(E = sum(X*P))
(V = sum(X^2*P)-E^2)
shadeDist(6,"dpois",5.7145, main = "Gráfico 4
Distribución de Cursos", xlab = "Cantidad de aplicaciones")
round(dpois(3,5.7145),4)
round(1-(ppois(4, 5.7145)),4)
round((ppois(2, 5.7145)),4)
notas_altas <- vector(mode = "numeric", length = 0)
for (i in 1:nrow(Datos)) {
if (Datos$FRECUENCIA[i] == "Poco") {
notas_altas <- c(notas_altas, Datos$MAXNOTA[i])
}
}
fit.cont(notas_altas)
densidad <- density(notas_altas)
plot(densidad, xlab = "Valores", ylab = "Densidad", main = "Gráfico 5
Cuadro de densidad sobre la maxima nota",col = "black", lwd = 4)
x <- densidad$x
y <- densidad$y
polygon(x, y, col = "orange")
fit <- fitdistr(notas_altas, "weibull")
(shape <- fit$estimate["shape"])
(scale <- fit$estimate["scale"])
alpha = 9.428813
beta = 17.7124
esperanza <- beta * gamma(1 + 1/alpha)
print(esperanza)
(esperanza <- mean(notas_altas))
varianza <-beta^2 * (gamma(1 + (2/alpha)) - (gamma(1 + (1/alpha)))^2)
print(varianza)
(varianza = (sd(notas_altas))^2)
alpha <- 9.43
beta <- 17.71
round((beta * gamma(1 + 1/alpha)),4)
round((pweibull(18,alpha,beta)),4)
shadeDist(18, "dweibull", alpha,beta, lower.tail=T)
round((1 - pweibull(10, alpha, beta)),4)
shadeDist(10, "dweibull", alpha,beta, lower.tail=F)
round((qweibull(0.75,alpha,beta)),4)
fit.cont(Datos$PROMEDIO)
densidad <- density(Datos$PROMEDIO)
plot(densidad, xlab = "Promedios", ylab = "Densidad Estimada", main = "Gráfico 6
Cuadro de densidad estimada  los promedios ponderados",col = "black", lwd = 5)
x <- densidad$x
y <- densidad$y
polygon(x, y, col = "cyan")
mean(Datos$PROMEDIO)
median(Datos$PROMEDIO)
fitdistr(Datos$PROMEDIO,"normal")
mean(Datos$PROMEDIO)
(varianza_grafico = 1.66253914^2)
(varianza = (sd(Datos$PROMEDIO))^2)
u = 15.17
s = 1.66
1 - pnorm(15, u, s)
shadeDist(15, "dnorm", u, s, lower.tail=F)
qnorm(0.10, u, s)
pnorm(18, u, s) - pnorm(14, u, s)
shadeDist(c(14,18) , "dnorm", u, s, lower.tail=F)
