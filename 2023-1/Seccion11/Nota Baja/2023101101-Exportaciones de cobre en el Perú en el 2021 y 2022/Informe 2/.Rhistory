install.packages("fastGraph")
}
library(dplyr);
library(readr);
library(readxl);
library(stringr);
library(plotrix);
library(scales);
library(ggplot2);
library(ggthemes);
library(mvtnorm)
library(rriskDistributions)
library(fastGraph)
export <- read_excel("export.xlsx")
items <- read_excel("items.xlsx")
minerales <- read_excel("minerales.xlsx")
sector <- read_excel("sector.xlsx")
paises<- read.csv2("destino31.csv",header =T,sep =';')
sector = sector[-c(1), ] #Borro el NA que estobarba de sector
paises = paises[-c(260:993), ] #Borro las filas que quedaron en NA
paises = select(paises,País.Destino,Año,Meses,Total.registros,Total.KG,US.KG,US)
paises = rename(paises,Pais_Destino = "País.Destino",Anio = "Año",Total_Registros = "Total.registros",Total_KG = "Total.KG",US_Dolar = "US",US_KG = "US.KG")
paises = select(paises,Pais_Destino,Anio,Meses,Total_Registros,Total_KG,US_KG,US_Dolar)
paises$Total_Registros = as.integer(paises$Total_Registros)
paises$Total_KG = as.numeric(paises$Total_KG)
paises$US_KG = as.numeric(paises$US_KG)
paises$US_Dolar = as.numeric(paises$US_Dolar)
paises <- mutate(paises, `Total_Registros`= as.integer(`Total_Registros`))
export = rename(export,Anio = "AÑO",Total_Registros = "Total registros",Total_KG = "Total KG",US_KG = "US$ / KG",US_Dolar = "US$")
export <- mutate(export,`Total_Registros` = as.integer(`Total_Registros`),`Anio` = as.integer(`Anio`))
minerales = rename(minerales,US_Dolar = "US $", Anio = "Año");
minerales$Anio = as.integer(minerales$Anio);
items = rename(items,Descrip_Part_Aduanera = "Descripción Partida Aduanera",
Anio = "Año",
Total_Registros = "Total registros",
Total_KG = "Total KG",
US_KG = "US$ / KG",
US_Dolar = "US$")
items$Anio = as.integer(items$Anio)
items$Total_Registros = as.integer(items$Total_Registros)
#2021
export %>% filter(Anio == 2021 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2021
#2022
export %>% filter(Anio == 2022 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2022
comparacionexport2021$newDollarsMillion = round(comparacionexport2021$TotalDolaresFull/1000000 , 4)
comparacionexport2022$newDollarsMillion = round(comparacionexport2022$TotalDolaresFull/1000000 , 4)
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) ->exportRegistrosFull2021
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) -> exportRegistrosFull2022
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(registerFull = sum(Total_Registros),DolaresFull =  sum(US_Dolar),DolaresMillion = round(sum(US_Dolar)/100000,3)) %>% arrange(desc(DolaresMillion)) -> exportDolarRegisFull2022
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(registerFull = sum(Total_Registros),DolaresFull =  sum(US_Dolar),DolaresMillion = round(sum(US_Dolar)/100000,3)) %>% arrange(desc(DolaresMillion)) -> exportDolarRegisFull2021
subset(export,Meses == "Diciembre" & Anio == 2022)-> empresas_diciembre2022
paises %>% filter(Anio == 2021) %>% group_by(Pais_Destino) %>% summarise(newKgTon = round(sum(Total_KG)/1000000,4)) %>% arrange(desc(newKgTon)) -> paises_KgTon2021
paises %>% filter(Anio == 2021) %>% distinct(Pais_Destino,Meses) %>% group_by(Pais_Destino) %>% summarise(numMeses = n())->contaMesesPais2021
paises %>% filter(Anio == 2022) %>% distinct(Pais_Destino,Meses) %>% group_by(Pais_Destino) %>% summarise(numMeses = n())->contaMesesPais2022
(length(comparacionexport2021$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))
(length(comparacionexport2021$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
(length(comparacionexport2022$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))
(length(comparacionexport2022$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
0.3661972 + 0.2957746 +0.3380282
print("La probabilidad que representa el numero de empresas exportadoras esten presentes en 2021 y 2022 es:")
round(length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador)),2)
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) ->exportRegistrosFull2021
nrow(exportRegistrosFull2021)
nrow(exportRegistrosFull2021 %>% filter(TotalRegistrosFull > 1))
nrow(exportRegistrosFull2021 %>% filter(TotalRegistrosFull <= 1))
32/47
round(nrow(exportRegistrosFull2021 %>% filter(TotalRegistrosFull > 1))/nrow(exportRegistrosFull2021),2)
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) -> exportRegistrosFull2022
nrow(exportRegistrosFull2022)
nrow(exportRegistrosFull2022 %>% filter(TotalRegistrosFull > 1))
nrow(exportRegistrosFull2022 %>% filter(TotalRegistrosFull <= 1))
15/50
35/50
round(nrow(exportRegistrosFull2022 %>% filter(TotalRegistrosFull > 1))/nrow(exportRegistrosFull2022),2)
mean(comparacionexport2021$newDollarsMillion)
nrow(comparacionexport2021 %>% filter(newDollarsMillion < mean(newDollarsMillion)))
abs(nrow(comparacionexport2021 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2021))
abs(nrow(comparacionexport2021 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2021))/nrow(comparacionexport2021)
nrow(comparacionexport2021)
nrow(comparacionexport2021 %>% filter(newDollarsMillion< mean(newDollarsMillion)))/nrow(comparacionexport2021)
round(nrow(comparacionexport2021 %>% filter(newDollarsMillion< mean(newDollarsMillion)))/nrow(comparacionexport2021),2)
mean(comparacionexport2022$newDollarsMillion)
nrow(comparacionexport2022 %>% filter(newDollarsMillion < mean(newDollarsMillion)))
abs(nrow(comparacionexport2022 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2022))
abs(nrow(comparacionexport2022 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2022))/nrow(comparacionexport2022)
nrow(comparacionexport2022)
nrow(comparacionexport2022 %>% filter(newDollarsMillion< mean(newDollarsMillion)))/nrow(comparacionexport2022)
round(nrow(comparacionexport2022 %>% filter(newDollarsMillion<mean(newDollarsMillion)))/nrow(comparacionexport2022),2)
nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021 %>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021%>%filter(registerFull>=90)%>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2021)
0.06382979/0.212766 == 0.1489362
0.06382979/0.1489362
0.1489362*0.212766 == 0.06382979
mean(exportDolarRegisFull2021$DolaresMillion)
nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90))
nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/ (nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90)))
nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90))
(0.4285714*0.1489362 +  0.175 *0.8510638)
(0.4285714*0.1489362)/0.212766
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(registerFull = sum(Total_Registros),DolaresFull =  sum(US_Dolar),DolaresMillion = round(sum(US_Dolar)/100000,3)) %>% arrange(desc(DolaresMillion)) -> exportDolarRegisFull2022
mean(exportDolarRegisFull2022$DolaresMillion)
nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90))
nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/ (nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90)))
nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90))/nrow(exportDolarRegisFull2022)
nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90))
nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90))/nrow(exportDolarRegisFull2022)
nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90))
(0.1*0.4)+(0.9*0.2222222)
(0.1*0.4)/(0.24)
subset(export,Meses == "Diciembre" & Anio == 2022)-> empresas_diciembre2022
nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022 %>% filter(Total_KG >10433357.50))
0.28/0.4
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2))
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022)
0.28/0.44
nrow(empresas_diciembre2022%>%filter(Total_Registros > 2))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022%>%filter(Total_KG >10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022)
0.7 == 0.44
0.6363636 == 0.4
0.28 == 0.176
nrow(empresas_diciembre2022%>% filter(Total_Registros > 2))
nrow(empresas_diciembre2022%>% filter(Total_Registros <= 2))
nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros <= 2))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros <= 2 & Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros <= 2 & Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
0.12/0.56
(0.6363636 * 0.44) + (0.2142857*0.56)
0.28/0.4
paises %>% filter(Anio == 2021) %>% group_by(Pais_Destino) %>% summarise(newKgTon = round(sum(Total_KG)/1000000,4)) %>% arrange(desc(newKgTon)) -> paises_KgTon2021
paises_KgTon2021
mean(paises_KgTon2021$newKgTon)
nrow(paises_KgTon2021 %>% filter(Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA")))/nrow(paises_KgTon2021)
nrow(paises_KgTon2021 %>% filter(newKgTon > mean(newKgTon)))/nrow(paises_KgTon2021)
nrow(paises_KgTon2021 %>% filter(newKgTon > mean(newKgTon) & Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA")))/nrow(paises_KgTon2021)
1== 0.3333333
0.1428571/0.3333333
0.4285713==0.1428571
0.1428571 * 0.3333333
mean(paises_KgTon2021$newKgTon)
nrow(paises_KgTon2021 %>% filter(newKgTon > mean(newKgTon) & !(Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA"))))/nrow(paises_KgTon2021)
nrow(paises_KgTon2021 %>% filter(!(Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA"))))/nrow(paises_KgTon2021)
0.4285713*0.3333333
0.1428571/0.1428571
fi=table(paises$Pais_Destino[paises$Anio == 2021])
pi=round(prop.table(fi),7)
cbind(fi,pi)
sum(fi)
data.frame(table(paises$Pais_Destino[paises$Anio == 2021 & (paises$Pais_Destino != "China" | paises$Pais_Destino != "CHINA")]))
print("Cantidad de Frecuencia de No aparición de China")
sum(data.frame(table(paises$Pais_Destino[paises$Anio == 2021 & (paises$Pais_Destino != "China" | paises$Pais_Destino != "CHINA")]))$Freq)
print("Cantidad de Frecuencia de aparición de China")
sum(data.frame(table(paises$Pais_Destino[paises$Anio == 2021 & (paises$Pais_Destino == "China" | paises$Pais_Destino == "CHINA")]))$Freq)
12/132
Ac= 1 - 0.09090909
Ac
0.9090909*(0.09090909)
barplot(c(0.9090909, 1 - 0.9090909), names.arg = nombres <- c("1", "0"), xlab = "Exito                                                       Fracaso",ylab = "Probabilidad", main = "GR24: Gráfico Bernoulli de los países destinos excepto China en 2021",ylim = c(0:1))
sum(data.frame(table(exportDolarRegisFull2021$registerFull))$Freq)
data.frame(table(exportDolarRegisFull2021$registerFull))
round(15/sum(data.frame(table(exportDolarRegisFull2021$registerFull))$Freq),2)
(15/sum(data.frame(table(exportDolarRegisFull2021$registerFull))$Freq))
pbinom(3,10, 0.3191489)
barplot(pbinom(c(0:3),10,0.3191489), names.arg = c(0:3), xlab = "Número de éxitos", ylab = "Probabilidad acumulativa", main = "GR25:  Distribución Binomial de empresas con 1 registro",ylim = c(0:1),width = 0.2)
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(new_Ton = sum(Total_KG)) -> exportEmpresasTonFull2021
exportEmpresasTonFull2021$new_Ton = round(exportEmpresasTonFull2021$new_Ton/1000000,4)
exportEmpresasTonFull2021 = exportEmpresasTonFull2021[order(exportEmpresasTonFull2021$new_Ton, decreasing = TRUE),]
fit.cont(exportEmpresasTonFull2021$new_Ton)
1 - pweibull(500, 0.2628042, 16.2228289)
shadeDist((1-pweibull(500, 0.2628042, 16.2228289)),"dweibull",0.2628042, 16.2228289)
fit.cont(comparacionexport2021$newDollarsMillion)
pweibull(800,0.2334531,25.9837624) - pweibull(400,0.2334531,25.9837624)
shadeDist (c(400,800),"dweibull",0.2334531,25.9837624)
shadeDist((1-pweibull(500, 0.2628042, 16.2228289)),"dweibull",0.2628042, 16.2228289,main ="x")
shadeDist((1-pweibull(500, 0.2628042, 16.2228289)),"dweibull",0.2628042, 16.2228289,main ="Distribución de Weibull de Cobre en TM")
shadeDist (c(400,800),"dweibull",0.2334531,25.9837624,main = ="Distribución de Weibull de Cobre en TM")
shadeDist (c(400,800),"dweibull",0.2334531,25.9837624,main ="Distribución de Weibull de Cobre en TM")
shadeDist (c(400,800),"dweibull",0.2334531,25.9837624,main ="Distribución de Weibull de Cobre en TM")
shadeDist (c(400,800),"dweibull",0.2334531,25.9837624,main="Distribución de Weibull de Cobre en TM")
if (!require("readr", character.only = TRUE)) {
install.packages("readr")
}
if (!require("readxl", character.only = TRUE)) {
install.packages("readxl")
}
if (!require("dplyr", character.only = TRUE)) {
install.packages("dplyr")
}
if (!require("stringr", character.only = TRUE)) {
install.packages("stringr")
}
if (!require("plotrix", character.only = TRUE)) {
install.packages("plotrix")
}
if (!require("scales", character.only = TRUE)) {
install.packages("scales")
}
if (!require("ggplot2", character.only = TRUE)) {
install.packages("ggplot2")
}
if (!require("ggthemes", character.only = TRUE)) {
install.packages("ggthemes")
}
if (!require("mvtnorm", character.only = TRUE)) {
install.packages("mvtnorm")
}
if (!require("rriskDistributions", character.only = TRUE)) {
install.packages("rriskDistributions")
}
if (!require("fastGraph", character.only = TRUE)) {
install.packages("fastGraph")
}
library(dplyr);
library(readr);
library(readxl);
library(stringr);
library(plotrix);
library(scales);
library(ggplot2);
library(ggthemes);
library(mvtnorm)
library(rriskDistributions)
library(fastGraph)
export <- read_excel("export.xlsx")
items <- read_excel("items.xlsx")
minerales <- read_excel("minerales.xlsx")
sector <- read_excel("sector.xlsx")
paises<- read.csv2("destino31.csv",header =T,sep =';')
sector = sector[-c(1), ] #Borro el NA que estobarba de sector
paises = paises[-c(260:993), ] #Borro las filas que quedaron en NA
paises = select(paises,País.Destino,Año,Meses,Total.registros,Total.KG,US.KG,US)
paises = rename(paises,Pais_Destino = "País.Destino",Anio = "Año",Total_Registros = "Total.registros",Total_KG = "Total.KG",US_Dolar = "US",US_KG = "US.KG")
paises = select(paises,Pais_Destino,Anio,Meses,Total_Registros,Total_KG,US_KG,US_Dolar)
paises$Total_Registros = as.integer(paises$Total_Registros)
paises$Total_KG = as.numeric(paises$Total_KG)
paises$US_KG = as.numeric(paises$US_KG)
paises$US_Dolar = as.numeric(paises$US_Dolar)
paises <- mutate(paises, `Total_Registros`= as.integer(`Total_Registros`))
export = rename(export,Anio = "AÑO",Total_Registros = "Total registros",Total_KG = "Total KG",US_KG = "US$ / KG",US_Dolar = "US$")
export <- mutate(export,`Total_Registros` = as.integer(`Total_Registros`),`Anio` = as.integer(`Anio`))
minerales = rename(minerales,US_Dolar = "US $", Anio = "Año");
sector=na.omit(sector)#Eliminamos la fila
sector=data.frame(sector, row.names = NULL)# Reordenamos el orden numerico de los datos
items = rename(items,Descrip_Part_Aduanera = "Descripción Partida Aduanera",
Anio = "Año",
Total_Registros = "Total registros",
Total_KG = "Total KG",
US_KG = "US$ / KG",
US_Dolar = "US$")
items$Anio = as.integer(items$Anio)
items$Total_Registros = as.integer(items$Total_Registros)
#2021
export %>% filter(Anio == 2021 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2021
#2022
export %>% filter(Anio == 2022 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2022
comparacionexport2021$newDollarsMillion = round(comparacionexport2021$TotalDolaresFull/1000000 , 4)
comparacionexport2022$newDollarsMillion = round(comparacionexport2022$TotalDolaresFull/1000000 , 4)
comparacionexport2021= comparacionexport2021[order(comparacionexport2021$TotalDolaresFull,decreasing = TRUE),]
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) ->exportRegistrosFull2021
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(registerFull = sum(Total_Registros),DolaresFull =  sum(US_Dolar),DolaresMillion = round(sum(US_Dolar)/100000,3)) %>% arrange(desc(DolaresMillion)) -> exportDolarRegisFull2021
interseccion1<-length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
EspacioMuestral1<-length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
interseccion1/EspacioMuestral1
A_may1 = nrow(exportRegistrosFull2021 %>% filter(TotalRegistrosFull > 1))
Espaciomuestra_Regis = nrow(exportRegistrosFull2021)
A_may1/Espaciomuestra_Regis
(0.4285714*0.1489362)/0.212766
(0.6363636 * 0.44)/0.4
data <- data.frame(name = c('Alejandra', 'Anayeli','Brigitte y Diego',' Yoman y Anayeli','Diego y Alejandra'),
start = c(10,11,12,12,13),
end = c(11,12,14,14,15),
Actividades = c('Análisis de variables', 'Planteamiento de probabilidades','Clasificación de probabilidades','Análisis de distribuciones','Planteamiento y resolución de distribuciones')
)
if (!require("ggplot2", character.only = TRUE)) {
install.packages("ggplot2")
}
if (!require("ggthemes", character.only = TRUE)) {
install.packages("ggthemes")
}
ggplot(data, aes(x=start, xend=end,
y=name, yend=name, color= Actividades)) +
theme_bw()+
geom_segment(size=8) +
labs(title='Elaboración del informe PG2', x='Semanas', y='Responsables') +
theme_economist() +
theme_update(plot.title = element_text(hjust = 0.5), axis.title = element_text(hjust=0.5))
if (!require("readr", character.only = TRUE)) {
install.packages("readr")
}
if (!require("readxl", character.only = TRUE)) {
install.packages("readxl")
}
if (!require("dplyr", character.only = TRUE)) {
install.packages("dplyr")
}
if (!require("stringr", character.only = TRUE)) {
install.packages("stringr")
}
if (!require("plotrix", character.only = TRUE)) {
install.packages("plotrix")
}
if (!require("scales", character.only = TRUE)) {
install.packages("scales")
}
if (!require("ggplot2", character.only = TRUE)) {
install.packages("ggplot2")
}
if (!require("ggthemes", character.only = TRUE)) {
install.packages("ggthemes")
}
if (!require("mvtnorm", character.only = TRUE)) {
install.packages("mvtnorm")
}
if (!require("rriskDistributions", character.only = TRUE)) {
install.packages("rriskDistributions")
}
if (!require("fastGraph", character.only = TRUE)) {
install.packages("fastGraph")
}
library(dplyr);
library(readr);
library(readxl);
library(stringr);
library(plotrix);
library(scales);
library(ggplot2);
library(ggthemes);
library(mvtnorm)
library(rriskDistributions)
library(fastGraph)
export <- read_excel("export.xlsx")
items <- read_excel("items.xlsx")
minerales <- read_excel("minerales.xlsx")
sector <- read_excel("sector.xlsx")
paises<- read.csv2("destino31.csv",header =T,sep =';')
sector = sector[-c(1), ] #Borro el NA que estobarba de sector
paises = paises[-c(260:993), ] #Borro las filas que quedaron en NA
paises = select(paises,País.Destino,Año,Meses,Total.registros,Total.KG,US.KG,US)
paises = rename(paises,Pais_Destino = "País.Destino",Anio = "Año",Total_Registros = "Total.registros",Total_KG = "Total.KG",US_Dolar = "US",US_KG = "US.KG")
paises = select(paises,Pais_Destino,Anio,Meses,Total_Registros,Total_KG,US_KG,US_Dolar)
paises$Total_Registros = as.integer(paises$Total_Registros)
paises$Total_KG = as.numeric(paises$Total_KG)
paises$US_KG = as.numeric(paises$US_KG)
paises$US_Dolar = as.numeric(paises$US_Dolar)
paises <- mutate(paises, `Total_Registros`= as.integer(`Total_Registros`))
export = rename(export,Anio = "AÑO",Total_Registros = "Total registros",Total_KG = "Total KG",US_KG = "US$ / KG",US_Dolar = "US$")
export <- mutate(export,`Total_Registros` = as.integer(`Total_Registros`),`Anio` = as.integer(`Anio`))
minerales = rename(minerales,US_Dolar = "US $", Anio = "Año");
minerales$Anio = as.integer(minerales$Anio);
items = rename(items,Descrip_Part_Aduanera = "Descripción Partida Aduanera",
Anio = "Año",
Total_Registros = "Total registros",
Total_KG = "Total KG",
US_KG = "US$ / KG",
US_Dolar = "US$")
items$Anio = as.integer(items$Anio)
items$Total_Registros = as.integer(items$Total_Registros)
#2021
export %>% filter(Anio == 2021 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2021
#2022
export %>% filter(Anio == 2022 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2022
comparacionexport2021$newDollarsMillion = round(comparacionexport2021$TotalDolaresFull/1000000 , 4)
comparacionexport2022$newDollarsMillion = round(comparacionexport2022$TotalDolaresFull/1000000 , 4)
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) ->exportRegistrosFull2021
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) -> exportRegistrosFull2022
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(registerFull = sum(Total_Registros),DolaresFull =  sum(US_Dolar),DolaresMillion = round(sum(US_Dolar)/100000,3)) %>% arrange(desc(DolaresMillion)) -> exportDolarRegisFull2022
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(registerFull = sum(Total_Registros),DolaresFull =  sum(US_Dolar),DolaresMillion = round(sum(US_Dolar)/100000,3)) %>% arrange(desc(DolaresMillion)) -> exportDolarRegisFull2021
subset(export,Meses == "Diciembre" & Anio == 2022)-> empresas_diciembre2022
paises %>% filter(Anio == 2021) %>% group_by(Pais_Destino) %>% summarise(newKgTon = round(sum(Total_KG)/1000000,4)) %>% arrange(desc(newKgTon)) -> paises_KgTon2021
paises %>% filter(Anio == 2021) %>% distinct(Pais_Destino,Meses) %>% group_by(Pais_Destino) %>% summarise(numMeses = n())->contaMesesPais2021
paises %>% filter(Anio == 2022) %>% distinct(Pais_Destino,Meses) %>% group_by(Pais_Destino) %>% summarise(numMeses = n())->contaMesesPais2022
(length(comparacionexport2021$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))
(length(comparacionexport2021$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
(length(comparacionexport2022$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))
(length(comparacionexport2022$Exportador) - length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador)))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador))
0.3661972 + 0.2957746 +0.3380282
print("La probabilidad que representa el numero de empresas exportadoras esten presentes en 2021 y 2022 es:")
round(length(intersect(comparacionexport2021$Exportador,comparacionexport2022$Exportador))/length(union(comparacionexport2021$Exportador,comparacionexport2022$Exportador)),2)
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) ->exportRegistrosFull2021
nrow(exportRegistrosFull2021)
nrow(exportRegistrosFull2021 %>% filter(TotalRegistrosFull > 1))
nrow(exportRegistrosFull2021 %>% filter(TotalRegistrosFull <= 1))
32/47
round(nrow(exportRegistrosFull2021 %>% filter(TotalRegistrosFull > 1))/nrow(exportRegistrosFull2021),2)
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(TotalRegistrosFull = sum(Total_Registros)) -> exportRegistrosFull2022
nrow(exportRegistrosFull2022)
nrow(exportRegistrosFull2022 %>% filter(TotalRegistrosFull > 1))
nrow(exportRegistrosFull2022 %>% filter(TotalRegistrosFull <= 1))
15/50
35/50
round(nrow(exportRegistrosFull2022 %>% filter(TotalRegistrosFull > 1))/nrow(exportRegistrosFull2022),2)
mean(comparacionexport2021$newDollarsMillion)
nrow(comparacionexport2021 %>% filter(newDollarsMillion < mean(newDollarsMillion)))
abs(nrow(comparacionexport2021 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2021))
abs(nrow(comparacionexport2021 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2021))/nrow(comparacionexport2021)
nrow(comparacionexport2021)
nrow(comparacionexport2021 %>% filter(newDollarsMillion< mean(newDollarsMillion)))/nrow(comparacionexport2021)
round(nrow(comparacionexport2021 %>% filter(newDollarsMillion< mean(newDollarsMillion)))/nrow(comparacionexport2021),2)
mean(comparacionexport2022$newDollarsMillion)
nrow(comparacionexport2022 %>% filter(newDollarsMillion < mean(newDollarsMillion)))
abs(nrow(comparacionexport2022 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2022))
abs(nrow(comparacionexport2022 %>% filter(newDollarsMillion < mean(newDollarsMillion)))- nrow(comparacionexport2022))/nrow(comparacionexport2022)
nrow(comparacionexport2022)
nrow(comparacionexport2022 %>% filter(newDollarsMillion< mean(newDollarsMillion)))/nrow(comparacionexport2022)
round(nrow(comparacionexport2022 %>% filter(newDollarsMillion<mean(newDollarsMillion)))/nrow(comparacionexport2022),2)
nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021 %>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021%>%filter(registerFull>=90)%>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2021)
0.06382979/0.212766 == 0.1489362
0.06382979/0.1489362
0.1489362*0.212766 == 0.06382979
mean(exportDolarRegisFull2021$DolaresMillion)
nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90))
nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/ (nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90)))
nrow(exportDolarRegisFull2021 %>% filter(registerFull >= 90))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90))/nrow(exportDolarRegisFull2021)
nrow(exportDolarRegisFull2021 %>% filter(registerFull < 90))
(0.4285714*0.1489362 +  0.175 *0.8510638)
(0.4285714*0.1489362)/0.212766
export %>% filter(Anio == 2022) %>% group_by(Exportador) %>% summarise(registerFull = sum(Total_Registros),DolaresFull =  sum(US_Dolar),DolaresMillion = round(sum(US_Dolar)/100000,3)) %>% arrange(desc(DolaresMillion)) -> exportDolarRegisFull2022
mean(exportDolarRegisFull2022$DolaresMillion)
nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90))
nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90) %>% filter(DolaresMillion > mean(DolaresMillion)))/ (nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90)))
nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90))/nrow(exportDolarRegisFull2022)
nrow(exportDolarRegisFull2022 %>% filter(registerFull >= 90))
nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90))/nrow(exportDolarRegisFull2022)
nrow(exportDolarRegisFull2022 %>% filter(registerFull < 90))
(0.1*0.4)+(0.9*0.2222222)
(0.1*0.4)/(0.24)
subset(export,Meses == "Diciembre" & Anio == 2022)-> empresas_diciembre2022
nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022 %>% filter(Total_KG >10433357.50))
0.28/0.4
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2))
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022)
0.28/0.44
nrow(empresas_diciembre2022%>%filter(Total_Registros > 2))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022%>%filter(Total_KG >10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG >10433357.50))/nrow(empresas_diciembre2022)
0.7 == 0.44
0.6363636 == 0.4
0.28 == 0.176
nrow(empresas_diciembre2022%>% filter(Total_Registros > 2))
nrow(empresas_diciembre2022%>% filter(Total_Registros <= 2))
nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros <= 2))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros <= 2 & Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros > 2 & Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
nrow(empresas_diciembre2022 %>% filter(Total_Registros <= 2 & Total_KG > 10433357.50))/nrow(empresas_diciembre2022)
0.12/0.56
(0.6363636 * 0.44) + (0.2142857*0.56)
0.28/0.4
paises %>% filter(Anio == 2021) %>% group_by(Pais_Destino) %>% summarise(newKgTon = round(sum(Total_KG)/1000000,4)) %>% arrange(desc(newKgTon)) -> paises_KgTon2021
paises_KgTon2021
mean(paises_KgTon2021$newKgTon)
nrow(paises_KgTon2021 %>% filter(Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA")))/nrow(paises_KgTon2021)
nrow(paises_KgTon2021 %>% filter(newKgTon > mean(newKgTon)))/nrow(paises_KgTon2021)
nrow(paises_KgTon2021 %>% filter(newKgTon > mean(newKgTon) & Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA")))/nrow(paises_KgTon2021)
1== 0.3333333
0.1428571/0.3333333
0.4285713==0.1428571
0.1428571 * 0.3333333
mean(paises_KgTon2021$newKgTon)
nrow(paises_KgTon2021 %>% filter(newKgTon > mean(newKgTon) & !(Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA"))))/nrow(paises_KgTon2021)
nrow(paises_KgTon2021 %>% filter(!(Pais_Destino %in% c("TAIWÁN", "INDIA","FILIPINAS","CHINA", "JAPÓN","COREA DEL SUR","MALASIA"))))/nrow(paises_KgTon2021)
0.4285713*0.3333333
0.1428571/0.1428571
fi=table(paises$Pais_Destino[paises$Anio == 2021])
pi=round(prop.table(fi),7)
cbind(fi,pi)
sum(fi)
data.frame(table(paises$Pais_Destino[paises$Anio == 2021 & (paises$Pais_Destino != "China" | paises$Pais_Destino != "CHINA")]))
print("Cantidad de Frecuencia de No aparición de China")
sum(data.frame(table(paises$Pais_Destino[paises$Anio == 2021 & (paises$Pais_Destino != "China" | paises$Pais_Destino != "CHINA")]))$Freq)
print("Cantidad de Frecuencia de aparición de China")
sum(data.frame(table(paises$Pais_Destino[paises$Anio == 2021 & (paises$Pais_Destino == "China" | paises$Pais_Destino == "CHINA")]))$Freq)
12/132
Ac= 1 - 0.09090909
Ac
0.9090909*(0.09090909)
barplot(c(0.9090909, 1 - 0.9090909), names.arg = nombres <- c("1", "0"), xlab = "Exito                                                       Fracaso",ylab = "Probabilidad", main = "GR24: Gráfico Bernoulli de los países destinos excepto China en 2021",ylim = c(0:1))
sum(data.frame(table(exportDolarRegisFull2021$registerFull))$Freq)
data.frame(table(exportDolarRegisFull2021$registerFull))
round(15/sum(data.frame(table(exportDolarRegisFull2021$registerFull))$Freq),2)
(15/sum(data.frame(table(exportDolarRegisFull2021$registerFull))$Freq))
pbinom(3,10, 0.3191489)
barplot(pbinom(c(0:3),10,0.3191489), names.arg = c(0:3), xlab = "Número de éxitos", ylab = "Probabilidad acumulativa", main = "GR25:  Distribución Binomial de empresas con 1 registro",ylim = c(0:1),width = 0.2)
export %>% filter(Anio == 2021) %>% group_by(Exportador) %>% summarise(new_Ton = sum(Total_KG)) -> exportEmpresasTonFull2021
exportEmpresasTonFull2021$new_Ton = round(exportEmpresasTonFull2021$new_Ton/1000000,4)
exportEmpresasTonFull2021 = exportEmpresasTonFull2021[order(exportEmpresasTonFull2021$new_Ton, decreasing = TRUE),]
fit.cont(exportEmpresasTonFull2021$new_Ton)
1 - pweibull(500, 0.2628042, 16.2228289)
shadeDist((1-pweibull(500, 0.2628042, 16.2228289)),"dweibull",0.2628042, 16.2228289)
fit.cont(comparacionexport2021$newDollarsMillion)
pweibull(800,0.2334531,25.9837624) - pweibull(400,0.2334531,25.9837624)
shadeDist (c(400,800),"dweibull",0.2334531,25.9837624)
