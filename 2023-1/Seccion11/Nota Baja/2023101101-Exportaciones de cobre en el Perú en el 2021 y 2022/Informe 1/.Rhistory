unique(minerales$Meses)
unique(minerales$US_Dolar)
str(sector)
names(sector)
summary(sector$Sector)
summary(sector$Producto)
sum(is.na(sector))# verificamos si hay datos incompletos y se obtuvo 14
sum(!complete.cases(sector))# Se encontro una fila incompleta
sector=na.omit(sector)#Eliminamos la fila
sector=data.frame(sector, row.names = NULL)# Reordenamos el orden numerico de los datos
unique(sector$Sector)
unique(sector$Producto)
unique(sector$Enero)
unique(sector$Febrero)
unique(sector$Marzo)
unique(sector$Abril)
unique(sector$Mayo)
unique(sector$Junio)
unique(sector$Julio)
unique(sector$Agosto)
unique(sector$Setiembre)
unique(sector$Octubre)
unique(sector$Noviembre)
unique(sector$Diciembre)
str(items)
items = rename(items,Descrip_Part_Aduanera = "Descripción Partida Aduanera",
Anio = "Año",
Total_Registros = "Total registros",
Total_KG = "Total KG",
US_KG = "US$ / KG",
US_Dolar = "US$")
items$Anio = as.integer(items$Anio)
items$Total_Registros = as.integer(items$Total_Registros)
summary(items$Anio);
summary(items$Meses);
summary(items$Total_Registros)
summary(items$Total_KG)
summary(items$US_KG)
summary(items$US_Dolar)
sum(is.na(items))# verificamos si hay datos incompletos y se obtuvo 14
sum(!complete.cases(items))
unique(items$Anio)
unique(items$Meses)
unique(items$Total_Registros)
str(items)
export %>% filter(Anio == 2021) %>% group_by(Meses) %>% summarise(sumTotalKGFull = sum(Total_KG),sumTotalDolar = sum(US_Dolar),sumRegistros = sum(Total_Registros)) -> mesescomparacion2021
export %>% filter(Anio == 2022) %>% group_by(Meses) %>% summarise(sumTotalKGFull= sum(Total_KG),sumTotalDolar = sum(US_Dolar),sumRegistros = sum(Total_Registros)) -> mesescomparacion2022
boxplot(mesescomparacion2021$sumRegistros, main="Número de registros por mes en el 2021" ,horizontal = TRUE)
round(mean(mesescomparacion2021$sumRegistros),0)
round(median(mesescomparacion2021$sumRegistros),2)
#2021
export %>% filter(Anio == 2021 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2021
#2022
export %>% filter(Anio == 2022 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2022
comparacionexport2021$newDollarsMillion = round(comparacionexport2021$TotalDolaresFull/1000000 , 4)
comparacionexport2022$newDollarsMillion = round(comparacionexport2022$TotalDolaresFull/1000000 , 4)
boxplot(comparacionexport2021$newDollarsMillion, main= "Ingreso de divisas por empresa en el 2021" , horizontal = TRUE)
diff(range(comparacionexport2021$newDollarsMillion))
round(median(comparacionexport2021$newDollarsMillion),2)
round(quantile(comparacionexport2021$newDollarsMillion, c(0.25, 0.75)),2)
boxplot(mesescomparacion2022$sumRegistros, main="Número de registros por mes en el 2022" ,horizontal = TRUE)
round(mean(mesescomparacion2022$sumRegistros),0)
round(median(mesescomparacion2022$sumRegistros),2)
boxplot(comparacionexport2022$newDollarsMillion,main= "Ingreso de divisas por empresa en el 2022", horizontal = TRUE)
round(diff(range(comparacionexport2022$newDollarsMillion)),2)
round(median(comparacionexport2022$newDollarsMillion),2)
round(quantile(comparacionexport2022$newDollarsMillion, c(0.25, 0.75)),2)
sector %>% group_by(Sector) %>% summarise(sumi = sum(Enero + Febrero + Marzo + Abril + Junio + Julio + Agosto + Setiembre + Octubre+ Noviembre + Diciembre)) -> comparacionSectors2021
#Entre 1000 toneladas
comparacionSectors2021$newToneladas = round(comparacionSectors2021$sumi/1000000,2)
paises %>% filter(Anio == 2021) %>% group_by(Pais_Destino) %>% summarise(TotalesRegistrosFull = Total_Registros) %>% summarise(CantidadRegistrosPorAño = sum(TotalesRegistrosFull)) ->paisesxregistrosfull2021
# Crear el gráfico de caja y bigotes
boxplot(paisesxregistrosfull2021$CantidadRegistrosPorAño ,
col = "pink",
ylab = "Cantidad de Registros",
xlab = ".",
main = "GR1: Cantidad de registros según cada país en 2021",
las=2)
paisesxregistrosfull2021 = paisesxregistrosfull2021[order(paisesxregistrosfull2021$CantidadRegistrosPorAño,decreasing = TRUE),]
otros<-data.frame(Pais_Destino = "Otros",CantidadRegistrosPorAño = sum(paisesxregistrosfull2021[6:nrow(paisesxregistrosfull2021), "CantidadRegistrosPorAño"]))
paisesxregistrosfull2021V2 = rbind(paisesxregistrosfull2021[1:5,],otros)
# Pie Chart with Percentages
slices <- c(paisesxregistrosfull2021V2$CantidadRegistrosPorAño)
lbls <- c(unique(paisesxregistrosfull2021V2$Pais_Destino))
pct <- round(slices/sum(slices)*100,2)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=c("blue", "green", "yellow", "red","gray","skyblue"),
main="GR2:Destinos de exportación 2021")
paisesxregistrosfull2021 %>% slice_max(CantidadRegistrosPorAño) %>% pull(Pais_Destino)
max(paisesxregistrosfull2021$CantidadRegistrosPorAño)
paises %>% filter(Anio == 2022) %>% group_by(Pais_Destino) %>% summarise(TotalesRegistrosFull = Total_Registros) %>% summarise(CantidadRegistrosPorAño = sum(TotalesRegistrosFull)) ->paisesxregistrosfull2022
# Crear el gráfico de caja y bigotes
boxplot(paisesxregistrosfull2022$CantidadRegistrosPorAño,
col = "pink",
ylab = "Cantidad de Registros",
xlab = ".",
main = "GR3:Cantidad de registros según cada país en 2022",
las=2)
paisesxregistrosfull2022 = paisesxregistrosfull2022[order(paisesxregistrosfull2022$CantidadRegistrosPorAño,decreasing = TRUE),]
otros2<-data.frame(Pais_Destino = "Otros",CantidadRegistrosPorAño = sum(paisesxregistrosfull2022[6:nrow(paisesxregistrosfull2022), "CantidadRegistrosPorAño"]))
paisesxregistrosfull2022V2 = rbind(paisesxregistrosfull2022[1:5,],otros2)
# Pie Chart with Percentages
slices2 <- c(paisesxregistrosfull2022V2$CantidadRegistrosPorAño)
lbls2 <- c(unique(paisesxregistrosfull2022V2$Pais_Destino))
pct2 <- round(slices2/sum(slices2)*100,2)
lbls2 <- paste(lbls2, pct2) # add percents to labels
lbls2 <- paste(lbls2,"%",sep="") # ad % to labels
pie(slices2,labels = lbls2, col=c("blue", "green", "yellow", "red","gray","skyblue"),
main="GR4 :Destinos de exportación 2022")
paisesxregistrosfull2022 %>% slice_max(CantidadRegistrosPorAño) %>% pull(Pais_Destino)
max(paisesxregistrosfull2022$CantidadRegistrosPorAño)
minerales %>% filter(Anio==2021)%>% group_by(Minerales)%>% summarise(cantDolarsFull = sum(US_Dolar)) -> comparDolarMine2021
minerales %>% filter(Anio==2022)%>% group_by(Minerales)%>% summarise(cantDolarsFull = sum(US_Dolar)) -> comparDolarMine2022
comparDolarMine2021$newDolarsMillion = round(comparDolarMine2021$cantDolarsFull/1000000 , 2)
comparDolarMine2022$newDolarsMillion = round(comparDolarMine2022$cantDolarsFull/1000000 , 2)
barplot(comparDolarMine2021$newDolarsMillion,names =c("Cobre","Estaño","Hierro","Oro","Plata","Plom","Rest","Zinc"),col = colorRampPalette(c("blue", "green", "yellow", "red"))(8),ylab = "Millones de dólares ",ylim = c(0,25000),xlab = "Minerales", main = "GR5: EXPORTACIÓN DEL SECTOR MINERO DEL 2021")
length(unique(comparDolarMine2021$Minerales))
comparDolarMine2021 %>% slice_max(cantDolarsFull) %>% pull(Minerales)
max(comparDolarMine2021$cantDolarsFull)
comparacionexport2021= comparacionexport2021[order(comparacionexport2021$TotalDolaresFull,decreasing = TRUE),]
otrosexport1<-data.frame(Exportador = "Otros",TotalDolaresFull = sum(comparacionexport2021[9:nrow(comparacionexport2021), "TotalDolaresFull"]),newDollarsMillion = sum(comparacionexport2021[9:nrow(comparacionexport2021), "newDollarsMillion"]))
comparacionexport2021V2 = rbind(comparacionexport2021[1:8,],otrosexport1)
# Pie Chart with Percentages
slices3 <- c(comparacionexport2021V2$newDollarsMillion)
lbls3 <- c("C.Mine.Antamina","Soc.Mine.Cerro Verde","Mine.Las Bambas","Comp. Mine. Antapaccay","Trafigura Peru S.A.C","Mine. Chinalco Perú","Southern Peru Copper Corp.","HUDBAY PERU S.A.C","Otros")
pct3 <- round(slices3/sum(slices3)*100,2)
lbls3 <- paste(lbls3, pct3) # add percents to labels
lbls3 <- paste(lbls3,"%",sep="") # ad % to labels
pie(slices3,labels = lbls3, col=colorRampPalette(c("blue", "green", "yellow", "red"))(length(unique(comparacionexport2021V2$Exportador))),
main="GR6:Sociedades Exportadoras en el 2021")
max(comparacionexport2021$TotalDolaresFull)
max(comparacionexport2021$newDollarsMillion)
comparacionexport2022 %>% arrange(desc(TotalDolaresFull))
comparacionexport2022= comparacionexport2022[order(comparacionexport2022$TotalDolaresFull,decreasing = TRUE),]
otrosexport2<-data.frame(Exportador = "Otros",TotalDolaresFull = sum(comparacionexport2022[9:nrow(comparacionexport2022), "TotalDolaresFull"]),newDollarsMillion = sum(comparacionexport2022[9:nrow(comparacionexport2022), "newDollarsMillion"]))
comparacionexport2022V2 = rbind(comparacionexport2022[1:8,],otrosexport2)
# Pie Chart with Percentages
slices4 <- c(comparacionexport2022V2$newDollarsMillion)
lbls4 <- c("Soc.Min.Cerro Verde","C.Mine.Antamina.","Mine. Las Bambas","Trafigura PERU S.A.C.","Comp. Mine. Antapaccay S.A.","Mine. Chinalco Perú S.A","Hudbay Perú S.A.C.","Glencore Perú S.A.C","Otros")
pct4 <- round(slices4/sum(slices4)*100,2)
lbls4 <- paste(lbls4, pct4) # add percents to labels
lbls4 <- paste(lbls4,"%",sep="") # ad % to labels
pie(slices4,labels = lbls4, col=colorRampPalette(c("blue", "green", "yellow", "red"))(length(unique(comparacionexport2022V2$Exportador))),
main="GR7: Proporción de ingresos de empresas exportadoras en el 2022")
max(comparacionexport2022$TotalDolaresFull)
max(comparacionexport2022$newDollarsMillion)
comparacionexport2022 %>% arrange(desc(TotalDolaresFull))
mesescomparacion2021 <- mesescomparacion2021[order(match(mesescomparacion2021$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
mesescomparacion2022 <- mesescomparacion2022[order(match(mesescomparacion2022$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
mesescomparacion2021$newKgTon = round(mesescomparacion2021$sumTotalKGFull/1000000 , 4)
mesescomparacion2022$newKgTon= round(mesescomparacion2022$sumTotalKGFull/1000000 , 4)
mesescomparacion2021$newDolarMillion = round(mesescomparacion2021$sumTotalDolar/1000000,4)
mesescomparacion2022$newDolarMillion = round(mesescomparacion2022$sumTotalDolar/1000000,4)
barplot(mesescomparacion2021$newKgTon,names = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),col = colorRampPalette(c("blue", "green", "yellow", "red"))(12),ylim = c(0,max(mesescomparacion2021$newKgTon)+100),ylab = "Cobre(kTM) ",xlab = "Meses", main = "GR 8: DEMANDA DEL COBRE DEL 2021")
length(unique(mesescomparacion2021$Meses))
mesescomparacion2021 %>% slice_max(sumTotalKGFull) %>% pull(Meses)
max(mesescomparacion2021$sumTotalKGFull)
max(mesescomparacion2021$newKgTon)
barplot(mesescomparacion2022$newKgTon,names = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),col = colorRampPalette(c("blue", "green", "yellow", "red"))(12),ylim = c(0,max(mesescomparacion2022$newKgTon)+100),ylab = "Cobre(kTM)",xlab = "Meses", main = "GR9: DEMANDA DEL COBRE DEL 2022")
length(unique(mesescomparacion2022$Meses))
mesescomparacion2022 %>% slice_max(sumTotalKGFull) %>% pull(Meses)
max(mesescomparacion2022$sumTotalKGFull)
# Crear el gráfico de barras de doble barras
barplot(rbind(mesescomparacion2022$newKgTon,mesescomparacion2021$newKgTon), beside = TRUE, names.arg = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),ylim = c(0,max(mesescomparacion2022$newKgTon)+100), legend.text = c("2022", "2021"),col = colorRampPalette(c("blue", "green", "yellow", "red"))(2) ,xlab = "Meses" ,ylab = "Cobre(kTM)",main = "GR10: DEMANDA DEL COBRE ENTRE 2022 Y 2021")
items %>% filter(Anio == 2021) %>% group_by(Meses) %>% summarise(Promedio = round(mean(US_KG),3)) ->Kilo_DolarComparacion2021
items %>% filter(Anio == 2022) %>% group_by(Meses) %>% summarise(Promedio = round(mean(US_KG),3)) ->Kilo_DolarComparacion2022
Kilo_DolarComparacion2021 <- Kilo_DolarComparacion2021[order(match(Kilo_DolarComparacion2021$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
Kilo_DolarComparacion2022 <- Kilo_DolarComparacion2022[order(match(Kilo_DolarComparacion2022$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
# Crear el gráfico de barras de doble barras
barplot(rbind(Kilo_DolarComparacion2021$Promedio,Kilo_DolarComparacion2022$Promedio), beside = TRUE, names.arg = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),ylim = c(0,max(Kilo_DolarComparacion2021$Promedio)+1), legend.text = c("2021", "2022"),col = colorRampPalette(c("blue", "green", "yellow", "red"))(2) ,xlab="Meses", ylab = "Precio promedio(US$)",main = " GR11: PRECIO PROMEDIO DEL COBRE ENTRE 2021 Y 2022")
plot(c(1:length(Kilo_DolarComparacion2021$Meses)),Kilo_DolarComparacion2021$Promedio ,type = "b",ylab = "Precio promedio (US$)",xlab = "Meses(número)",col = "pink",lwd = 3,pch = 21,bg = "red",cex = 1.5,main = "GR12:OSCILACIÓN DEL PRECIO PROMEDIO DEL COBRE 2021")
text(x = c(1:length(Kilo_DolarComparacion2021$Meses)),y =Kilo_DolarComparacion2021$Promedio,round(unique(Kilo_DolarComparacion2021$Promedio),2),col = "black"  )
plot(c(1:length(Kilo_DolarComparacion2022$Meses)),Kilo_DolarComparacion2022$Promedio ,type = "b",ylab = "Precio promedio",xlab = "Meses(número)",col = "skyblue",lwd = 3,pch = 21,bg = "red",cex = 1.5,main = "GR13:FLUCTUACIÓN DEL PRECIO PROMEDIO DEL COBRE 2022")
text(x = c(1:length(Kilo_DolarComparacion2022$Meses)),y =Kilo_DolarComparacion2022$Promedio,round(unique(Kilo_DolarComparacion2022$Promedio),2),col = "black"  )
items %>% filter(Anio == 2021) %>% select(Meses,US_Dolar) ->comparacionDolarTotalItems2021
items %>% filter(Anio == 2022) %>% select(Meses,US_Dolar) ->comparacionDolarTotalItems2022
comparacionDolarTotalItems2021$US_Dolar = round(comparacionDolarTotalItems2021$US_Dolar/1000000,2)
comparacionDolarTotalItems2022$US_Dolar = round(comparacionDolarTotalItems2022$US_Dolar/1000000,2)
# Crear el gráfico de barras de doble barras
barplot(rbind(comparacionDolarTotalItems2021$US_Dolar,comparacionDolarTotalItems2022$US_Dolar), beside = TRUE, names.arg = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."), ylim = c(0,2000),legend.text = c("2021", "2022"),col = colorRampPalette(c("blue", "green", "yellow"))(2) ,xlab = "Meses", ylab = "Millones de dólares(US$)",main = "GR14:Comparación de millones de dólares mensual entre el año 2021 y 2022")
plot(c(1:length(comparacionDolarTotalItems2021$Meses)),comparacionDolarTotalItems2021$US_Dolar ,type = "b",ylab = "Millones de dólares",xlab = "Meses(número)",main = "Variación de Millones de dólares del año 2021",col = "greenyellow",lwd = 3,pch = 21,bg = "red",cex = 1.5)
text(x = c(1:length(comparacionDolarTotalItems2021$Meses)),y =comparacionDolarTotalItems2021$US_Dolar,unique(comparacionDolarTotalItems2021$US_Dolar),col = "black"  )
plot(c(1:length(comparacionDolarTotalItems2022$Meses)),comparacionDolarTotalItems2022$US_Dolar ,type = "b",ylab = "Millones de dólares",xlab = "Meses(número)",main = "Variación de Millones de dólares del año 2022",col = "skyblue",lwd = 3,pch = 21,bg = "green",cex = 1.5)
text(x = c(1:length(comparacionDolarTotalItems2022$Meses)),y =comparacionDolarTotalItems2022$US_Dolar,unique(comparacionDolarTotalItems2022$US_Dolar),col = "black"  )
modelo <- lm(mesescomparacion2022$newDolarMillion ~ mesescomparacion2022$newKgTon)
plot(mesescomparacion2022$newKgTon, mesescomparacion2022$newDolarMillion,xlab="Cobre(kTM)",ylab="Millones US$",main=" TOTAL DE COBRE (kTM) VS Millones US$",col.main = "blue")
abline(modelo,col="red")
cor(mesescomparacion2022$newKgTon,mesescomparacion2022$newDolarMillion,use = "pairwise.complete.obs")
summary(modelo)
modelo2<- lm(mesescomparacion2021$newKgTon ~ mesescomparacion2021$sumRegistros)
plot(mesescomparacion2021$sumRegistros, mesescomparacion2021$newKgTon,xlab="Totales de registro",ylab="Total de cobre (kTM)",main=" TOTALES DE REGISTRO VS TOTAL DE COBRE (kTM)",col.main = "blue")
abline(modelo2,col="red")
cor(mesescomparacion2021$sumRegistros,mesescomparacion2021$newKgTon,use = "pairwise.complete.obs")
summary(modelo2)
data <- data.frame(name = c('Alejandra', 'Anayeli','Brigitte y Diego',' Yoman y Anayeli','Diego y Alejandra'),
start = c(1,2,3,4,4),
end = c(2,3,4,6,7),
Actividades = c('Intro', 'Datos','Limpieza','Descriptores numéricos','Descriptores gráficos')
)
if (!require("ggplot2", character.only = TRUE)) {
install.packages("ggplot2")
}
if (!require("ggthemes", character.only = TRUE)) {
install.packages("ggthemes")
}
ggplot(data, aes(x=start, xend=end,
y=name, yend=name, color= Actividades)) +
theme_bw()+
geom_segment(size=8) +
labs(title='Elaboración del informe PG1', x='Semanas', y='Responsables') +
theme_economist() +
theme_update(plot.title = element_text(hjust = 0.5), axis.title = element_text(hjust=0.5))
if (!require("readr", character.only = TRUE)) {
install.packages("readr")
}
if (!require("readxl", character.only = TRUE)) {
install.packages("readxl")
}
if (!require("dplyr", character.only = TRUE)) {
install.packages("dplyr")
}
if (!require("stringr", character.only = TRUE)) {
install.packages("stringr")
}
if (!require("plotrix", character.only = TRUE)) {
install.packages("plotrix")
}
if (!require("scales", character.only = TRUE)) {
install.packages("scales")
}
if (!require("ggplot2", character.only = TRUE)) {
install.packages("ggplot2")
}
if (!require("ggthemes", character.only = TRUE)) {
install.packages("ggthemes")
}
library(dplyr);
library(readr);
library(readxl);
library(stringr);
library(plotrix);
library(scales);
library(ggplot2);
library(ggthemes);
#destinos <- read_excel("destino3.xlsx")
export <- read_excel("export.xlsx")
items <- read_excel("items.xlsx")
minerales <- read_excel("minerales.xlsx")
sector <- read_excel("sector.xlsx")
paises<- read.csv2("destino31.csv",header =T,sep =';')
datos_faltantes <- sum(is.na(export))
casos_faltantes <- sum(!complete.cases(export))
datos_faltantes1 <- sum(is.na(items))
casos_faltantes1 <- sum(!complete.cases(items))
datos_faltantes2 <- sum(is.na(minerales))
casos_faltantes2 <- sum(!complete.cases(minerales))
sector = sector[-c(1), ] #Borro el NA que estobarba de sector
datos_faltantes3 <- sum(is.na(sector))
casos_faltantes3 <- sum(!complete.cases(sector))
paises = paises[-c(260:993), ] #Borro las filas que quedaron en NA
paises = select(paises,País.Destino,Año,Meses,Total.registros,Total.KG,US.KG,US)
##Veo los names de paises
names(paises)
paises = rename(paises,Pais_Destino = "País.Destino",Anio = "Año",Total_Registros = "Total.registros",Total_KG = "Total.KG",US_Dolar = "US",US_KG = "US.KG")
paises = select(paises,Pais_Destino,Anio,Meses,Total_Registros,Total_KG,US_KG,US_Dolar)
names(paises)
names(paises)
str(paises)
paises$Total_Registros = as.integer(paises$Total_Registros)
paises$Total_KG = as.numeric(paises$Total_KG)
paises$US_KG = as.numeric(paises$US_KG)
paises$US_Dolar = as.numeric(paises$US_Dolar)
str(paises)
paises <- mutate(paises, `Total_Registros`= as.integer(`Total_Registros`))
str(paises)
summary(paises$Meses)
print("Total Registros Range:")
range(paises$Total_Registros)
print("Total KG Range:")
range(paises$Total_KG)
print("US_KG Range:")
range(paises$US_KG)
print("US_DOLAR Range:")
range(paises$US_Dolar)
str(paises)
sum(is.na(paises))
sum(!complete.cases(paises))
unique(paises$Anio)
unique(paises$Meses)
unique(paises$Total_Registros)
names(export)
export = rename(export,Anio = "AÑO",Total_Registros = "Total registros",Total_KG = "Total KG",US_KG = "US$ / KG",US_Dolar = "US$")
names(export)
str(export)
export <- mutate(export,`Total_Registros` = as.integer(`Total_Registros`),`Anio` = as.integer(`Anio`))
summary(export$Exportador)
summary(export$Meses)
range(export$Total_Registros)
range(export$Total_KG)
range(export$US_KG)
range(export$US_Dolar)
str(export)
sum(is.na(export))
sum(!complete.cases(export))
str(minerales)
names(minerales)
minerales = rename(minerales,US_Dolar = "US $", Anio = "Año");
minerales$Anio = as.integer(minerales$Anio);
summary(minerales$Minerales)
summary(minerales$Meses)
range(minerales$Anio)
range(minerales$US_Dolar)
sum(is.na(minerales))
sum(!complete.cases(minerales))
unique(minerales$Minerales)
unique(minerales$Anio)
unique(minerales$Meses)
unique(minerales$US_Dolar)
str(sector)
names(sector)
summary(sector$Sector)
summary(sector$Producto)
sum(is.na(sector))# verificamos si hay datos incompletos y se obtuvo 14
sum(!complete.cases(sector))# Se encontro una fila incompleta
sector=na.omit(sector)#Eliminamos la fila
sector=data.frame(sector, row.names = NULL)# Reordenamos el orden numerico de los datos
unique(sector$Sector)
unique(sector$Producto)
unique(sector$Enero)
unique(sector$Febrero)
unique(sector$Marzo)
unique(sector$Abril)
unique(sector$Mayo)
unique(sector$Junio)
unique(sector$Julio)
unique(sector$Agosto)
unique(sector$Setiembre)
unique(sector$Octubre)
unique(sector$Noviembre)
unique(sector$Diciembre)
str(items)
items = rename(items,Descrip_Part_Aduanera = "Descripción Partida Aduanera",
Anio = "Año",
Total_Registros = "Total registros",
Total_KG = "Total KG",
US_KG = "US$ / KG",
US_Dolar = "US$")
items$Anio = as.integer(items$Anio)
items$Total_Registros = as.integer(items$Total_Registros)
summary(items$Anio);
summary(items$Meses);
summary(items$Total_Registros)
summary(items$Total_KG)
summary(items$US_KG)
summary(items$US_Dolar)
sum(is.na(items))# verificamos si hay datos incompletos y se obtuvo 14
sum(!complete.cases(items))
unique(items$Anio)
unique(items$Meses)
unique(items$Total_Registros)
str(items)
export %>% filter(Anio == 2021) %>% group_by(Meses) %>% summarise(sumTotalKGFull = sum(Total_KG),sumTotalDolar = sum(US_Dolar),sumRegistros = sum(Total_Registros)) -> mesescomparacion2021
export %>% filter(Anio == 2022) %>% group_by(Meses) %>% summarise(sumTotalKGFull= sum(Total_KG),sumTotalDolar = sum(US_Dolar),sumRegistros = sum(Total_Registros)) -> mesescomparacion2022
boxplot(mesescomparacion2021$sumRegistros, main="Número de registros por mes en el 2021" ,horizontal = TRUE)
round(mean(mesescomparacion2021$sumRegistros),0)
round(median(mesescomparacion2021$sumRegistros),2)
#2021
export %>% filter(Anio == 2021 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2021
#2022
export %>% filter(Anio == 2022 )%>%group_by(Exportador) %>% summarise(TotalDolaresFull = sum(US_Dolar)) -> comparacionexport2022
comparacionexport2021$newDollarsMillion = round(comparacionexport2021$TotalDolaresFull/1000000 , 4)
comparacionexport2022$newDollarsMillion = round(comparacionexport2022$TotalDolaresFull/1000000 , 4)
boxplot(comparacionexport2021$newDollarsMillion, main= "Ingreso de divisas por empresa en el 2021" , horizontal = TRUE)
diff(range(comparacionexport2021$newDollarsMillion))
round(median(comparacionexport2021$newDollarsMillion),2)
round(quantile(comparacionexport2021$newDollarsMillion, c(0.25, 0.75)),2)
boxplot(mesescomparacion2022$sumRegistros, main="Número de registros por mes en el 2022" ,horizontal = TRUE)
round(mean(mesescomparacion2022$sumRegistros),0)
round(median(mesescomparacion2022$sumRegistros),2)
boxplot(comparacionexport2022$newDollarsMillion,main= "Ingreso de divisas por empresa en el 2022", horizontal = TRUE)
round(diff(range(comparacionexport2022$newDollarsMillion)),2)
round(median(comparacionexport2022$newDollarsMillion),2)
round(quantile(comparacionexport2022$newDollarsMillion, c(0.25, 0.75)),2)
sector %>% group_by(Sector) %>% summarise(sumi = sum(Enero + Febrero + Marzo + Abril + Junio + Julio + Agosto + Setiembre + Octubre+ Noviembre + Diciembre)) -> comparacionSectors2021
#Entre 1000 toneladas
comparacionSectors2021$newToneladas = round(comparacionSectors2021$sumi/1000000,2)
paises %>% filter(Anio == 2021) %>% group_by(Pais_Destino) %>% summarise(TotalesRegistrosFull = Total_Registros) %>% summarise(CantidadRegistrosPorAño = sum(TotalesRegistrosFull)) ->paisesxregistrosfull2021
# Crear el gráfico de caja y bigotes
boxplot(paisesxregistrosfull2021$CantidadRegistrosPorAño ,
col = "pink",
ylab = "Cantidad de Registros",
xlab = ".",
main = "GR1: Cantidad de registros según cada país en 2021",
las=2)
paisesxregistrosfull2021 = paisesxregistrosfull2021[order(paisesxregistrosfull2021$CantidadRegistrosPorAño,decreasing = TRUE),]
otros<-data.frame(Pais_Destino = "Otros",CantidadRegistrosPorAño = sum(paisesxregistrosfull2021[6:nrow(paisesxregistrosfull2021), "CantidadRegistrosPorAño"]))
paisesxregistrosfull2021V2 = rbind(paisesxregistrosfull2021[1:5,],otros)
# Pie Chart with Percentages
slices <- c(paisesxregistrosfull2021V2$CantidadRegistrosPorAño)
lbls <- c(unique(paisesxregistrosfull2021V2$Pais_Destino))
pct <- round(slices/sum(slices)*100,2)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=c("blue", "green", "yellow", "red","gray","skyblue"),
main="GR2:Destinos de exportación 2021")
paisesxregistrosfull2021 %>% slice_max(CantidadRegistrosPorAño) %>% pull(Pais_Destino)
max(paisesxregistrosfull2021$CantidadRegistrosPorAño)
paises %>% filter(Anio == 2022) %>% group_by(Pais_Destino) %>% summarise(TotalesRegistrosFull = Total_Registros) %>% summarise(CantidadRegistrosPorAño = sum(TotalesRegistrosFull)) ->paisesxregistrosfull2022
# Crear el gráfico de caja y bigotes
boxplot(paisesxregistrosfull2022$CantidadRegistrosPorAño,
col = "pink",
ylab = "Cantidad de Registros",
xlab = ".",
main = "GR3:Cantidad de registros según cada país en 2022",
las=2)
paisesxregistrosfull2022 = paisesxregistrosfull2022[order(paisesxregistrosfull2022$CantidadRegistrosPorAño,decreasing = TRUE),]
otros2<-data.frame(Pais_Destino = "Otros",CantidadRegistrosPorAño = sum(paisesxregistrosfull2022[6:nrow(paisesxregistrosfull2022), "CantidadRegistrosPorAño"]))
paisesxregistrosfull2022V2 = rbind(paisesxregistrosfull2022[1:5,],otros2)
# Pie Chart with Percentages
slices2 <- c(paisesxregistrosfull2022V2$CantidadRegistrosPorAño)
lbls2 <- c(unique(paisesxregistrosfull2022V2$Pais_Destino))
pct2 <- round(slices2/sum(slices2)*100,2)
lbls2 <- paste(lbls2, pct2) # add percents to labels
lbls2 <- paste(lbls2,"%",sep="") # ad % to labels
pie(slices2,labels = lbls2, col=c("blue", "green", "yellow", "red","gray","skyblue"),
main="GR4 :Destinos de exportación 2022")
paisesxregistrosfull2022 %>% slice_max(CantidadRegistrosPorAño) %>% pull(Pais_Destino)
max(paisesxregistrosfull2022$CantidadRegistrosPorAño)
minerales %>% filter(Anio==2021)%>% group_by(Minerales)%>% summarise(cantDolarsFull = sum(US_Dolar)) -> comparDolarMine2021
minerales %>% filter(Anio==2022)%>% group_by(Minerales)%>% summarise(cantDolarsFull = sum(US_Dolar)) -> comparDolarMine2022
comparDolarMine2021$newDolarsMillion = round(comparDolarMine2021$cantDolarsFull/1000000 , 2)
comparDolarMine2022$newDolarsMillion = round(comparDolarMine2022$cantDolarsFull/1000000 , 2)
barplot(comparDolarMine2021$newDolarsMillion,names =c("Cobre","Estaño","Hierro","Oro","Plata","Plom","Rest","Zinc"),col = colorRampPalette(c("blue", "green", "yellow", "red"))(8),ylab = "Millones de dólares ",ylim = c(0,25000),xlab = "Minerales", main = "GR5: EXPORTACIÓN DEL SECTOR MINERO DEL 2021")
length(unique(comparDolarMine2021$Minerales))
comparDolarMine2021 %>% slice_max(cantDolarsFull) %>% pull(Minerales)
max(comparDolarMine2021$cantDolarsFull)
comparacionexport2021= comparacionexport2021[order(comparacionexport2021$TotalDolaresFull,decreasing = TRUE),]
otrosexport1<-data.frame(Exportador = "Otros",TotalDolaresFull = sum(comparacionexport2021[9:nrow(comparacionexport2021), "TotalDolaresFull"]),newDollarsMillion = sum(comparacionexport2021[9:nrow(comparacionexport2021), "newDollarsMillion"]))
comparacionexport2021V2 = rbind(comparacionexport2021[1:8,],otrosexport1)
# Pie Chart with Percentages
slices3 <- c(comparacionexport2021V2$newDollarsMillion)
lbls3 <- c("C.Mine.Antamina","Soc.Mine.Cerro Verde","Mine.Las Bambas","Comp. Mine. Antapaccay","Trafigura Peru S.A.C","Mine. Chinalco Perú","Southern Peru Copper Corp.","HUDBAY PERU S.A.C","Otros")
pct3 <- round(slices3/sum(slices3)*100,2)
lbls3 <- paste(lbls3, pct3) # add percents to labels
lbls3 <- paste(lbls3,"%",sep="") # ad % to labels
pie(slices3,labels = lbls3, col=colorRampPalette(c("blue", "green", "yellow", "red"))(length(unique(comparacionexport2021V2$Exportador))),
main="GR6:Sociedades Exportadoras en el 2021")
max(comparacionexport2021$TotalDolaresFull)
max(comparacionexport2021$newDollarsMillion)
comparacionexport2022 %>% arrange(desc(TotalDolaresFull))
comparacionexport2022= comparacionexport2022[order(comparacionexport2022$TotalDolaresFull,decreasing = TRUE),]
otrosexport2<-data.frame(Exportador = "Otros",TotalDolaresFull = sum(comparacionexport2022[9:nrow(comparacionexport2022), "TotalDolaresFull"]),newDollarsMillion = sum(comparacionexport2022[9:nrow(comparacionexport2022), "newDollarsMillion"]))
comparacionexport2022V2 = rbind(comparacionexport2022[1:8,],otrosexport2)
# Pie Chart with Percentages
slices4 <- c(comparacionexport2022V2$newDollarsMillion)
lbls4 <- c("Soc.Min.Cerro Verde","C.Mine.Antamina.","Mine. Las Bambas","Trafigura PERU S.A.C.","Comp. Mine. Antapaccay S.A.","Mine. Chinalco Perú S.A","Hudbay Perú S.A.C.","Glencore Perú S.A.C","Otros")
pct4 <- round(slices4/sum(slices4)*100,2)
lbls4 <- paste(lbls4, pct4) # add percents to labels
lbls4 <- paste(lbls4,"%",sep="") # ad % to labels
pie(slices4,labels = lbls4, col=colorRampPalette(c("blue", "green", "yellow", "red"))(length(unique(comparacionexport2022V2$Exportador))),
main="GR7: Proporción de ingresos de empresas exportadoras en el 2022")
max(comparacionexport2022$TotalDolaresFull)
max(comparacionexport2022$newDollarsMillion)
comparacionexport2022 %>% arrange(desc(TotalDolaresFull))
mesescomparacion2021 <- mesescomparacion2021[order(match(mesescomparacion2021$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
mesescomparacion2022 <- mesescomparacion2022[order(match(mesescomparacion2022$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
mesescomparacion2021$newKgTon = round(mesescomparacion2021$sumTotalKGFull/1000000 , 4)
mesescomparacion2022$newKgTon= round(mesescomparacion2022$sumTotalKGFull/1000000 , 4)
mesescomparacion2021$newDolarMillion = round(mesescomparacion2021$sumTotalDolar/1000000,4)
mesescomparacion2022$newDolarMillion = round(mesescomparacion2022$sumTotalDolar/1000000,4)
barplot(mesescomparacion2021$newKgTon,names = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),col = colorRampPalette(c("blue", "green", "yellow", "red"))(12),ylim = c(0,max(mesescomparacion2021$newKgTon)+100),ylab = "Cobre(kTM) ",xlab = "Meses", main = "GR 8: DEMANDA DEL COBRE DEL 2021")
length(unique(mesescomparacion2021$Meses))
mesescomparacion2021 %>% slice_max(sumTotalKGFull) %>% pull(Meses)
max(mesescomparacion2021$sumTotalKGFull)
max(mesescomparacion2021$newKgTon)
barplot(mesescomparacion2022$newKgTon,names = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),col = colorRampPalette(c("blue", "green", "yellow", "red"))(12),ylim = c(0,max(mesescomparacion2022$newKgTon)+100),ylab = "Cobre(kTM)",xlab = "Meses", main = "GR9: DEMANDA DEL COBRE DEL 2022")
length(unique(mesescomparacion2022$Meses))
mesescomparacion2022 %>% slice_max(sumTotalKGFull) %>% pull(Meses)
max(mesescomparacion2022$sumTotalKGFull)
# Crear el gráfico de barras de doble barras
barplot(rbind(mesescomparacion2022$newKgTon,mesescomparacion2021$newKgTon), beside = TRUE, names.arg = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),ylim = c(0,max(mesescomparacion2022$newKgTon)+100), legend.text = c("2022", "2021"),col = colorRampPalette(c("blue", "green", "yellow", "red"))(2) ,xlab = "Meses" ,ylab = "Cobre(kTM)",main = "GR10: DEMANDA DEL COBRE ENTRE 2022 Y 2021")
items %>% filter(Anio == 2021) %>% group_by(Meses) %>% summarise(Promedio = round(mean(US_KG),3)) ->Kilo_DolarComparacion2021
items %>% filter(Anio == 2022) %>% group_by(Meses) %>% summarise(Promedio = round(mean(US_KG),3)) ->Kilo_DolarComparacion2022
Kilo_DolarComparacion2021 <- Kilo_DolarComparacion2021[order(match(Kilo_DolarComparacion2021$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
Kilo_DolarComparacion2022 <- Kilo_DolarComparacion2022[order(match(Kilo_DolarComparacion2022$Meses,c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"))),]
# Crear el gráfico de barras de doble barras
barplot(rbind(Kilo_DolarComparacion2021$Promedio,Kilo_DolarComparacion2022$Promedio), beside = TRUE, names.arg = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."),ylim = c(0,max(Kilo_DolarComparacion2021$Promedio)+1), legend.text = c("2021", "2022"),col = colorRampPalette(c("blue", "green", "yellow", "red"))(2) ,xlab="Meses", ylab = "Precio promedio(US$)",main = " GR11: PRECIO PROMEDIO DEL COBRE ENTRE 2021 Y 2022")
plot(c(1:length(Kilo_DolarComparacion2021$Meses)),Kilo_DolarComparacion2021$Promedio ,type = "b",ylab = "Precio promedio (US$)",xlab = "Meses(número)",col = "pink",lwd = 3,pch = 21,bg = "red",cex = 1.5,main = "GR12:OSCILACIÓN DEL PRECIO PROMEDIO DEL COBRE 2021")
text(x = c(1:length(Kilo_DolarComparacion2021$Meses)),y =Kilo_DolarComparacion2021$Promedio,round(unique(Kilo_DolarComparacion2021$Promedio),2),col = "black"  )
plot(c(1:length(Kilo_DolarComparacion2022$Meses)),Kilo_DolarComparacion2022$Promedio ,type = "b",ylab = "Precio promedio",xlab = "Meses(número)",col = "skyblue",lwd = 3,pch = 21,bg = "red",cex = 1.5,main = "GR13:FLUCTUACIÓN DEL PRECIO PROMEDIO DEL COBRE 2022")
text(x = c(1:length(Kilo_DolarComparacion2022$Meses)),y =Kilo_DolarComparacion2022$Promedio,round(unique(Kilo_DolarComparacion2022$Promedio),2),col = "black"  )
items %>% filter(Anio == 2021) %>% select(Meses,US_Dolar) ->comparacionDolarTotalItems2021
items %>% filter(Anio == 2022) %>% select(Meses,US_Dolar) ->comparacionDolarTotalItems2022
comparacionDolarTotalItems2021$US_Dolar = round(comparacionDolarTotalItems2021$US_Dolar/1000000,2)
comparacionDolarTotalItems2022$US_Dolar = round(comparacionDolarTotalItems2022$US_Dolar/1000000,2)
# Crear el gráfico de barras de doble barras
barplot(rbind(comparacionDolarTotalItems2021$US_Dolar,comparacionDolarTotalItems2022$US_Dolar), beside = TRUE, names.arg = c("En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sep.","Oct","Nov.","Dic."), ylim = c(0,2000),legend.text = c("2021", "2022"),col = colorRampPalette(c("blue", "green", "yellow"))(2) ,xlab = "Meses", ylab = "Millones de dólares(US$)",main = "GR14:Comparación de millones de dólares mensual entre el año 2021 y 2022")
plot(c(1:length(comparacionDolarTotalItems2021$Meses)),comparacionDolarTotalItems2021$US_Dolar ,type = "b",ylab = "Millones de dólares",xlab = "Meses(número)",main = "Variación de Millones de dólares del año 2021",col = "greenyellow",lwd = 3,pch = 21,bg = "red",cex = 1.5)
text(x = c(1:length(comparacionDolarTotalItems2021$Meses)),y =comparacionDolarTotalItems2021$US_Dolar,unique(comparacionDolarTotalItems2021$US_Dolar),col = "black"  )
plot(c(1:length(comparacionDolarTotalItems2022$Meses)),comparacionDolarTotalItems2022$US_Dolar ,type = "b",ylab = "Millones de dólares",xlab = "Meses(número)",main = "Variación de Millones de dólares del año 2022",col = "skyblue",lwd = 3,pch = 21,bg = "green",cex = 1.5)
text(x = c(1:length(comparacionDolarTotalItems2022$Meses)),y =comparacionDolarTotalItems2022$US_Dolar,unique(comparacionDolarTotalItems2022$US_Dolar),col = "black"  )
modelo <- lm(mesescomparacion2022$newDolarMillion ~ mesescomparacion2022$newKgTon)
plot(mesescomparacion2022$newKgTon, mesescomparacion2022$newDolarMillion,xlab="Cobre(kTM)",ylab="Millones US$",main=" TOTAL DE COBRE (kTM) VS Millones US$",col.main = "blue")
abline(modelo,col="red")
cor(mesescomparacion2022$newKgTon,mesescomparacion2022$newDolarMillion,use = "pairwise.complete.obs")
summary(modelo)
modelo2<- lm(mesescomparacion2021$newKgTon ~ mesescomparacion2021$sumRegistros)
plot(mesescomparacion2021$sumRegistros, mesescomparacion2021$newKgTon,xlab="Totales de registro",ylab="Total de cobre (kTM)",main=" TOTALES DE REGISTRO VS TOTAL DE COBRE (kTM)",col.main = "blue")
abline(modelo2,col="red")
cor(mesescomparacion2021$sumRegistros,mesescomparacion2021$newKgTon,use = "pairwise.complete.obs")
summary(modelo2)
