table(PESCADOS_ATRAPADOS$Sexo)
table(PESCADOS_ATRAPADOS$Estacion)
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Narigudo"|Barco=="Narigudo")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Ni tan tan"|Barco=="Ni tan tan")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Pescafina"|Barco=="Pescafina")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Rocadencia"|Barco=="Rocadencia")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Rubi"|Barco=="Rubi")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Rubí"|Barco=="Rubí")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Santa Clara"|Barco=="Santa Clara")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Serena"|Barco=="Serena")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Solymar"|Barco=="Solymar")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Ventarrón"|Barco=="Ventarrón")
Pruebafilter3
unique(PESCADOS_ATRAPADOS$Estacion)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano" ,Barco=="Zéfiro"|Barco=="Zéfiro")
Pruebafilter3
barplot(table(PESCADOS_ATRAPADOS$Barco),
main="Grafico de la variable Compañia",
col = c("#cc9999", "#9999cc", "#9c9c9c"),
las = 2)
mlv(PESCADOS_ATRAPADOS$Barco, method = "meanshift")
table(PESCADOS_ATRAPADOS$Barco)
table(PESCADOS_ATRAPADOS$Sexo)
table(PESCADOS_ATRAPADOS$Estacion)
table(PESCADOS_ATRAPADOS$Barco)
Pruebafilter3<-filter(PESCADOS_ATRAPADOS, Sexo=="Hembra"|Sexo=="Hembra")
Pruebafilter3
Pruebafilter4<-filter(PESCADOS_ATRAPADOS, Sexo=="Hembra"|Sexo=="Hembra")
Pruebafilter4
barplot(table(PESCADOS_ATRAPADOS$Barco),
main="Grafico de la variable Compañia",
col = c("#cc9999", "#9999cc", "#9c9c9c"),
las = 2)
mlv(PESCADOS_ATRAPADOS$Barco, method = "meanshift")
moda
table(PESCADOS_ATRAPADOS$Sexo)
Pruebafilter4<-filter(PESCADOS_ATRAPADOS, Estacion=="Invierno"|Estacion=="Invierno",Sexo=="Hembra"|Sexo=="Hembra")
Pruebafilter4
Pruebafilter4<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano",Sexo=="Hembra"|Sexo=="Hembra")
Pruebafilter4
Pruebafilter4<-filter(PESCADOS_ATRAPADOS, Estacion=="Verano"|Estacion=="Verano",Sexo=="Hembra"|Sexo=="Hembra")
Pruebafilter4
mean(PESCADOS_ATRAPADOS$Largo)
mean(PESCADOS_ATRAPADOS$Largo)
sd(PESCADOS_ATRAPADOS$Largo)
mean(PESCADOS_ATRAPADOS$Largo)
sd(PESCADOS_ATRAPADOS$Largo)
sqrt(var(PESCADOS_ATRAPADOS$Largo))
Pruebafilter5<-filter(PESCADOS_ATRAPADOS$Peso)
table(PESCADOS_ATRAPADOS$Peso)
summary(PESCADOS_ATRAPADOS$Peso)
summary(PESCADOS_ATRAPADOS$Peso)
cv <- sd (PESCADOS_ATRAPADOS$Peso) / media (PESCADOS_ATRAPADOS$Peso) * 100
summary(PESCADOS_ATRAPADOS$Peso)
cv <- sd (PESCADOS_ATRAPADOS$Peso) / mean (PESCADOS_ATRAPADOS$Peso) * 100
summary(PESCADOS_ATRAPADOS$Peso)
cv <- sd (PESCADOS_ATRAPADOS$Peso) / mean (PESCADOS_ATRAPADOS$Peso) *
cv
summary(PESCADOS_ATRAPADOS$Peso)
cv <- sd (PESCADOS_ATRAPADOS$Peso) / mean (PESCADOS_ATRAPADOS$Peso)
cv
library(readr)
library(dplyr)
library(modeest)
dem<-read_csv("Demo..csv")
library(readr)
library(dplyr)
library(modeest)
dem<-read_csv("Demo..csv")
library(readr)
library(dplyr)
library(modeest)
dem<-read_csv("Demo.csv")
C19<-read_csv("C19.cs")
library(readr)
library(dplyr)
library(modeest)
dem<-read_csv("Demo.csv")
C19<-read_csv("C19.cs")
library(readr)
library(dplyr)
library(modeest)
dem<-read_csv("Demo.csv")
C19<-read_csv("C19.csv")
View(C19)
View(dem)
library(readr)
library(dplyr)
library(modeest)
DF<-read_csv("Pasos.csv")
View(DF)
sum(is.na(DF))
sum(is.na(DF$Edad))
Pruebafilter<-filter(DF, Edad==is.na |Edad==is.na)
sum(is.na(DF$Edad))
Pruebafilter<-filter(DF, Edad=="NA" |Edad=="NA")
Pruebafilter
sum(is.na(DF$Edad))
Pruebafilter<-filter(DF, Edad==NA |Edad==NA)
Pruebafilter
sum(is.na(DF$Edad))
DF<-na.omit(DF)
sum(is.na(DF$Edad))
View(DF)
library(readr)
library(dplyr)
library(modeest)
DF<-read_csv("Pasos.csv")
summary(DF)
sum(complete.cases(DF))
summary(DF)
sum(complete.cases(DF))
summary(DF)
apply(DF$Edad)
sum(complete.cases(DF))
summary(DF)
sum(is.na(DF$Edad))
sum(is.na(DF$Estatura))
sum(complete.cases(DF))
summary(DF)
sum(is.na(DF$Edad))
sum(is.na(DF$Estatura))
sum(is.na(DF$Peso))
sum(is.na(DF$Sexo))
sum(is.na(DF$Calzado))
sum(is.na(DF$Talla))
sum(is.na(DF$Deporte))
sum(is.na(DF$Pasos))
sum(complete.cases(DF))
summary(DF)
sum(is.na(DF$Edad))
sum(is.na(DF$Estatura))
sum(is.na(DF$Peso))
sum(is.na(DF$Sexo))
sum(is.na(DF$Calzado))
sum(is.na(DF$Talla))
sum(is.na(DF$Deporte))
sum(is.na(DF$Pasos))
sd(DF$Peso)
sum(complete.cases(DF))
summary(DF)
sum(is.na(DF$Edad))
sum(is.na(DF$Estatura))
sum(is.na(DF$Peso))
sum(is.na(DF$Sexo))
sum(is.na(DF$Calzado))
sum(is.na(DF$Talla))
sum(is.na(DF$Deporte))
sum(is.na(DF$Pasos))
DF<-na.omit(DF)
sum(complete.cases(DF))
summary(DF)
sum(is.na(DF$Edad))
sum(is.na(DF$Estatura))
sum(is.na(DF$Peso))
sum(is.na(DF$Sexo))
sum(is.na(DF$Calzado))
sum(is.na(DF$Talla))
sum(is.na(DF$Deporte))
sum(is.na(DF$Pasos))
DF<-na.omit(DF)
sd(DF$Peso)
sum(complete.cases(DF))
summary(DF)
sum(is.na(DF$Edad))
sum(is.na(DF$Estatura))
sum(is.na(DF$Peso))
sum(is.na(DF$Sexo))
sum(is.na(DF$Calzado))
sum(is.na(DF$Talla))
sum(is.na(DF$Deporte))
sum(is.na(DF$Pasos))
DF<-na.omit(DF)
sd(DF$Peso)
cv <- sd (DF$Peso) / mean (DF$Peso)
cv <- sd (DF$Peso) / mean (DF$Peso)
cv <- sd (DF$Peso) / mean (DF$Peso)
CV
sum(complete.cases(DF))
summary(DF)
sum(is.na(DF$Edad))
sum(is.na(DF$Estatura))
sum(is.na(DF$Peso))
sum(is.na(DF$Sexo))
sum(is.na(DF$Calzado))
sum(is.na(DF$Talla))
sum(is.na(DF$Deporte))
sum(is.na(DF$Pasos))
DF<-na.omit(DF)
sd(DF$Peso)
cv <- sd (DF$Peso) / mean (DF$Peso)
cv
sd(DF$Calzado)
cv <- sd (DF$Calzado) / mean (DF$Calzado)
cv
mosaicplot(~DF$Deporte + DF$Sexo,
main= "Mosaico de las variables Deporte y Sexo",
xlab= "Deporte",
ylab= "Sexo",
color = 2:7, # vector de colores, si se pone color = T, queda en banco y negro.
las = 1) # estilo de los ejes
library(readr)
library(dplyr)
DB_Firefighters<-read_csv("DATA-BOMBEROS.csv")
library(readr)
library(dplyr)
DB_Firefighters<-read_csv("DATA-BOMBEROS.csv")
DB_Firefighters=DB_Firefighters[,-c(1)]
names (DB_Firefighters)<- c("Correo Electronico","Genero","Rango","Compañia","Distrito","Edad","Años de trabajo","Horas voluntarias","Lesiones sufridas","MEDIA FISICA 1-5","Minutos corriendo sin pausa","Planchas-1 min","Donde realiza su entrenamiento","Formacion Brindada","Lugar de mayor riesgo","Emergencia que no se siente preparado")
View(DB_Firefighters)
DB_Firefighters$`Lesiones sufridas`[DB_Firefighters$`Lesiones sufridas` == "3 o más"]<- 3
DB_Firefighters[DB_Firefighters == "-"]<- NA
DB_Firefighters$Compañia<-as.numeric(DB_Firefighters$Compañia)
DB_Firefighters$Edad<-as.numeric(DB_Firefighters$Edad)
DB_Firefighters$`Años de trabajo`<-as.numeric(DB_Firefighters$`Años de trabajo`)
DB_Firefighters$`Horas voluntarias`<-as.numeric(DB_Firefighters$`Horas voluntarias`)
DB_Firefighters$`Lesiones sufridas`<-as.numeric(DB_Firefighters$`Lesiones sufridas`)
DB_Firefighters$`MEDIA FISICA 1-5`<-as.numeric(DB_Firefighters$`MEDIA FISICA 1-5`)
DB_Firefighters$`Formacion Brindada`<-as.numeric(DB_Firefighters$`Formacion Brindada`)
DB_Firefighters$`Minutos corriendo sin pausa`<-as.numeric(DB_Firefighters$`Minutos corriendo sin pausa`)
DB_Firefighters$Edad[DB_Firefighters$Edad>99]<- NA
DB_Firefighters$`Planchas-1 min`<-as.numeric(DB_Firefighters$`Planchas-1 min`)
DB_Firefighters<-na.omit(DB_Firefighters)
DB_Firefighters<-read_csv("DATA-BOMBEROS.csv")
View(DB_Firefighters)
library(readr)
library(dplyr)
DB_Firefighters<-read_csv("DATA-BOMBEROS.csv")
DB_Firefighters=DB_Firefighters[,-c(1)]
names (DB_Firefighters)<- c("Correo Electronico","Genero","Rango","Compañia","Distrito","Edad","Años de trabajo","Horas voluntarias","Lesiones sufridas","MEDIA FISICA 1-5","Minutos corriendo sin pausa","Planchas-1 min","Donde realiza su entrenamiento","Formacion Brindada","Lugar de mayor riesgo","Emergencia que no se siente preparado")
View(DB_Firefighters)
length(DB_Firefighters$Edad[DB_Firefighters$Edad>99])
DB_Firefighters$`Lesiones sufridas`[DB_Firefighters$`Lesiones sufridas` == "3 o más"]<- 3
DB_Firefighters[DB_Firefighters == "-"]<- NA
DB_Firefighters$Compañia<-as.numeric(DB_Firefighters$Compañia)
DB_Firefighters$Edad<-as.numeric(DB_Firefighters$Edad)
DB_Firefighters$`Años de trabajo`<-as.numeric(DB_Firefighters$`Años de trabajo`)
DB_Firefighters$`Horas voluntarias`<-as.numeric(DB_Firefighters$`Horas voluntarias`)
DB_Firefighters$`Lesiones sufridas`<-as.numeric(DB_Firefighters$`Lesiones sufridas`)
DB_Firefighters$`MEDIA FISICA 1-5`<-as.numeric(DB_Firefighters$`MEDIA FISICA 1-5`)
DB_Firefighters$`Formacion Brindada`<-as.numeric(DB_Firefighters$`Formacion Brindada`)
DB_Firefighters$`Minutos corriendo sin pausa`<-as.numeric(DB_Firefighters$`Minutos corriendo sin pausa`)
length(DB_Firefighters$Edad[DB_Firefighters$Edad>99])
DB_Firefighters$`Planchas-1 min`<-as.numeric(DB_Firefighters$`Planchas-1 min`)
DB_Firefighters<-na.omit(DB_Firefighters)
DB_Firefighters$`Lesiones sufridas`[DB_Firefighters$`Lesiones sufridas` == "3 o más"]<- 3
DB_Firefighters[DB_Firefighters == "-"]<- NA
DB_Firefighters$Compañia<-as.numeric(DB_Firefighters$Compañia)
DB_Firefighters$Edad<-as.numeric(DB_Firefighters$Edad)
DB_Firefighters$`Años de trabajo`<-as.numeric(DB_Firefighters$`Años de trabajo`)
DB_Firefighters$`Horas voluntarias`<-as.numeric(DB_Firefighters$`Horas voluntarias`)
DB_Firefighters$`Lesiones sufridas`<-as.numeric(DB_Firefighters$`Lesiones sufridas`)
DB_Firefighters$`MEDIA FISICA 1-5`<-as.numeric(DB_Firefighters$`MEDIA FISICA 1-5`)
DB_Firefighters$`Formacion Brindada`<-as.numeric(DB_Firefighters$`Formacion Brindada`)
DB_Firefighters$`Minutos corriendo sin pausa`<-as.numeric(DB_Firefighters$`Minutos corriendo sin pausa`)
DB_Firefighters$Edad[DB_Firefighters$Edad>99]<- NA
DB_Firefighters$`Planchas-1 min`<-as.numeric(DB_Firefighters$`Planchas-1 min`)
DB_Firefighters<-na.omit(DB_Firefighters)
colEntrenamiento <- table(DB_Firefighters$`Donde realiza su entrenamiento`)
colEntrenamiento
barplot(table(DB_Firefighters$`Donde realiza su entrenamiento`),
main = "Grafico de la variable donde entrena",
col = 7:11, las=2)
legend(x=50,
rownames(colEntrenamiento),
cex = 0.7,
fill = 7:11
)
colEntrenamiento <- table(DB_Firefighters$`Donde realiza su entrenamiento`)
colEntrenamiento_filtrado <- colEntrenamiento[colEntrenamiento != 1]
colEntrenamiento_filtrado
barplot(colEntrenamiento_filtrado,
main = "Grafico de la variable donde entrena",
col = 5:7, las=2)
legend(x="topright",
rownames(colEntrenamiento_filtrado),
cex = 0.8,
fill = 5:7
)
# Donde se ejercitan y minutos corriendo
# Donde se ejercitan y número de planchas
# Comparar entre horas de voluntariado y edad y rango (puede ser el mosaico)
# MODIFICAR HORAS A RANGO DE HORAS
mosaicplot(table(rango, horas),
color=1:30,
main="Mosaicplot de horas de voluntariado por rango")
# La escala del 1-5 que tan preparados se sienten vs distritos
mosaicplot(table(distrito, preparado),
color = 2:7,
main="Mosaicplot escala de preparación por distrito")
summary(DB_Firefighters$`Donde realiza su entrenamiento`)
barplot(table(DB_Firefighters$Compañia),
main="Grafico de la variable Compañia",
col = c("#cc9999", "#9999cc", "#9c9c9c"),las=2)
# VALORES Y TABLE
Compañia=DB_Firefighters$Compañia
distrito <- DB_Firefighters$Distrito
mayor_riesgo <- DB_Firefighters$`Lugar de mayor riesgo`
edad <- DB_Firefighters$Edad
horas = DB_Firefighters$`Horas voluntarias`
rango = DB_Firefighters$Rango
preparado = DB_Firefighters$`MEDIA FISICA 1-5` # Variable categórica ordinal
minutos_corriendo <- DB_Firefighters$`Minutos corriendo sin pausa`
planchas_minuto <- DB_Firefighters$`Planchas-1 min`
lugar_ejercita <- DB_Firefighters$`Donde realiza su entrenamiento`
emergencias_no_preparado <- DB_Firefighters$`Emergencia que no se siente preparado`
table_Distrito <- table(distrito)
rm(list = ls())
library(knitr)
integrantes <- data.frame(Estudiante=c("Pierre Sandoval","Mario Silva","Mitsuo Murakami","Shasel Barros","Huberth Aquino"), Código=c(202120524,202120539,202110237,202120105,202120689))
kable(integrantes)
hist(DB_Firefighters$`Planchas-1 min`, breaks=15, main = "Histograma de la variable Planchas en 1 min", xlab= "Planchas 1-min",ylab= "Frecuencia", col = "aquamarine") #Histograma
library(readr)
library(dplyr)
DB_Firefighters<-read_csv("DATA-BOMBEROS.csv")
DB_Firefighters=DB_Firefighters[,-c(1)]
names (DB_Firefighters)<- c("Correo Electronico","Genero","Rango","Compañia","Distrito","Edad","Años de trabajo","Horas voluntarias","Lesiones sufridas","MEDIA FISICA 1-5","Minutos corriendo sin pausa","Planchas-1 min","Donde realiza su entrenamiento","Formacion Brindada","Lugar de mayor riesgo","Emergencia que no se siente preparado")
DB_Firefighters$`Lesiones sufridas`[DB_Firefighters$`Lesiones sufridas` == "3 o más"]<- 3
DB_Firefighters[DB_Firefighters == "-"]<- NA
DB_Firefighters$Compañia<-as.numeric(DB_Firefighters$Compañia)
DB_Firefighters$Edad<-as.numeric(DB_Firefighters$Edad)
DB_Firefighters$`Años de trabajo`<-as.numeric(DB_Firefighters$`Años de trabajo`)
DB_Firefighters$`Horas voluntarias`<-as.numeric(DB_Firefighters$`Horas voluntarias`)
DB_Firefighters$`Lesiones sufridas`<-as.numeric(DB_Firefighters$`Lesiones sufridas`)
DB_Firefighters$`MEDIA FISICA 1-5`<-as.numeric(DB_Firefighters$`MEDIA FISICA 1-5`)
DB_Firefighters$`Formacion Brindada`<-as.numeric(DB_Firefighters$`Formacion Brindada`)
DB_Firefighters$`Minutos corriendo sin pausa`<-as.numeric(DB_Firefighters$`Minutos corriendo sin pausa`)
DB_Firefighters$Edad[DB_Firefighters$Edad>99]<- NA
DB_Firefighters$`Planchas-1 min`<-as.numeric(DB_Firefighters$`Planchas-1 min`)
DB_Firefighters<-na.omit(DB_Firefighters)
library(readr)
library(dplyr)
if(!require(wordcloud)){install.packages('wordcloud')}
if(!require(tm)){install.packages('tm')}
library("wordcloud")
library("tm")
#DB_Firefighters <- read_csv("DATA-BOMBEROS.csv")
hist(DB_Firefighters$`Planchas-1 min`, breaks=15, main = "Histograma de la variable Planchas en 1 min", xlab= "Planchas 1-min",ylab= "Frecuencia", col = "aquamarine") #Histograma
grid(nx=NA,ny=NULL,lty= 2, col = "gray") #Lineas en el histograma
y<-0.025
d<-0.025
points(c(mean(DB_Firefighters$`Planchas-1 min`,na.rm=T)),c(y-2*d),pch=17, col= "red") #Media en el histograma
points(c(median(DB_Firefighters$`Planchas-1 min`,na.rm=T)),c(y-2*d),pch=17, col= "blue") #Mediana en el histograma
mean(DB_Firefighters$`Planchas-1 min`,na.rm = TRUE)
IQR(DB_Firefighters$`Planchas-1 min`,na.rm = TRUE)
sd(DB_Firefighters$`Planchas-1 min`,na.rm = TRUE)
boxplot(DB_Firefighters$`Planchas-1 min`,horizontal = T, main = "Gráfica de cajas de la varible Planchas 1-min", xlab= "PLanchas 1(Minuto)", col = "aquamarine")
summary(DB_Firefighters$`Planchas-1 min`)
# VALORES Y TABLE
Compañia=DB_Firefighters$Compañia
distrito <- DB_Firefighters$Distrito
mayor_riesgo <- DB_Firefighters$`Lugar de mayor riesgo`
edad <- DB_Firefighters$Edad
horas = DB_Firefighters$`Horas voluntarias`
rango = DB_Firefighters$Rango
preparado = DB_Firefighters$`MEDIA FISICA 1-5` # Variable categórica ordinal
minutos_corriendo <- DB_Firefighters$`Minutos corriendo sin pausa`
planchas_minuto <- DB_Firefighters$`Planchas-1 min`
lugar_ejercita <- DB_Firefighters$`Donde realiza su entrenamiento`
emergencias_no_preparado <- DB_Firefighters$`Emergencia que no se siente preparado`
table_Distrito <- table(distrito)
barplot(table(DB_Firefighters$Compañia),
main="Grafico de la variable Compañia",
col = c("#cc9999", "#9999cc", "#9c9c9c"),las=2)
summary(DB_Firefighters$`Donde realiza su entrenamiento`)
colEntrenamiento <- table(DB_Firefighters$`Donde realiza su entrenamiento`)
colEntrenamiento
barplot(table(DB_Firefighters$`Donde realiza su entrenamiento`),
main = "Grafico de la variable donde entrena",
col = 7:11, las=2)
legend(x=50,
rownames(colEntrenamiento),
cex = 0.7,
fill = 7:11
)
colEntrenamiento <- table(DB_Firefighters$`Donde realiza su entrenamiento`)
colEntrenamiento_filtrado <- colEntrenamiento[colEntrenamiento != 1]
colEntrenamiento_filtrado
barplot(colEntrenamiento_filtrado,
main = "Grafico de la variable donde entrena",
col = 5:7, las=2)
legend(x="topright",
rownames(colEntrenamiento_filtrado),
cex = 0.8,
fill = 5:7
)
mosaicplot(~DB_Firefighters$`Lesiones sufridas` + rango, # introducimos las variables que queremos cruzar
main= "Mosaico de las variables Lesiones sufridas y Rango",
xlab= "Lesiones sufridas",
ylab= "Rango",
data = mtcars,
color = 2:7, # vector de colores, si se pone color = T, queda en banco y negro.
las = 1) # estilo de los ejes
Lesiones_actualisadas <- DB_Firefighters$`Lesiones sufridas`
total_accidentes = aggregate(Lesiones_actualisadas ~ Distrito, data = DB_Firefighters, sum)
color=c("purple","red","aquamarine","gray","yellow")
barplot(total_accidentes$Lesiones_actualisadas, names.arg = total_accidentes$Distrito,
xlab = " ", ylab = "Número de Accidentes", col = color, las = 2)
# La escala del 1-5 que tan preparados se sienten vs distritos
mosaicplot(table(distrito, preparado),
color = 2:7,
main="Mosaicplot escala de preparación por distrito")
# Minutos corriendo y planchas contra edad y generó
names(DB_Firefighters)
genero <- DB_Firefighters$Genero
library(ggplot2)
# Minutos corriendo y planchas contra edad y generó
names(DB_Firefighters)
genero <- DB_Firefighters$Genero
# Crear un data frame con las variables de interés
data <- data.frame(minutos_corriendo, planchas_minuto, edad, genero)
# Gráfico de dispersión
ggplot(data, aes(x = edad, y = minutos_corriendo, color = genero)) +
geom_point() +
labs(x = "Edad", y = "Minutos Corriendo", color = "Género") +
ggtitle("Relación entre Edad, Minutos Corriendo y Género")
library(readr)
library(dplyr)
if(!require(wordcloud)){install.packages('wordcloud')}
if(!require(tm)){install.packages('tm')}
library("wordcloud")
library("tm")
if(!require(ggplot)){install.packages('ggplot')}
#DB_Firefighters <- read_csv("DATA-BOMBEROS.csv")
# Minutos corriendo y planchas contra edad y generó
names(DB_Firefighters)
genero <- DB_Firefighters$Genero
library(ggplot2)
# Minutos corriendo y planchas contra edad y generó
names(DB_Firefighters)
genero <- DB_Firefighters$Genero
# Crear un data frame con las variables de interés
data <- data.frame(minutos_corriendo, planchas_minuto, edad, genero)
# Gráfico de dispersión
ggplot(data, aes(x = edad, y = minutos_corriendo, color = genero)) +
geom_point() +
labs(x = "Edad", y = "Minutos Corriendo", color = "Género") +
ggtitle("Relación entre Edad, Minutos Corriendo y Género")
library(readr)
library(dplyr)
if(!require(wordcloud)){install.packages('wordcloud')}
if(!require(tm)){install.packages('tm')}
library("wordcloud")
library("tm")
if(!require(ggplot2)){install.packages('ggplot2')}
#DB_Firefighters <- read_csv("DATA-BOMBEROS.csv")
# Minutos corriendo y planchas contra edad y generó
names(DB_Firefighters)
genero <- DB_Firefighters$Genero
# Crear un data frame con las variables de interés
data <- data.frame(minutos_corriendo, planchas_minuto, edad, genero)
# Gráfico de dispersión
ggplot(data, aes(x = edad, y = minutos_corriendo, color = genero)) +
geom_point() +
labs(x = "Edad", y = "Minutos Corriendo", color = "Género") +
ggtitle("Relación entre Edad, Minutos Corriendo y Género")
library(readr)
library(dplyr)
if(!require(wordcloud)){install.packages('wordcloud')}
if(!require(tm)){install.packages('tm')}
library("wordcloud")
library("tm")
if(!require(ggplot2)){install.packages('ggplot2')}
library('ggplot2')
#DB_Firefighters <- read_csv("DATA-BOMBEROS.csv")
# Minutos corriendo y planchas contra edad y generó
names(DB_Firefighters)
genero <- DB_Firefighters$Genero
# Crear un data frame con las variables de interés
data <- data.frame(minutos_corriendo, planchas_minuto, edad, genero)
# Gráfico de dispersión
ggplot(data, aes(x = edad, y = minutos_corriendo, color = genero)) +
geom_point() +
labs(x = "Edad", y = "Minutos Corriendo", color = "Género") +
ggtitle("Relación entre Edad, Minutos Corriendo y Género")
# Gráfico de barras
ggplot(data, aes(x = edad, y = planchas_minuto, fill = genero)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Edad", y = "Planchas", fill = "Género") +
ggtitle("Comparación de Planchas por Edad y Género")
# Distritos vs emergencias que no se sienten tan preparados
mosaicplot(table(emergencias_no_preparado, distrito), las = 1, color = 1:13,
main="Tabla de emergencias que no se sientes preparados por distrito")
# Distritos y emergencias que tienen mayor riesgo para ellos
mosaicplot(table(mayor_riesgo, distrito),
las=3,
main = "Mosaico de emergencias de mayor riesgo por distrito",
color=1:13)
# Comparar entre horas de voluntariado y edad y rango (puede ser el mosaico)
# MODIFICAR HORAS A RANGO DE HORAS
mosaicplot(table(rango, horas),
color=1:30,
main="Mosaicplot de horas de voluntariado por rango")
