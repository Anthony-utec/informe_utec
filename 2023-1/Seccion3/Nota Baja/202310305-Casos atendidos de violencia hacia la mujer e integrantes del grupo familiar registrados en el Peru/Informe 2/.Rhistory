library(ggplot2)
datos <- data.frame(
ubicacion = DF$DEPARTAMENTO,
cantidad_casos = DF$`CASOS ATENDIDOS-TOTAL--`
)
# Crear el gráfico de barras horizontales sin números en las barras
ggplot(datos, aes(x = cantidad_casos, y = ubicacion)) +
geom_bar(stat = "identity", fill = "blue") +
ylab("Ubicación") +
xlab("Cantidad de casos") +
ggtitle("Grafico 10 - Cantidad de casos atendidos por ubicación") +
theme(axis.text.y = element_text(hjust = 0),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
library(dplyr)
# Agrupar los datos por departamento y sumar la cantidad de casos
casos_por_departamento <- datos %>%
group_by(ubicacion) %>%
summarise(total_casos = sum(cantidad_casos))
# Imprimir los resultados
print(casos_por_departamento)
# Filtrar casos por departamento, excluyendo Lima Metropolitana y Lima Provincia
casos_por_departamento_filtrado <- casos_por_departamento
# Obtener el departamento con la mayor cantidad de casos
departamento_max_casos <- casos_por_departamento_filtrado %>%
filter(total_casos == max(total_casos)) %>%
pull(ubicacion)
# Obtener el departamento con la menor cantidad de casos
departamento_min_casos <- casos_por_departamento_filtrado %>%
filter(total_casos == min(total_casos)) %>%
pull(ubicacion)
# Imprimir los resultados
print(paste("Departamento con la mayor cantidad de casos:", departamento_max_casos))
print(paste("Departamento con la menor cantidad de casos:", departamento_min_casos))
# Filtrar casos por departamento, excluyendo Lima Metropolitana y Lima Provincia
casos_por_departamento_filtrado <- casos_por_departamento
# Obtener el departamento con la mayor cantidad de casos
departamento_max_casos <- casos_por_departamento_filtrado %>%
filter(total_casos == max(total_casos))
# Obtener el departamento con la menor cantidad de casos
departamento_min_casos <- casos_por_departamento_filtrado %>%
filter(total_casos == min(total_casos))
# Imprimir las cantidades de casos
print(paste("Cantidad de casos para el departamento con la mayor cantidad:", departamento_max_casos$total_casos))
print(paste("Cantidad de casos para el departamento con la menor cantidad:", departamento_min_casos$total_casos))
# Agregar columna de grupo manualmente
datos$grupo <- ifelse(datos$ubicacion %in% c("TUMBES","PIURA","LAMBAYEQUE","LA LIBERTAD","ANCASH","CALLAO","LIMA PROVINCIA","LIMA METROPOLITANA","AREQUIPA","MOQUEGUA","TACNA","LIMA","ICA"), "COSTA",
ifelse(datos$ubicacion %in% c("APURIMAC","AYACUCHO","CAJAMARCA","CUSCO","HUANUCO","HUANCAVELICA","JUNIN","PASCO","PUNO"), "SIERRA",
ifelse(datos$ubicacion %in% c("LORETO" ,"AMAZONAS","SAN MARTIN","UCAYALI","MADRE DE DIOS"), "SELVA", "Otros")))
# Crear el gráfico de barras con grupos personalizados
ggplot(datos, aes(x = grupo, y = cantidad_casos, fill = ubicacion)) +
geom_col(position = "dodge") +
xlab("Región") +
ylab("Cantidad de casos") +
ggtitle("Grafico 11 - Cantidad de casos atendidos region")
# Calcular la cantidad de casos por grupo
cantidad_por_grupo <- aggregate(cantidad_casos ~ grupo, datos, sum)
# Mostrar la cantidad de casos por grupo
print(cantidad_por_grupo)
# Cargar las librerías ggplot2 y gridExtra
library(ggplot2)
library(gridExtra)
# Crear un nuevo data frame con los datos de violencia
datos_violencia <- data.frame(
Año = DF$AÑO,
ViolenciaHombre = DF$`CASOS ATENDIDOS - HOMBRES - TOTAL`,
ViolenciaMujeres = DF$`CASOS ATENDIDOS - MUJERES - TOTAL`
)
# Gráfico de barras para la violencia hacia hombres
grafico_hombres <- ggplot(datos_violencia, aes(x = Año, y = ViolenciaHombre)) +
geom_bar(stat = "identity", fill = "sky blue") +
labs(title = "Violencia hacia el hombre", x = "Año", y = "Casos atendidos") +
scale_y_continuous(labels = scales::comma)
# Gráfico de barras para la violencia hacia mujeres
grafico_mujeres <- ggplot(datos_violencia, aes(x = Año, y = ViolenciaMujeres)) +
geom_bar(stat = "identity", fill = "pink") +
labs(title = "Grafico 12 - Violencia hacia la mujer", x = "Año", y = "Casos atendidos") +
scale_y_continuous(labels = scales::comma)
# Unir los gráficos en uno solo
grafico_combinado <- grid.arrange(grafico_hombres, grafico_mujeres, ncol = 1)
# Mostrar el gráfico combinado
print(grafico_combinado)
# Filtrar los datos para el año 2020 y la variable de violencia hacia mujeres
casos_2020_mujeres <- datos_violencia$ViolenciaMujeres[datos_violencia$Año == 2020]
# Calcular la suma de casos registrados en el año 2020 para las mujeres
total_casos_2020_mujeres <- sum(casos_2020_mujeres, na.rm = TRUE)
# Filtrar los datos para el año 2021 y la variable de violencia hacia mujeres
casos_2021_mujeres <- datos_violencia$ViolenciaMujeres[datos_violencia$Año == 2021]
# Calcular la suma de casos registrados en el año 2021 para las mujeres
total_casos_2021_mujeres <- sum(casos_2021_mujeres, na.rm = TRUE)
# Filtrar los datos para el año 2022 y la variable de violencia hacia mujeres
casos_2022_mujeres <- datos_violencia$ViolenciaMujeres[datos_violencia$Año == 2022]
# Calcular la suma de casos registrados en el año 2022 para las mujeres
total_casos_2022_mujeres <- sum(casos_2022_mujeres, na.rm = TRUE)
# Imprimir los resultados
cat("Para el año 2020 para la mujer se registraron:", total_casos_2020_mujeres, "\n")
cat("Para el año 2021 para la mujer se registraron:", total_casos_2021_mujeres, "\n")
cat("Para el año 2022 para la mujer se registraron:", total_casos_2022_mujeres)
# Filtrar los datos para el año 2020 y la variable de violencia hacia hombres
casos_2020_hombres <- datos_violencia$ViolenciaHombre[datos_violencia$Año == 2020]
# Calcular la suma de casos registrados en el año 2020 para los hombres
total_casos_2020_hombres <- sum(casos_2020_hombres, na.rm = TRUE)
# Filtrar los datos para el año 2022 y la variable de violencia hacia hombres
casos_2022_hombres <- datos_violencia$ViolenciaHombre[datos_violencia$Año == 2022]
# Calcular la suma de casos registrados en el año 2022 para los hombres
total_casos_2022_hombres <- sum(casos_2022_hombres, na.rm = TRUE)
# Filtrar los datos para el año 2021 y la variable de violencia hacia hombres
casos_2021_hombres <- datos_violencia$ViolenciaHombre[datos_violencia$Año == 2021]
# Calcular la suma de casos registrados en el año 2021 para los hombres
total_casos_2021_hombres <- sum(casos_2021_hombres, na.rm = TRUE)
# Imprimir los resultados
cat("Para el año 2020 para el hombre se registraron:", total_casos_2020_hombres, "\n")
cat("Para el año 2021 para el hombre se registraron:", total_casos_2021_hombres, "\n")
cat("Para el año 2022 para el hombre se registraron:", total_casos_2022_hombres)
library(ggplot2)
# Crear un nuevo data frame con las variables de género y número de casos atendidos
datos <- data.frame(
Género = c("Hombre", "Mujer"),
CasosAtendidos = c(
sum(DF$`CASOS ATENDIDOS - HOMBRES - TOTAL`, na.rm = TRUE),
sum(DF$`CASOS ATENDIDOS - MUJERES - TOTAL`, na.rm = TRUE)
)
)
# Graficar los datos como un gráfico de barras
ggplot(datos, aes(x = Género, y = CasosAtendidos, fill = Género)) +
geom_bar(stat = "identity") +
labs(title = "Grafico 13 - Casos atendidos por género",
x = "Género",
y = "Casos atendidos") +
theme_minimal()
Casos_Mujeres <- DF$`CASOS ATENDIDOS - MUJERES - TOTAL`
# Calcular la suma de casos atendidos mujeres
total_Casos_Mujeres <- sum(Casos_Mujeres, na.rm = TRUE)
# Imprimir el resultado
print(total_Casos_Mujeres )
##[1] 360865
Casos_Hombres <- DF$`CASOS ATENDIDOS - HOMBRES - TOTAL`
# Calcular la suma de casos atendidos hombres
total_Casos_Hombres <- sum(Casos_Hombres, na.rm = TRUE)
# Imprimir el resultado
print(total_Casos_Hombres )
##[1] 58809
# Crear un nuevo dataframe con los datos de violencia hacia la mujer y otros integrantes del grupo familiar
datos_violencia <- data.frame(
Año = DF$AÑO,
ViolenciaHombres = DF$`CASOS ATENDIDOS - HOMBRES - TOTAL`,
ViolenciaMujeres = DF$`CASOS ATENDIDOS - MUJERES - TOTAL`
)
# Calcular la suma de reportes de violencia hacia la mujer y otros integrantes del grupo familiar por año
datos_resumen <- aggregate(cbind(ViolenciaHombres, ViolenciaMujeres) ~ Año, data = datos_violencia, FUN = sum)
# Crear el gráfico de líneas con años específicos en el eje x
ggplot(datos_resumen, aes(x = Año)) +
geom_line(aes(y = ViolenciaHombres, color = "Violencia hacia el hombre")) +
geom_line(aes(y = ViolenciaMujeres, color = "Violencia hacia la mujer")) +
labs(x = "Año", y = "Cantidad de reportes", title = "Grafico 14 - Tendencia de violencia hacia la mujer y el hombre") +
scale_color_manual(values = c("Violencia hacia la mujer" = "red",  "Violencia hacia el hombre" = "blue")) +
scale_x_continuous(breaks = c(2020, 2021, 2022), labels = c(2020, 2021, 2022)) +
scale_y_continuous(labels = scales::comma) +
guides(color = guide_legend(title = "Color"))
# Crear un nuevo dataframe con los datos de violencia hacia la mujer y hacia el hombre
datos_violencia <- data.frame(
Año = DF$AÑO,
ViolenciaHombres = DF$`CASOS ATENDIDOS - HOMBRES - TOTAL`,
ViolenciaMujeres = DF$`CASOS ATENDIDOS - MUJERES - TOTAL`
)
# Calcular la suma de reportes de violencia hacia la mujer y hacia el hombre por año
datos_resumen <- aggregate(cbind(ViolenciaHombres, ViolenciaMujeres) ~ Año, data = datos_violencia, FUN = sum)
# Imprimir los datos resumidos
print(datos_resumen)
# Crear un data frame de ejemplo con los datos de violencia por edad, género y año
datos_violencia <- data.frame(
año = DF$AÑO,
cero_cinco_hombres = DF$`CASOS ATENDIDOS - 0_5 - HOMBRES`,
cero_cinco_mujeres = DF$`CASOS ATENDIDOS - 0_5 - MUJERES`,
seis_once_hombres = DF$`CASOS ATENDIDOS - 6_11 - HOMBRES`,
seis_once_mujeres = DF$`CASOS ATENDIDOS - 6_11 - MUJERES`,
doce_diecisiete_hombres = DF$`CASOS ATENDIDOS - 12_17 - HOMBRES`,
doce_diecisiete_mujeres = DF$`CASOS ATENDIDOS - 12_17 - MUJERES`,
dieciocho_veintinueve_hombres = DF$`CASOS ATENDIDOS - 18_29 - HOMBRES`,
dieciocho_veintinueve_mujeres = DF$`CASOS ATENDIDOS - 18_29 - MUJERES`,
treinta_cicuentanueve_hombres = DF$`CASOS ATENDIDOS - 30_59 - HOMBRES`,
treinta_cicuentanueve_mujeres = DF$`CASOS ATENDIDOS - 30_59 - MUJERES`,
sesenta_mas_hombres = DF$`CASOS ATENDIDOS - 60_MAS - HOMBRES`,
sesenta_mas_mujeres = DF$`CASOS ATENDIDOS - 60_MAS - MUJERES`
)
# Convertir los datos a formato largo manualmente y establecer el orden de los rangos de edad
datos_violencia_largo <- rbind(
data.frame(año = datos_violencia$año, grupo_edad = "0-5", cantidad = datos_violencia$cero_cinco_hombres, genero = "hombres"),
data.frame(año = datos_violencia$año, grupo_edad = "0-5", cantidad = datos_violencia$cero_cinco_mujeres, genero = "mujeres"),
data.frame(año = datos_violencia$año, grupo_edad = "6-11", cantidad = datos_violencia$seis_once_hombres, genero = "hombres"),
data.frame(año = datos_violencia$año, grupo_edad = "6-11", cantidad = datos_violencia$seis_once_mujeres, genero = "mujeres"),
data.frame(año = datos_violencia$año, grupo_edad = "12-17", cantidad = datos_violencia$doce_diecisiete_hombres, genero = "hombres"),
data.frame(año = datos_violencia$año, grupo_edad = "12-17", cantidad = datos_violencia$doce_diecisiete_mujeres, genero = "mujeres"),
data.frame(año = datos_violencia$año, grupo_edad = "18-29", cantidad = datos_violencia$dieciocho_veintinueve_hombres, genero = "hombres"),
data.frame(año = datos_violencia$año, grupo_edad = "18-29", cantidad = datos_violencia$dieciocho_veintinueve_mujeres, genero = "mujeres"),
data.frame(año = datos_violencia$año, grupo_edad = "30-59", cantidad = datos_violencia$treinta_cicuentanueve_hombres, genero = "hombres"),
data.frame(año = datos_violencia$año, grupo_edad = "30-59", cantidad = datos_violencia$treinta_cicuentanueve_mujeres, genero = "mujeres"),
data.frame(año = datos_violencia$año, grupo_edad = "60-MAS", cantidad = datos_violencia$sesenta_mas_hombres, genero = "hombres"),
data.frame(año = datos_violencia$año, grupo_edad = "60-MAS", cantidad = datos_violencia$sesenta_mas_mujeres, genero = "mujeres")
)
datos_violencia_largo$genero <- factor(datos_violencia_largo$genero, levels = c("mujeres", "hombres"))
# Establecer el orden de los niveles de la variable 'grupo_edad'
datos_violencia_largo$grupo_edad <- factor(datos_violencia_largo$grupo_edad, levels = c("0-5", "6-11", "12-17", "18-29", "30-59", "60-MAS"))
# Crear el gráfico de barras apiladas
ggplot(datos_violencia_largo, aes(x = factor(año), y = cantidad, fill = genero)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(. ~ grupo_edad) +
xlab("Año") +
ylab("Cantidad de violencia") +
ggtitle("Grafico 15 - Cantidad de violencia por grupo de edad y año") +
scale_fill_manual(values = c("hombres" = "blue", "mujeres" = "pink")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Calcular la suma de casos por género, rango de edad y año
suma_casos <- aggregate(cantidad ~ genero + grupo_edad + año, data = datos_violencia_largo, sum)
# Imprimir los resultados
print(suma_casos)
# Crear una tabla vacía de 4 filas y 5 columnas
tabla <- matrix(nrow = 3, ncol = 4)
# Ingresar los valores manualmente
tabla[1, ] <- c(16569, 22964, 19276, 58809)
tabla[2, ] <- c(97394, 140191, 123280, 360865)
tabla[3, ] <- c(113963, 163155, 142556, 419674)
# Convertir la matriz en un objeto de tipo "data.frame"
df <- as.data.frame(tabla)
# Nombrar las filas y columnas de la tabla
row.names(df) <- c("Hombre", "Mujer", "Total")
colnames(df) <- c("Año-2020", "Año-2021", "Año-2022", "Total")
# Imprimir la tabla en la consola
df
CASOS20<-filter(DF,DF$AÑO==2020)
sumC20<-sum(CASOS20$`CASOS ATENDIDOS-TOTAL--`)
CASOS21<-filter(DF,DF$AÑO==2021)
sumC21<-sum(CASOS21$`CASOS ATENDIDOS-TOTAL--`)
CASOS22<-filter(DF,DF$AÑO==2022)
sumC22<-sum(CASOS22$`CASOS ATENDIDOS-TOTAL--`)
evento_A <- sumC21
total_eventos <- sum(DF$`CASOS ATENDIDOS-TOTAL--`)
P_evento_A <- evento_A / total_eventos
P_evento_A
evento_B <- sum(DF$`CASOS ATENDIDOS - MUJERES - TOTAL`)
total_eventos <- sum(DF$`CASOS ATENDIDOS-TOTAL--`)
P_evento_B <- evento_B / total_eventos
P_evento_B
evento_A_interseccion_B <- sum(filter(DF,DF$AÑO == 2021)$`CASOS ATENDIDOS - MUJERES - TOTAL`)
evento_A_interseccion_B
total_eventos <- sumC20+sumC21+sumC22
P_evento_A_interseccion_B <- evento_A_interseccion_B/total_eventos
P_evento_A_interseccion_B
P_evento_A_interseccion_B
P_evento_A * P_evento_B
error<-abs(P_evento_A_interseccion_B-(P_evento_A*P_evento_B))
error
# Crear una tabla vacía de 4 filas y 5 columnas
tabla <- matrix(nrow = 3, ncol = 3)
# Ingresar los valores manualmente
tabla[1, ] <- c(35845, 22964, 58809)
tabla[2, ] <- c(220674, 140191, 360865)
tabla[3, ] <- c(256519, 163155, 419674)
# Convertir la matriz en un objeto de tipo "data.frame"
df <- as.data.frame(tabla)
# Nombrar las filas y columnas de la tabla
row.names(df) <- c("Hombre", "Mujer", "Total")
colnames(df) <- c(" 2020 y 2022 ","2021", "Total")
# Imprimir la tabla en la consola
df
P_evento_B
P_A_B <- abs(P_evento_A_interseccion_B/(P_evento_B))
P_A_B
P_B_A <- abs(P_evento_A_interseccion_B/(P_evento_A))
P_B_A
P__B_A <- ((0.388486*0.8598698)/0.388766)
P__B_A
P_A = ((0.388486*0.8598698)/ 0.8592504)
P_A
evento__A <-sum(DF$`CASOS ATENDIDOS - MUJERES - TOTAL`)
evento__A
total__eventos <- sum(DF$`CASOS ATENDIDOS-TOTAL--`)
P__evento_A <- evento__A / total__eventos
P__evento_A
evento__B <-sum(DF$`CASOS ATENDIDOS - 30_59 - TOTAL`)
evento__B
total__eventos <- sum(DF$`CASOS ATENDIDOS-TOTAL--`)
P__evento_B <- evento__B / total__eventos
P__evento_B
evento__A_interseccion_B <- sum(DF$`CASOS ATENDIDOS - 30_59 - MUJERES`)
total__eventos <- sum(DF$`CASOS ATENDIDOS-TOTAL--`)
P__evento_A_interseccion_B <- evento__A_interseccion_B/total__eventos
P__evento_A_interseccion_B
P__evento_A_interseccion_B
P__evento_A * P__evento_B
error<-abs(P__evento_A_interseccion_B-(P__evento_A*P__evento_B))
error
P__evento_B
P__A_B <- abs(P__evento_A_interseccion_B/(P__evento_B))
P__A_B
P__B_A <- abs(P__evento_A_interseccion_B/(P__evento_A))
P__B_A
P__B_A <- ((0.9573073*0.377574)/0.8598698)
P__B_A
P__A = ((0.9573073*0.377574)/0.4203594)
P__A
total_cas<-sum(DF$`CASOS ATENDIDOS-TOTAL--`)
espacio_mues1<-sum(DF$`CASOS ATENDIDOS - 0_5 - TOTAL`,na.rm = TRUE)
espacio_mues2<-sum(DF$`CASOS ATENDIDOS - 6_11 - TOTAL`,na.rm = TRUE)
espacio_mues3<-sum(DF$`CASOS ATENDIDOS - 12_17 - TOTAL`,na.rm = TRUE)
espacio_mues4<-sum(DF$`CASOS ATENDIDOS - 18_29 - TOTAL`,na.rm = TRUE)
espacio_mues5<-sum(DF$`CASOS ATENDIDOS - 30_59 - TOTAL`,na.rm = TRUE)
espacio_mues6<-sum(DF$`CASOS ATENDIDOS - 60_MAS - TOTAL`,na.rm = TRUE)
P1<-(espacio_mues1/total_cas)
P2<-(espacio_mues2/total_cas)
P3<-(espacio_mues3/total_cas)
P4<-(espacio_mues4/total_cas)
P5<-(espacio_mues5/total_cas)
P6<-(espacio_mues6/total_cas)
P1
P2
P3
P4
P5
P6
P1+P2+P3+P4+P5+P6
# Crear los datos de ejemplo
edades <- c("0-5", "6-11", "12-17", "18-29", "30-59", "60+")
porcentaje <- c(P1*100, P2*100, P3*100, P4*100, P5*100, P6*100)
porcentajes <- round(porcentaje, 2)
# Crear un dataframe con los datos
datos <- data.frame(edades, porcentajes)
# Crear el gráfico de barras
ggplot(datos, aes(x = edades, y = porcentajes, fill = edades)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(porcentajes, "%")), vjust = -0.5) +  # Agregar etiquetas de porcentaje
labs(x = "Rango de Edades", y = "Porcentaje", title = "Probabilidad de casos de violencia por rango de edad") +  # Agregar título
scale_fill_discrete(guide = FALSE) +
theme_minimal()
esp_1<-sum(DF$`CASOS ATENDIDOS - VIOLENCIA PSICOLOGICA`,na.rm = TRUE)
esp_2<-sum(DF$`CASOS ATENDIDOS - VIOLENCIA FISICA`,na.rm = TRUE)
esp_3<-sum(DF$`CASOS ATENDIDOS - VIOLENCIA SEXUAL`,na.rm = TRUE)
v1<-(esp_1/total_cas)
v2<-(esp_2/total_cas)
v3<-(esp_3/total_cas)
v1
v2
v3
v1+v2+v3
porcentaje <- c(v1*100, v2*100, v3*100)
porcentajes <- round(porcentaje, 2)
etiquetas <- c("Violencia psicológica", "Violencia física", "Violencia sexual")
# Colores de las barras
colores <- c("steelblue", "darkorange", "forestgreen")
# Crear gráfico de barras
barplot(porcentajes, ylim = c(0, 100), col = colores, main = "Probabilidad de casos de violencia por tipos de violencia",
xlab = "Tipo de violencia", ylab = "Probabilidad")
# Agregar etiquetas de porcentaje en las barras
text(x = 1:length(porcentajes), y = porcentajes, labels = paste0(porcentajes, "%"), pos = 3, col = "white")
# Agregar etiquetas en el eje x
axis(side = 1, at = 1:length(etiquetas), labels = etiquetas)
text(x = 1:length(porcentajes), y = porcentajes + 2, labels = paste0(porcentajes, "%"), pos = 3, col = "black", cex = 0.8)
# Supongamos que tienes un dataframe llamado 'DF' que contiene tus variables
# Calcula el índice de violencia psicológica
DF$Indice_Violencia_Psicologica <- DF$`CASOS ATENDIDOS - VIOLENCIA PSICOLOGICA` / DF$`CASOS ATENDIDOS-TOTAL--`
# Calcula el índice de violencia física
DF$Indice_Violencia_Fisica <- DF$`CASOS ATENDIDOS - VIOLENCIA FISICA` / DF$`CASOS ATENDIDOS-TOTAL--`
# Calcula el índice de violencia sexual
DF$Indice_Violencia_Sexual <- DF$`CASOS ATENDIDOS - VIOLENCIA SEXUAL` / DF$`CASOS ATENDIDOS-TOTAL--`
DF
DF$Indice_Tipo_Violencia<-DF$Indice_Violencia_Psicologica+DF$Indice_Violencia_Fisica+DF$Indice_Violencia_Sexual
DF$Indice_Tipo_Violencia <- ifelse(is.na(DF$Indice_Tipo_Violencia), 1, DF$Indice_Tipo_Violencia)
DF$Indice_Tipo_Violencia
Psicologica <- DF$Indice_Violencia_Psicologica
Fisica <-DF$Indice_Violencia_Fisica
Sexual <- DF$Indice_Violencia_Sexual
# Paso 2: Importar bibliotecas (no es necesario instalarlas, vienen incluidas en RStudio)
library(ggplot2)
# Paso 3: Crear el data frame con las variables
df <- data.frame(Psicologica, Fisica, Sexual)
# Paso 4: Graficar las tres variables continuas en el mismo plano con colores
plot <- ggplot(df, aes(x = Psicologica, color = "Psicologica")) +
geom_density() +
labs(x = "Indice", y = "Densidad", title = "Gráficas de Variables Continuas") +
geom_density(aes(x = Fisica, color = "Fisica")) +
geom_density(aes(x = Sexual, color = "Sexual")) +
facet_wrap(~., scales = "free") +
scale_color_manual(values = c("Psicologica" = "black", "Fisica" = "red", "Sexual" = "blue"))
# Paso 5: Mostrar el gráfico
print(plot)
I_Psicologico <- DF$Indice_Violencia_Psicologica
I_Fisica <- DF$Indice_Violencia_Fisica
I_Sexual <- DF$Indice_Violencia_Sexual
matriz <- cbind(I_Psicologico, I_Fisica, I_Sexual)
media <- apply(matriz, 2, mean, na.rm = TRUE)
mediana <- apply(matriz, 2, median, na.rm = TRUE)
resultados <- data.frame(media, mediana)
print(resultados)
matriz <- cbind(I_Psicologico, I_Fisica, I_Sexual)
varianza <- apply(matriz, 2, var, na.rm = TRUE)
desviacion <- apply(matriz, 2, sd, na.rm = TRUE)
resultadoss <- data.frame(varianza, desviacion*desviacion)
print(resultadoss)
indice_violencia_sexual <- DF$Indice_Violencia_Sexual
# Calcular la probabilidad de que el índice sea mayor o igual a 0.3
probabilidad <- sum(indice_violencia_sexual < 0.5, na.rm = TRUE) / length(indice_violencia_sexual)
# Imprimir la probabilidad
print(probabilidad)
# Supongamos que tienes un dataframe llamado 'DF' que contiene tus variables
# Calcula el índice de violencia psicológica
DF$Indice_Edad_0_5 <- DF$`CASOS ATENDIDOS - 0_5 - TOTAL` / DF$`CASOS ATENDIDOS-TOTAL--`
DF$Indice_Edad_6_11 <- DF$`CASOS ATENDIDOS - 6_11 - TOTAL` / DF$`CASOS ATENDIDOS-TOTAL--`
DF$Indice_Edad_12_17 <- DF$`CASOS ATENDIDOS - 12_17 - TOTAL` / DF$`CASOS ATENDIDOS-TOTAL--`
DF$Indice_Edad_18_29 <- DF$`CASOS ATENDIDOS - 18_29 - TOTAL` / DF$`CASOS ATENDIDOS-TOTAL--`
DF$Indice_Edad_30_59 <- DF$`CASOS ATENDIDOS - 30_59 - TOTAL` / DF$`CASOS ATENDIDOS-TOTAL--`
DF$Indice_Edad_60_mas <- DF$`CASOS ATENDIDOS - 60_MAS - TOTAL` / DF$`CASOS ATENDIDOS-TOTAL--`
DF$Indice_Violencia_edad<-DF$Indice_Edad_60_mas+DF$Indice_Edad_30_59+DF$Indice_Edad_18_29+DF$Indice_Edad_12_17+DF$Indice_Edad_6_11+DF$Indice_Edad_0_5
DF$Indice_Violencia_edad <- ifelse(is.na(DF$Indice_Violencia_edad), 1, DF$Indice_Violencia_edad)
DF$Indice_Violencia_edad
Edad_0_5<-DF$Indice_Edad_0_5
Edad_6_11<-DF$Indice_Edad_6_11
Edad_12_17<-DF$Indice_Edad_12_17
Edad_18_29<-DF$Indice_Edad_18_29
Edad_30_59<-DF$Indice_Edad_30_59
Edad_60_mas<-DF$Indice_Edad_60_mas
# Paso 2: Importar bibliotecas (no es necesario instalarlas, vienen incluidas en RStudio)
library(ggplot2)
# Paso 3: Crear el data frame con las variables
df <- data.frame(Edad_0_5,Edad_6_11,Edad_12_17,Edad_18_29,Edad_30_59,Edad_60_mas)
# Paso 4: Graficar las tres variables continuas en el mismo plano con colores
plot <- ggplot(df, aes(x = Edad_0_5, color = "Edad_0_5")) +
geom_density() +
labs(x = "Indice", y = "Densidad", title = "Gráficas de Variables Continuas") +
geom_density(aes(x = Edad_6_11, color = "Edad_6_11")) +
geom_density(aes(x = Edad_12_17, color = "Edad_12_17")) +
geom_density(aes(x = Edad_18_29, color = "Edad_18_29")) +
geom_density(aes(x = Edad_30_59, color = "Edad_30_59")) +
geom_density(aes(x = Edad_60_mas, color = "Edad_60_mas")) +
facet_wrap(~., scales = "free") +
scale_color_manual(values = c("Edad_0_5" = "black", "Edad_6_11" = "red", "Edad_12_17" = "blue", "Edad_18_29" = "orange", "Edad_30_59" = "purple", "Edad_60_mas" = "green"))
# Paso 5: Mostrar el gráfico
print(plot)
matriz <- cbind(Edad_0_5,Edad_6_11,Edad_12_17,Edad_18_29,Edad_30_59,Edad_60_mas)
media <- apply(matriz, 2, mean, na.rm = TRUE)
mediana <- apply(matriz, 2, median, na.rm = TRUE)
resultados <- data.frame(media, mediana)
print(resultados)
matriz <- cbind(Edad_0_5,Edad_6_11,Edad_12_17,Edad_18_29,Edad_30_59,Edad_60_mas)
varianza <- apply(matriz, 2, var, na.rm = TRUE)
desviacion <- apply(matriz, 2, sd, na.rm = TRUE)
resultadoss <- data.frame(varianza, desviacion*desviacion)
print(resultadoss)
indice_violencia <- DF$Indice_Edad_30_59
# Calcular la probabilidad de que el índice sea mayor a 0.5
probabilidad <- sum(indice_violencia > 0.5, na.rm = TRUE) / length(na.omit(indice_violencia))
# Imprimir la probabilidad
print(probabilidad)
summary(DF$`CASOS ATENDIDOS - VIOLENCIA SEXUAL`)
casos_totales <- length(DF$`CASOS ATENDIDOS - VIOLENCIA SEXUAL`)
Data_Binomial <- data.frame(Var1 = DF$`CASOS ATENDIDOS - VIOLENCIA SEXUAL`, Var2 = DF$`NOMBRE CENTRO ATENCION`)
Casos_media <- mean(Data_Binomial$Var1)
Data_Binomial <- Data_Binomial %>%
mutate(Cumple_Condicion = ifelse(Var1 >= 70, "C >= C_prom", "C < C_prom"))
Data_Binomial
prob_E <- round((sum(Data_Binomial$Cumple_Condicion == "C >= C_prom"))/casos_totales,3)
prob_E
prob_F <- round((sum(Data_Binomial$Cumple_Condicion == "C < C_prom"))/casos_totales,3)
prob_F
# size: número de ensayos (n > = 0)
# prob: probabilidad de éxito en cada ensayo
# lb: límite inferior de la suma
# ub: límite superior de la suma
# col: color
# lwd: ancho de línea
binom_sum <- function(size, prob, lb, ub, col = 4, lwd = 1, ...) {
x <- 0:size
if (missing(lb)) {
lb <- min(x)
}
if (missing(ub)) {
ub <- max(x)
}
plot(dbinom(x, size = size, prob = prob), type = "h", lwd = lwd, ...)
if(lb == min(x) & ub == max(x)) {
color <- col
} else {
color <- rep(1, length(x))
color[(lb + 1):ub ] <- col
}
lines(dbinom(x, size = size, prob = prob), type = "h",
col =  color, lwd = lwd, ...)
}
plot(dbinom(0:100, 100, prob = prob_E), type = "h", lwd = 2,
main = "Función de Probabilidad Binomial de X",
ylab = "P(X = x)", xlab = "X")
sum(dbinom(0:40, 100, prob_E))
binom_sum(100, prob =prob_E, ub = 20, lwd = 2,
ylab = "P(X = x)", xlab = "X", main = "Función de Probabilidad Binomial de X")
Esperanza = 100 *  0.211
Esperanza
Varianza = 100 * prob_E * prob_F
Varianza
Esperanza = mean(DF$`CASOS ATENDIDOS - 12_17 - TOTAL`)
Esperanza
Varianza = var(DF$`CASOS ATENDIDOS - 12_17 - TOTAL`)
Varianza
p = 1/Esperanza
p
# Generar los valores de X
x <- 0:345
# Calcular las probabilidades
prob_condicion <- dgeom(x,p)
# Graficar la función de probabilidad
plot(x, prob_condicion, type = "h", xlab = "X", ylab = "P(X)", main = "Función de la distribución Geometrica",lwd = 3,col = "green")
pgeom(20,0.01906925)
sum(dbinom(0:20, 100, prob_E))
