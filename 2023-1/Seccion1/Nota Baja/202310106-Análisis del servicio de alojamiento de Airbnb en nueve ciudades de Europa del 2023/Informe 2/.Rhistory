D2 %>% filter(Ciudad =='Athens') -> DATH
D2 %>% filter(Ciudad =='Berlin') -> DBER
D2 %>% filter(Ciudad =='Budapest') -> DBUD
D2 %>% filter(Ciudad =='Lisbon') -> DLIS
D2 %>% filter(Ciudad =='Paris') -> DPAR
D2 %>% filter(Ciudad =='Rome') -> DROM
D2 %>% filter(Ciudad =='Vienna') -> DVIE
hist(DAMS$Precio, xlab = 'Precio', ylab = 'Frecuencia', main = 'Precios en Amsterdam')
# Add mean as a red dashed line
abline(v = mean(DAMS$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DAMS$Precio), col = "blue", lwd = 2)
hist(DBAR$Precio, main = "Precios en Barcelona", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBAR$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBAR$Precio), col = "blue", lwd = 2)
hist(DATH$Precio, main = "Precios en Atenas", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DATH$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DATH$Precio), col = "blue", lwd = 2)
hist(DBER$Precio, main = "Precios en Berlin", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBER$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBER$Precio), col = "blue", lwd = 2)
hist(DBUD$Precio, main = "Precios en Budapest", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBUD$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBUD$Precio), col = "blue", lwd = 2)
hist(DLIS$Precio, main = "Precios en Lisboa", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DLIS$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DLIS$Precio), col = "blue", lwd = 2)
hist(DPAR$Precio, main = "Precios en Paris", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DPAR$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DPAR$Precio), col = "blue", lwd = 2)
hist(DROM$Precio, main = "Precios en Roma", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DROM$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DROM$Precio), col = "blue", lwd = 2)
hist(DVIE$Precio, main = "Precios en Vienna", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DVIE$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DVIE$Precio), col = "blue", lwd = 2)
plot(x = D2$Satisfaccion, y = D2$Precio, xlab = "Satisfacción" , ylab = "Precio", ylim= c(0,2500))
cor(D2$Satisfaccion, D2$Precio)
plot(x = D2$Ind.Atraccion, y = D2$Precio, xlab = "Índice de Atracción" , ylab = "Precio", ylim= c(0,2500))
cor(D2$Ind.Atraccion, D2$Precio)
mosaicplot(table(D2$Ciudad, D2$Day), main = "Cuándo se reserva - Ciudad", xlab = "Ciudades", ylab = "Cuándo se Reserva", las = 0.7, )
c <- table(D2$Ciudad)
sum(c)
barplot(c, main = "Ciudades en el Estudio", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9, col=c("orange"))
s <-round(mean(D2$Precio),digits = 2)
s
mediana_precio <- median(D2$Precio)
mediana_precio
D2 %>% filter(Precio > mediana_precio) %>% arrange(desc(Precio)) -> CAROS
CAROS
nrow(CAROS)
c1 <- table(CAROS$Ciudad) #Del grupos de los Caros, Atenas es el que menos alojamientos tiene en el estudio (795). El de más apariciones es París (5,724)
c1
min(c1)
which.min(c1)
barplot(c1, main = "Ciudades con más alojamientos caros", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9, col=c("green"))
#Analizamos el lado de  los 100 alojamientos más caros :
CAROS[1:100, ] -> CAROS100
CAROS100
#Qué ciudad aparece más aquí en alojamientos caros :
ciudades_100 <- table(CAROS100$Ciudad)
ciudades_100
barplot(ciudades_100, main = "Ubicación de las 100 ciudades con precios más caros", col= c("skyblue"),, las=2, cex.names = 0.9)
superhost100 <- table(CAROS100$Superhost)
barplot(superhost100, main = 'Superhost', col =c( "#CCFF99","#9999FF" ))
legend("topright",legend=c("SÍ","NO"),
fil=c("#9999FF","#CCFF99"))
#Los valores de Limpieza y Satisfacción son muy altos
"La calificación que le asignan a este tipo de alojaminetos es 9.5 en promedio en LIMPIEZA"
mean(CAROS100$Limpieza)
"La Satisfacción del servicio es una notación alta, ya que tiene un 95.19 en promedio"
mean(CAROS100$Satisfaccion)
"Y lo mínimo en satisfacción es 60, lo que igual es alto"
min(CAROS100$Satisfaccion)
tipo_capacidad <- table(CAROS100$Tipo,CAROS100$Capacidad)
mosaicplot(tipo_capacidad, main = "Tipo de habitación TOP 100 y su Capacidad de personas", color = "green")
"La cantidad promedio de habitaciones en este tipo de alojamientos es:"
roundF(mean(CAROS100$Habitaciones, na.rm = T))
day <- table(CAROS100$Day) # Y se suelen tomar los fines de semana
day
mosaicplot(day, main = "Cual es el día en que más se reserva este tipo de alojamientos", color = "skyblue")
legend("bottomleft",legend=c("Weekday = 49","Weekend = 51"))
D2 %>% filter(Precio < mediana_precio) %>% arrange(Precio)-> ECO
ECO
nrow(ECO)
barplot(table(ECO$Ciudad),main = "Los  Airbnb más económicos", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9, col=c("skyblue"))
D2 %>%filter(D2$Ciudad == 'Rome') -> ROMA
A <- mean(ROMA$Precio)
A
#Analizamos el lado de  los 100 alojamientos más Económicos :
ECO[1:100, ] -> ECO100
ECO100
#Qué ciudad aparece más aquí en alojamientos caros :
ciudadeseco_100 <- table(ECO100$Ciudad)
barplot(ciudadeseco_100, col = "skyblue")
Esuperhost100 <- table(ECO100$Superhost)
barplot(Esuperhost100, main = "Superhost 100 más económicos", col = "skyblue")
#Los valores de Limpieza y Satisfacción son muy altos
"La calificación que le asignan a este tipo de alojaminetos es 8.9  en promedio en LIMPIEZA DEL 0-10"
mean(ECO100$Limpieza)
"La Satisfacción del servicio es una notación alta, ya que tiene un 95.19 en promedio"
mean(ECO100$Satisfaccion)
"Y lo mínimo en satisfacción es 20, lo que igual es BAJO"
min(ECO100$Satisfaccion)
which.min(ECO100$Satisfaccion)
ECO100[20,1:17]
tipo_capacidadECO <- table(ECO100$Tipo,ECO100$Capacidad)
mosaicplot(tipo_capacidadECO, col = "skyblue")
roundF(mean(ECO100$Habitaciones, na.rm = T))
dayeco <- table(ECO100$Day) #
mosaicplot(dayeco)
max(D2$Precio)
a <- which.max(D2$Precio)
D2[a,1:17]
round(min(D2$Precio),digits = 2)
a2 <- which.min(D2$Precio)
D2[a2,1:17]
unique(D2$Ciudad)
#Filtramos
D2 %>% filter(Ciudad =='Amsterdam') -> DAMSTERDAM
DAMSTERDAM
#El más caro
r1 <- which.max(DAMSTERDAM$Precio)
DAMSTERDAM[r1,1:17]
#El más económico
r2 <- which.min(DAMSTERDAM$Precio)
DAMSTERDAM[r2,1:17]
#Relación precio vs metro(km)
plot(DAMSTERDAM$Precio ~ DAMSTERDAM$Distance_Metro, main = 'Variación del precio vs la distancia al metro', ylab = "Precio ($)", xlab = "Distancia al metro (km)")
abline(lm(DAMSTERDAM$Precio ~ DAMSTERDAM$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DAMSTERDAM$Distance_Metro, DAMSTERDAM$Precio), 2)), x = 4, y = 7000)
#Relación precio vs centro(km)
plot(DAMSTERDAM$Precio ~ DAMSTERDAM$Distance_Center, main = 'Variación del precio vs la distancia al centro', ylab = "Precio ($)", xlab = "Distancia al centro (km)" )
abline(lm(DAMSTERDAM$Precio ~ DAMSTERDAM$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DAMSTERDAM$Distance_Center, DAMSTERDAM$Precio), 2)), x = 10, y = 7000)
#Relación precio vs indice de restaurantes
plot(DAMSTERDAM$Precio ~ DAMSTERDAM$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes', xlab = "Índice de restaurantes", ylab = "Precio($)" )
abline(lm(DAMSTERDAM$Precio ~ DAMSTERDAM$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DAMSTERDAM$Ind.Restaurantes, DAMSTERDAM$Precio), 2)), x = 80, y = 7000)
#Relación precio vs metro(km)
plot(D2$Precio ~ D2$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(D2$Precio ~ D2$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(D2$Distance_Metro, D2$Precio), 2)), x = 11, y = 15000)
#Relación precio vs centro(km)
plot(D2$Precio ~ D2$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(D2$Precio ~ D2$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(D2$Distance_Center, D2$Precio), 2)), x = 20, y = 15000)
#Relación precio vs indice de restaurantes
plot(D2$Precio ~ D2$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(D2$Precio ~ D2$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(D2$Ind.Restaurantes, D2$Precio), 2)), x = 80, y = 7000)
#Filtramos
D2 %>% filter(Ciudad =='Athens') -> DATHENAS
DATHENAS
#El más caro
r1 <- which.max(DATHENAS$Precio)
DATHENAS[r1,1:17]
#El más económico
r2 <- which.min(DATHENAS$Precio)
DATHENAS[r2,1:17]
#Relación precio vs metro(km)
plot(DATHENAS$Precio ~ DATHENAS$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DATHENAS$Precio ~ DATHENAS$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DATHENAS$Distance_Metro, DATHENAS$Precio), 2)), x = 1.5, y = 15000)
#Relación precio vs centro(km)
plot(DATHENAS$Precio ~ DATHENAS$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DATHENAS$Precio ~ DATHENAS$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DATHENAS$Distance_Center, DATHENAS$Precio), 2)), x = 5, y = 15000)
#Relación precio vs indice de restaurantes
plot(DATHENAS$Precio ~ DATHENAS$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DATHENAS$Precio ~ DATHENAS$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DATHENAS$Ind.Restaurantes, DATHENAS$Precio), 2)), x = 80, y = 7000)
#Filtramos
D2 %>% filter(Ciudad =='Barcelona') -> DBARCELONA
DBARCELONA
#El más caro
r1 <- which.max(DATHENAS$Precio)
DATHENAS[r1,1:17]
#El más económico
r2 <- which.min(DATHENAS$Precio)
DATHENAS[r2,1:17]
#Relación precio vs metro(km)
plot(DATHENAS$Precio ~ DATHENAS$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DATHENAS$Precio ~ DATHENAS$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DATHENAS$Distance_Metro, DATHENAS$Precio), 2)), x = 1.5, y = 15000)
#Relación precio vs centro(km)
plot(DATHENAS$Precio ~ DATHENAS$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DATHENAS$Precio ~ DATHENAS$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DATHENAS$Distance_Center, DATHENAS$Precio), 2)), x = 5, y = 15000)
#Relación precio vs indice de restaurantes
plot(DATHENAS$Precio ~ DATHENAS$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DATHENAS$Precio ~ DATHENAS$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DATHENAS$Ind.Restaurantes, DATHENAS$Precio), 2)), x = 80, y = 7000)
### Berlín
#Filtramos
D2 %>% filter(Ciudad =='Berlin') -> DBERLIN
DBERLIN
#El más caro
r1 <- which.max(DBERLIN$Precio)
DBERLIN[r1,1:17]
#El más económico
r2 <- which.min(DBERLIN$Precio)
DBERLIN[r2,1:17]
#Relación precio vs metro(km)
plot(DBERLIN$Precio ~ DBERLIN$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DBERLIN$Precio ~ DBERLIN$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DBERLIN$Distance_Metro, DBERLIN$Precio), 2)), x = 12, y = 4000)
#Relación precio vs centro(km)
plot(DBERLIN$Precio ~ DBERLIN$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DBERLIN$Precio ~ DBERLIN$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DBERLIN$Distance_Center, DBERLIN$Precio), 2)), x = 20, y = 4000)
#Relación precio vs indice de restaurantes
plot(DBERLIN$Precio ~ DBERLIN$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DBERLIN$Precio ~ DBERLIN$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DBERLIN$Ind.Restaurantes, DBERLIN$Precio), 2)), x = 80, y = 4000)
#Filtramos
D2 %>% filter(Ciudad =='Rome') -> DROMA
DROMA
#El más caro
r1 <- which.max(DROMA$Precio)
DROMA[r1,1:17]
#El más económico
r2 <- which.min(DROMA$Precio)
DROMA[r2,1:17]
#Relación precio vs metro(km)
plot(DROMA$Precio ~DROMA$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DROMA$Precio ~ DROMA$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DROMA$Distance_Metro, DROMA$Precio), 2)), x = 3, y = 2000)
#Relación precio vs centro(km)
plot(DROMA$Precio ~ DROMA$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DROMA$Precio ~ DROMA$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DROMA$Distance_Center, DROMA$Precio), 2)), x = 8, y = 2000)
#Relación precio vs indice de restaurantes
plot(DROMA$Precio ~ DROMA$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DROMA$Precio ~ DROMA$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DROMA$Ind.Restaurantes, DROMA$Precio), 2)), x = 80, y = 2000)
#Relación precio vs metro(km)
plot(DBUD$Precio ~ DBUD$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DBUD$Precio ~ DBUD$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DBUD$Distance_Metro, DBUD$Precio), 2)), x = 3, y = 2000)
#Relación precio vs centro(km)
plot(DBUD$Precio ~ DBUD$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DBUD$Precio ~ DBUD$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DBUD$Distance_Center, DBUD$Precio), 2)), x = 8, y = 2000)
#Relación precio vs indice de restaurantes
plot(DBUD$Precio ~ DBUD$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DBUD$Precio ~ DBUD$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DBUD$Ind.Restaurantes, DBUD$Precio), 2)), x = 80, y = 2000)
#Filtramos
D2 %>% filter(Ciudad =='Lisbon') -> DLISBON
DLISBON
#El más caro
r1 <- which.max(DLISBON$Precio)
DLISBON[r1,1:17]
#El más económico
r2 <- which.min(DLISBON$Precio)
DLISBON[r2,1:17]
#Relación precio vs metro(km)
plot(DLISBON$Precio ~ DLISBON$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DLISBON$Precio ~ DLISBON$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DLISBON$Distance_Metro, DLISBON$Precio), 2)), x = 3, y = 1500)
#Relación precio vs centro(km)
plot(DLISBON$Precio ~ DLISBON$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DLISBON$Precio ~ DLISBON$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DLISBON$Distance_Center, DLISBON$Precio), 2)), x = 8, y = 1500)
#Relación precio vs indice de restaurantes
plot(DLISBON$Precio ~ DLISBON$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DLISBON$Precio ~ DLISBON$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DLISBON$Ind.Restaurantes, DLISBON$Precio), 2)), x = 80, y = 1500)
#Filtramos
D2 %>% filter(Ciudad =='Paris') -> DPARIS
DPARIS
#El más caro
r1 <- which.max(DPARIS$Precio)
DPARIS[r1,1:17]
#El más económico
r2 <- which.min(DPARIS$Precio)
DPARIS[r2,1:17]
#Relación precio vs metro(km)
plot(DPARIS$Precio ~ DPARIS$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DPARIS$Precio ~ DPARIS$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DPARIS$Distance_Metro, DPARIS$Precio), 2)), x = 0.8, y = 15000)
#Relación precio vs centro(km)
plot(DPARIS$Precio ~ DPARIS$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DPARIS$Precio ~ DPARIS$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DPARIS$Distance_Center, DPARIS$Precio), 2)), x = 6, y = 15000)
#Relación precio vs indice de restaurantes
plot(DPARIS$Precio ~ DPARIS$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DPARIS$Precio ~ DPARIS$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DPARIS$Ind.Restaurantes, DPARIS$Precio), 2)), x = 80, y = 15000)
#Filtramos
D2 %>% filter(Ciudad =='Vienna') -> DVIENNA
DVIENNA
#El más caro
r1 <- which.max(DVIENNA$Precio)
DVIENNA[r1,1:17]
#El más económico
r2 <- which.min(DVIENNA$Precio)
DVIENNA[r2,1:17]
#Relación precio vs metro(km)
plot(DPARIS$Precio ~ DPARIS$Distance_Metro, main = 'Variación del precio vs la distancia al metro')
abline(lm(DPARIS$Precio ~ DPARIS$Distance_Metro), col = "red", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DPARIS$Distance_Metro, DPARIS$Precio), 2)), x = 0.8, y = 15000)
#Relación precio vs centro(km)
plot(DPARIS$Precio ~ DPARIS$Distance_Center, main = 'Variación del precio vs la distancia al centro')
abline(lm(DPARIS$Precio ~ DPARIS$Distance_Center), col = "green", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DPARIS$Distance_Center, DPARIS$Precio), 2)), x = 6, y = 15000)
#Relación precio vs indice de restaurantes
plot(DPARIS$Precio ~ DPARIS$Ind.Restaurantes, main = 'Variación del precio vs Índice de restaurantes')
abline(lm(DPARIS$Precio ~ DPARIS$Ind.Restaurantes), col = "pink", lwd = 3, lty = 2)
text(paste("Correlación:", round(cor(DPARIS$Ind.Restaurantes, DPARIS$Precio), 2)), x = 80, y = 15000)
D2 %>%
filter(Precio >= 0L & Precio <= 2600L) %>%
filter(Day %in% "Weekday") %>%
ggplot() +
aes(x = Precio) +
geom_histogram(bins = 30L, fill = "#1F7A1F") +
labs(
x = "Frecuencia",
y = "Precio",
title = "Precio de un Airbnb dentro de semana"
) +
theme_minimal()
D2 %>%
filter(Precio >= 0L & Precio <= 2600L) %>%
filter(Day %in% "Weekend") %>%
ggplot() +
aes(x = Precio) +
geom_histogram(bins = 30L, fill = "#033D6D") +
labs(
x = "Frecuencia",
y = "Precio en dólares",
title = "Precio de un Airbnb en los fines de semana"
) +
theme_minimal()
"Hallamos el máximo y mínimo valor de indice de atracción"
max(D2$Ind.Atraccion) -> MAYOR
MAYOR
roundF(min(D2$Ind.Atraccion)) -> MENOR
MENOR
"Hallamos el valor promedio  :"
promedio_de_satisfaccion <- roundF(mean(D2$Ind.Atraccion))
promedio_de_satisfaccion
#ATRACCION MAYOR AL PROMEDIO
D2 %>% filter(D2$Ind.Atraccion > promedio_de_satisfaccion )%>% arrange(desc(Ind.Atraccion)) -> D_ATRACCION
# SELECIONAMOS A LOS 100 ALOJAMIENTOS CON MEJORES CALIFICACIONES DE SATISFACCIÓN :
D_ATRACCION[1:100,1:17]  -> ATRACCION_100
ATRACCION_100
# LAS TOP 100 CIUDADES CON MAYOR INDICE DE ATRACCION
t <- table(ATRACCION_100$Ciudad)
barplot(t, col=c("pink"),main="Top 100 ciudades con mejor Indice de satisfacción en todo el estudio", ylab = "Número de Observaciones", las = 2, cex.axis = 0.8, cex.names = 0.9, cex.lab = 0.7)
#ATRACCION MENOR AL PROMEDIO
D2 %>% filter(D2$Ind.Atraccion < promedio_de_satisfaccion )%>% arrange(Ind.Atraccion) -> M_ATRACCION
# SELECIONAMOS A LOS 100 ALOJAMIENTOS CON PEORES CALIFICACIONES DE SATISFACCIÓN :
M_ATRACCION[1:100,1:17]  -> MATRACCION_100
MATRACCION_100
# LAS TOP 100 CIUDADES CON MENOR INDICE DE ATRACCION :
tM <- table(MATRACCION_100$Ciudad)
barplot(tM, col=c("pink"),main="Top 100 ciudades con menor Indice de satisfacción en todo el estudio", ylab = "Número de Observaciones", las = 2, cex.axis = 0.8, cex.names = 0.9, cex.lab = 0.7)
cor(D2$Ind.Atraccion, D2$Distance_Metro)
plot(x = D2$Distance_Metro, y = D2$Ind.Atraccion,main = 'Variación del I.Atraccion vs la Distancia al metro' , ylab = "Índice de Atracción" , xlab = "Distancia al metro", ylim= c(0,100))
abline(lm(D2$Distance_Metro ~  D2$Ind.Atraccion), col = "orange", lwd = 3, lty = 5)
text(paste("Correlación:", round(cor( D2$Distance_Metro, D2$Ind.Atraccion), 3)), x = 85, y = 80,col="orange")
#AMSTERDAM
cor(DAMS$Ind.Atraccion, DAMS$Distance_Metro)
#ATHENAS
cor(DATH$Ind.Atraccion, DATH$Distance_Metro)
#BARCELONA
cor(DBAR$Ind.Atraccion, DBAR$Distance_Metro)
#BERLÍN
cor(DBER$Ind.Atraccion, DBER$Distance_Metro)
#BUDAPEST
cor(DBUD$Ind.Atraccion, DBUD$Distance_Metro)
#LISBOA
cor(DLIS$Ind.Atraccion, DLIS$Distance_Metro)
#PARÍS
cor(DPAR$Ind.Atraccion, DPAR$Distance_Metro)
#ROMA
cor(DROM$Ind.Atraccion, DROM$Distance_Metro)
#VIENA
cor(DVIE$Ind.Atraccion, DVIE$Distance_Metro)
plot(x = DAMS$Distance_Center, y = DAMS$Ind.Atraccion, ylab = "Índice de Atracción en Amsterdam" , xlab = "Distancia al Centro", ylim= c(0,100))
plot(x = D2$Distance_Center, y = D2$Ind.Atraccion, ylab = "Índice de Atracción" , xlab = "Distancia al centro", ylim= c(0,100))
cor(D2$Ind.Atraccion, D2$Distance_Center)
abline(lm(D2$Distance_Center ~  D2$Ind.Atraccion), col = "orange", lwd = 3, lty = 5)
text(paste("Correlación:", round(cor( D2$Distance_Center, D2$Ind.Atraccion), 3)), x = 85, y = 80,col="orange")
cor(DAMS$Ind.Atraccion, DAMS$Distance_Center)
cor(DATH$Ind.Atraccion, DATH$Distance_Center)
cor(DBAR$Ind.Atraccion, DBAR$Distance_Center)
cor(DBER$Ind.Atraccion, DBER$Distance_Center)
cor(DBUD$Ind.Atraccion, DBUD$Distance_Center)
cor(DLIS$Ind.Atraccion, DLIS$Distance_Center)
cor(DPAR$Ind.Atraccion, DPAR$Distance_Center)
cor(DROM$Ind.Atraccion, DROM$Distance_Center)
cor(DVIE$Ind.Atraccion, DVIE$Distance_Center)
cor(D2$Ind.Atraccion,D2$Ind.Restaurantes)
#Relación  Ind.Atracción vs Ind.Restaurantes :
plot(D2$Ind.Atraccion ~ D2$Ind.Restaurantes, main = 'Variación del I.Atraccion vs la I.Restaurantes', xlab = "índice de restaurantes" ,ylab = "índice de atracción" )
abline(lm(D2$Ind.Atraccion ~  D2$Ind.Restaurantes), col = "orange", lwd = 3, lty = 5)
text(paste("Correlación:", round(cor( D2$Ind.Restaurantes, D2$Ind.Atraccion), 3)), x = 85, y = 80,col="orange")
cor(D2$Ind.Atraccion, D2$Ind.Restaurantes)
cor(DAMS$Ind.Atraccion, DAMS$Ind.Restaurantes)
cor(DATH$Ind.Atraccion, DATH$Ind.Restaurantes)
cor(DBAR$Ind.Atraccion, DBAR$Ind.Restaurantes)
cor(DBER$Ind.Atraccion, DBER$Ind.Restaurantes)
cor(DBUD$Ind.Atraccion, DBUD$Ind.Restaurantes)
cor(DLIS$Ind.Atraccion, DLIS$Ind.Restaurantes)
cor(DPAR$Ind.Atraccion, DPAR$Ind.Restaurantes)
cor(DROM$Ind.Atraccion, DROM$Ind.Restaurantes)
cor(DVIE$Ind.Atraccion, DVIE$Ind.Restaurantes)
plot(x = DVIE$Distance_Center, y = DVIE$Ind.Atraccion, ylab = "Índice de Atracción en Vienna" , xlab = "Índice de Restaurantes en Vienna", ylim= c(0,100))
unique(D2$Ciudad)
city_freq <- table(D2$Ciudad)
city_prob <- city_freq / sum(city_freq)
print(city_prob)
D2$Price_Range <- cut(D2$Precio, breaks = c(0, 76, 152, Inf), labels = c("0-76", "76-152", "152<"), right = FALSE)
price_range_freq <- table(D2$Price_Range)
price_range_prob <- price_range_freq / sum(price_range_freq)
print(price_range_prob)
PromedioPrecio<-mean(D2$Precio)
ProbA <- nrow(filter(D2, Limpieza==10))/nrow(D2)
ProbA
ProbB <- sum(D2$Precio>PromedioPrecio) / nrow(D2)
ProbB
ProbAandB <- sum(D2$Precio>PromedioPrecio & D2$Limpieza>9) / nrow(D2)
ProbAandB
ProbBresA=ProbAandB/ProbA
ProbBresA
round(ProbAandB-ProbA*ProbB,2)
ProbAresB=ProbAandB/ProbB
ProbAresB
round(ProbBresA,2)
round(ProbB,2)
round(ProbAresB,2)
round(ProbA,2)
ProbA <- nrow(filter(D2, Precio>PromedioPrecio))/nrow(D2)
ProbA
ProbB <- nrow(filter(D2,Satisfaccion>90)) / nrow(D2)
ProbB
ProbAandB <- sum(D2$Precio>PromedioPrecio & D2$Satisfaccion>90) / nrow(D2)
ProbAandB
ProbBresA=ProbAandB/ProbA
ProbBresA
round(ProbAandB-ProbA*ProbB,2)
ProbAresB=ProbAandB/ProbB
ProbAresB
round(ProbBresA,2)
round(ProbB,2)
round(ProbAresB,2)
round(ProbA,2)
ProbA <- nrow(filter(D2, Limpieza>9))/nrow(D2)
ProbA
ProbB <- nrow(filter(D2,Satisfaccion>90)) / nrow(D2)
ProbB
ProbAandB <- sum(D2$Limpieza>9 & D2$Satisfaccion>90) / nrow(D2)
ProbAandB
ProbBresA=ProbAandB/ProbA
ProbBresA
round(ProbAandB-ProbA*ProbB,2)
ProbBresA
ProbB
ProbAresB
ProbA
PromedioPrecio<-mean(D2$Precio)
PromedioPrecio
ProbB <- nrow(filter(D2, Precio>PromedioPrecio))/nrow(D2)
ProbB
ProbA <- sum(D2$Ciudad == "Amsterdam") / nrow(D2)
ProbA
ProbAandB <- sum(D2$Ciudad == "Amsterdam" & D2$Precio>PromedioPrecio) / nrow(D2)
ProbAandB
ProbBresA=ProbAandB/ProbA
ProbBresA
round(ProbAandB-ProbA*ProbB,2)
ProbAresB=ProbAandB/ProbB
ProbAresB
ProbBresA
ProbB
ProbAresB
ProbA
ProbE<-sum(D2$Satisfaccion==90 & D2$Ciudad=="Amsterdam")/sum(D2$Ciudad=="Amsterdam")
ProbE
n<-sum(D2$Ciudad=="Amsterdam")
x<-0:n
dbinom(90,n, ProbE)
pmf<-dbinom(x,n, ProbE)
barplot(pmf, names.arg = x, xlab = "Número de éxitos", ylab = "Probabilidad", main = "PMF - Distribución Binomial")
plot(x, pmf, type = "b", pch = 19, xlab = "Número de éxitos", ylab = "Probabilidad", main = "PMF - Distribución Binomial")
EX<-n*ProbE
EX
a<-0:n
sum(a*dbinom(a ,n,ProbE)) #Otra manera, usando la definición de la Esperanza de una variable aleatoria discreta
dbinom(90,2500,ProbE)
EX2=p
p <- sum(D2$Day!="Weekday" & D2$Ciudad=="Amsterdam")/sum(D2$Ciudad=="Amsterdam")
p
