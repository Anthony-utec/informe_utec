yfit <- dnorm(xfit)
abline(h=yfit,color="red")
regresion <- lm(y ~ x, data = data)
hist(regresion$residuals)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
abline(h=yfit,col="red")
regresion <- lm(y ~ x, data = data)
hist(regresion$residuals)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
abline(h=table(xfit,yfit),col="red")
regresion <- lm(y ~ x, data = data)
hist(regresion$residuals)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
regresion <- lm(y ~ x, data = data)
hist(regresion$residuals)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
regresion <- lm(y ~ x, data = data)
hist(regresion$residuals)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
lines(xfit,yfit)
regresion <- lm(y ~ x, data = data)
hist(regresion$residuals)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
plot(regresion)
plot(regresion)
regresion <- lm(y ~ x, data = data)
mean(regresion$residuals)
plot(regresion)
plot(regresion)
plot(regresion)
plot(regresion)
plot(regresion)[1]
plot(regresion$residuals,regresion$fitted.values)
regresion
plot(regresion)
plot(regresion,1)
regresion
View(regresion)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
mean(regresion$residuals)
help(predict)
nuevos.x <- data.frame(x = c(36,38,40))
predict()
nuevos.x <- data.frame(x = c(36,38,40))
predict(regresion,nuevos.x)
nuevos.x <- data.frame(x = c(36,38,40,41,42,43))
predict(regresion,nuevos.x)
x = DF$HE
y = TL$TL
data = data.frame(cbind(y,x))
regresion <- lm(y ~ x, data = data)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
mean(regresion$residuals)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
x = TL$TL
y = DF$HS
data = data.frame(cbind(y,x))
regresion <- lm(y ~ x, data = data)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
x = DF$Edad
y = DF$Videojuegos
data = data.frame(cbind(y,x))
regresion <- lm(y ~ x, data = data)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
mean(regresion$residuals)
summary(regresion)
plot(x,y, xlab = "Tiempo libre", ylab = "Horas de sueño")
abline(regresion, col = "black")
Et=c("Y = 6.09 + 0.03X")
legend("topright", legend = Et , fill=c("blue","cyan"))
options(repos="https://cran.rstudio.com" )
list.of.packages <- c("dplyr","readr","stringr","modeest","knitr","Rlab")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
rotate_x <- function(tabl, labels_vec, rot_angle) {
plt <- barplot(tabl, col=c("cyan","blue"), xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
#Esto se usó para limpear datos, mas que todo se cambio las columnas y algunos espacios y palabras extras. Además se cambio el tipo de dato de ciertas variables (Ej: Edad estaba antes como char)
library(dplyr)
library(readr)
library(stringr)
library(modeest)
library(Rlab)
DF<-read_csv("encuestas.csv")
DF<- DF %>% rename(Periodo="Periodo de ingreso",HS="Horas de sueño diarias",SS="Servicios de streaming",AA="Actividades artísticas",
NC="¿Cuántos cursos llevas normalmente?",Becado="¿Beca o crédito educativo?",HE="Horas de estudio fuera de la clase",RS="Redes sociales",HA="Horas académicas semanales")
DF <- DF %>% mutate(Periodo=str_replace_all(Periodo,"\\s|-","."))
DF <- DF %>% mutate(Periodo=str_replace_all(Periodo,"201920022","2019.2"))
DF <- DF %>% mutate(Periodo=str_replace_all(Periodo,"202010613","2020.1"))
DF <- DF %>% mutate(Periodo=str_replace_all(Periodo,"20211472","2021.1"))
DF <- DF %>% arrange(Periodo)
DF <- DF %>% mutate(Edad=str_replace_all(Edad," años",""))
DF <- DF %>% mutate(HS=str_replace_all(HS," horaa| horas|-6|-7|h a 7h| horas",""))
DF <- DF %>% mutate(HA= str_replace_all(HA," horas| horas y media| y media",""))
DF <- DF %>% mutate(HA= str_replace_all(HA,"-27",""))
DF <- DF %>% mutate(HA=as.integer(HA),Edad=as.integer(Edad),HS=as.integer(HS))
DF1<- DF %>% slice(which(Carrera=="Ing. Mecánica"),which(Carrera=="Ing. De la Energía"),which(Carrera=="Ing. Química"),which(Carrera=="Ing. Mecatrónica"))
DF2<- DF %>% slice(which(Carrera=="Ciencia de la Computación"),which(Carrera=="Ing. Industrial"),which(Carrera=="Ing. Civil"))
DF3<- DF %>% slice(which(Carrera=="Ing. Electrónica"),which(Carrera=="Ing. Ambiental"),which(Carrera=="Bioingenieria"))
DFHS<- DF %>% mutate(intervalo_horas_sueno = case_when(
(DF$HS<=3) ~ "entre 0 y 3 horas",
(DF$HS<=7) ~ "entre 4 y 7 horas",
(DF$HS<=10) ~ "entre 8 y 10 horas",
))
DFHA<- DF %>% mutate(intervalo_horas_a = case_when(
(DF$HA<=18) ~ "entre 0 y 18 horas",
(DF$HA<=26) ~ "entre 19 y 26 horas",
(DF$HA<=36) ~ "entre 27 y 36 horas",
)) %>% mutate(intervalo_horas_estudio = case_when(
(DF$HE<=3) ~ "entre 1 y 3 horas",
(DF$HE<=7) ~ "entre 4 y 7 horas",
(DF$HE<=12) ~ "entre 8 y 12 horas",
))
DFTL <- DF %>% mutate(TL = Deporte + Videojuegos + SS + AA + RS) %>% slice(which(Carrera != "Ciencia de la Computación" & Carrera != "Administración y negocios digitales"))
#Datos a tomar en cuenta
#edad = edad
#hs= horas de sueño diaras
#deporte= horas semanales deporte
#videojuegos=horas semanales videojuegos
#ss=horas semanales servicios de streaming (netflix , prime, spotify)
#aa=horas semanales actividades artisticas
#rs=horas semanales	redes sociales
#nc= número de cursos matriculados
#he= horas estudio diaria fuera de clase
#ha=	horas academicas semanales
proporciones <- table(DF$Sexo)
etiquetas <- c("Mujer", "Hombre")
pct <- round(proporciones/sum(proporciones)*100)
etiquetas <- paste(etiquetas, pct)
etiquetas <- paste(etiquetas,"%",sep="")
pie(proporciones,labels = etiquetas,
col=rainbow(length(etiquetas)),
main="Sexos")
mfv(DF$Sexo)
mfv(DF$Periodo)
barplot(table(DF$Sexo,DF$Periodo),beside=TRUE,col=c("cyan","blue"),xlab="Periodo",
ylab="Frecuencias",main="Distribución de sexos por periodos")
nombres<-c("Hombres","Mujeres")
legend("topright", legend = nombres, fill=c("blue","cyan"))
barplot(table(DF$Carrera,DF$Periodo),col=c(1,2,3,4,5,6,7,8,"white","yellow"),xlab="Periodo",
ylab="Frecuencias",main="Distribución de carreras por periódos")
nombres<-c("Quimica","Bio","CS","Ambiental","Civil", "De la Energía","Electrónica","Industrial","Mecanica","Mecatrónica")
legend("topright", legend = nombres, fill=c(1,2,3,4,5,6,7,8,"white","yellow"),cex = 0.75)
rotate_x(table(DF$Sexo,DF$Carrera),colnames(table(DF$Sexo,DF$Carrera)),45)
nombres<-c("Hombres","Mujeres")
legend("topright", legend = nombres, fill=c("blue","cyan"))
mfv(DF$Carrera)
proporciones <- table(DF$Becado)
etiquetas <- c("Becado","Credito","Ninguno")
pct <- round(proporciones/sum(proporciones)*100)
etiquetas <- paste(etiquetas, pct)
etiquetas <- paste(etiquetas,"%",sep="")
pie(proporciones,labels = etiquetas,
col=c("blue","red","black"),
main="Becados")
mfv(DF$Becado)
round(median(DF$Edad))
round(mean(DF$Edad), 2)
mfv(DF$Edad)
barplot(table(DF$Edad), xlab='Edad', ylab='Frecuencia', main='Distribución de edad ',col="blue")
boxplot(DF$Edad,main="Edad", ylab='Años',horizontal= TRUE,col="blue")
abline(v=mean(DF$Edad), col = "red")
quantile(DF$Videojuegos)
mfv(DF$Videojuegos)
boxplot(DF$Videojuegos, main='Horas semanales de videojuegos',horizontal= TRUE,col="cyan")
abline(v=mean(DF$Videojuegos), col = "red")
barplot(table(DF$Videojuegos),main="Distribución de horas en videojuegos",col="red",xlab="Horas")
barblot<- DF %>% slice(which(Videojuegos>1 & Videojuegos<6 )) %>% select(Videojuegos,Sexo) %>% table()
barplot(barblot,col=c(1,2,3,4))
etiquetas<-c("2 horas","3 horas","4 horas","5 horas")
legend("topright", legend = etiquetas, fill=c(1,2,3,4))
round(median(DF$Deporte))
mfv(DF$Deporte)
barplot(table(DFHS$intervalo_horas_sueno,DF$Deporte), xlab='Numero de horas', ylab='Frecuencia', main='Horas
semanales usadas en deporte',col=c(1))
boxplot(DF$Deporte,main="Deporte",col="cyan",horizontal=TRUE )
abline(v=mean(DF$Deporte),col="red")
summary(DF$HE)
mfv(DF$HE)
summary(DF$HS)
mfv(DF$HS)
barplot(table(DFHS$intervalo_horas_sueno),xlab='Horas de sueño', ylab='Frecuencia', main='Distribución de horas de sueño',col="cyan")
boxplot(DF$HE,horizontal=TRUE,col="green", main="Boxplot para las horas de estudio")
abline(v=mean(DF$HE), col = "red")
summary(DF$NC)
mfv(DF$NC)
barplot(table(DF$NC), xlab='Número cursos', ylab='Frecuencia', main='Cursos ',col="cyan")
mfv(DF$NC)
summary(DF$HA)
mfv(DF$HA)
barplot(table(DFHA$NC,DFHA$intervalo_horas_a),col=c(1,2,3,4,5,6),main="Horas académicas según el número de cursos")
etiquetas<-row.names(table(DFHA$NC,DFHA$intervalo_horas_a))
legend("topright", legend = etiquetas, fill=c(1,2,3,4,5,6),title="N° Cursos")
round(median(DF$SS))
round(mean(DF$SS), 2)
mfv(DF$SS)
barplot(table(DF$SS), main='Horas semanales de Servicios de streaming', ylab='Frecuencia en Observaciones',xlab='Horas de SS',col="green")
round(median(DF$AA))
round(mean(DF$AA), 2)
mfv(DF$AA)
boxplot(DF$AA,main="Horas semanales de actividades artisticas", horizontal = TRUE,col="cyan")
abline(v=mean(DF$AA), col = "red")
round(median(DF$RS))
round(mean(DF$RS), 2)
mfv(DF$RS)
boxplot(DF$RS,main="Horas semanales de redes sociales", horizontal = TRUE,col="cyan")
abline(v=mean(DF$RS), col = "red")
text(0, 5, "Media")
barplot(table(DF$RS),main="Distribución de horas en redes sociales",col="orange")
aux11=DF %>% mutate(Habitos_de_sueno = case_when(
(DF$HS<=3) ~ "entre 0 y 3 horas",
(DF$HS<=7) ~ "entre 4 y 7 horas",
(DF$HS<=10) ~ "entre 8 y 10 horas"
))%>% select(Habitos_de_sueno)
proporciones1 <- table(aux11)
etiquetas <- c("0 a 3 horas","4 a 7 horas", "8 a 10 horas")
pct <- round(proporciones1/sum(proporciones1)*100)
etiquetas1 <- paste(etiquetas, pct, "%")
pie(proporciones1,labels = etiquetas1,
col=c(1,4,"red"),
main="Habitos de sueño general")
aux11=DF %>% mutate(Habitos_de_sueno = case_when(
(DF$HS<=3) ~ "entre 0 y 3 horas",
(DF$HS<=7) ~ "entre 4 y 7 horas",
(DF$HS<=10) ~ "entre 8 y 10 horas",
))%>% filter(Sexo=="Masculino")%>% select(Habitos_de_sueno)
proporciones1 <- table(aux11)
etiquetas <- c("0 a 3 horas","4 a 7 horas", "8 a 10 horas" )
pct <- round(proporciones1/sum(proporciones1)*100)
etiquetas1 <- paste(etiquetas, pct, "%")
pie(proporciones1,labels = etiquetas1,
col=rainbow(length(etiquetas1)),
main="Habitos de sueño en Hombres")
aux11=DF %>% mutate(Habitos_de_sueno = case_when(
(DF$HS<=3) ~ "entre 0 y 3 horas",
(DF$HS<=7) ~ "entre 4 y 7 horas",
(DF$HS<=10) ~ "entre 8 y 10 horas",
))%>% filter(Sexo=="Femenino")%>% select(Habitos_de_sueno)
proporciones1 <- table(aux11)
etiquetas <- c("4 a 7 horas", "8 a 10 horas")
pct <- round(proporciones1/sum(proporciones1)*100)
etiquetas1 <- paste(etiquetas, pct, "%")
pie(proporciones1,labels = etiquetas1,
col=rainbow(length(etiquetas1)),
main="Habitos de sueño en Mujeres")
barplot(table(DF$Carrera,DF$HE),col=c(1,2,3,4,5,6,7,8,"white","yellow"),xlab="Horas de Estudio",
ylab="Frecuencias",main="Distribución de Horas de estudio por carreras ")
nombres<-c("Quimica","Bio","CS","Ambiental","Civil", "De la Energía","Electrónica","Industrial","Mecanica","Mecatrónica")
legend("topright", legend = nombres, fill=c(1,2,3,4,5,6,7,8,"white","yellow"),cex = 0.75)
prueba<-(DF %>% select(Carrera,HE) %>% group_by(Carrera) %>% summarise(suma=sum(HE)) %>% mutate(prom= suma/table(DF$Carrera)))
plt <- barplot(prueba$prom, col="blue", xaxt="n")
text(plt, par("usr")[3], labels = prueba$Carrera, srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
x=c(1,0)
p=DF%>% filter(HS>7)%>%nrow(.)/nrow(DF) #probabilidad de dormir mas de 7 horas
barplot(dbern(x, p),names.arg=c("Exito","Fracaso"),main="Dist. Bernoulli",col=c("green","red"))
x=c(1,0)
p=DF%>% filter(HS>7)%>%nrow(.)/nrow(DF) #probabilidad de dormir mas de 7 horas
dbern(x, p)
f2 <- function(carrera,horas_sueno){
temp<- DF %>% filter(Carrera==carrera)
temp %>% filter(HS==horas_sueno)%>%nrow(.)/nrow(temp)
}
f2("Ing. Mecatrónica",7)
f2("Ciencia de la Computación",8)
f2("Bioingenieria",6)
f3 <- function(carrera,horas_videojuegos){
temp<- DF %>% filter(Carrera==carrera)
temp %>% filter(Videojuegos==horas_videojuegos)%>%nrow(.)/nrow(temp)
}
f3("Ing. Mecatrónica",4)
f3("Ciencia de la Computación",6)
f3("Bioingenieria",2)
coef.variacion <- sd(DF$HS)/mean(DF$HS)
round(coef.variacion*100,2)
alpha <- 1-0.88
error.estandar <- sd(DF$HS)/153
zc <- qnorm(alpha/2,lower.tail= F)
xprom <- mean(DF$HS)
inferior <- xprom - zc*error.estandar
superior <- xprom + zc*error.estandar
inferior
superior
#Horas de estudio
DF_HE<-DF$HE
#cf=sd/media *100
media_HE=mean(DF_HE)
CF_HE<-sd(DF_HE)/media_HE
round(CF_HE*100,2)
Z_HE= qnorm(0.1/2,0,1,lower.tail = F)
CF_HE<-sd(DF_HE)/sqrt(length(DF_HE))
margen_errorE=CF_HE*Z_HE
# intervalo de confianza = media_RS +/- margen_error
inferior= media_HE - margen_errorE
superior= media_HE + margen_errorE
inferior
superior
media <- mean(DFTL$TL)
s <- sd(DFTL$TL)
Cv <- s/media*100
round(Cv,2)
n <-length(DFTL$TL)
a = 0.01
inferior <- media - qnorm(1-a/2)*s/sqrt(n)
superior <-  media + qnorm(1-a/2)*s/sqrt(n)
inferior
superior
round(100*(sd(DF$Deporte))/ mean(DF$Deporte),2)
n=length(DF$Deporte)
x= mean(DF$Deporte)
sigma= sd(DF$Deporte)
alpha=0.01
#intervalo de confianza
z=qnorm(1-alpha/2)
inferior <- x - z*sigma/sqrt(n)
superior <- x+ z*sigma/sqrt(n)
inferior
superior
#Horas de redes sociales
DF_RS<-DF$RS
#cf=sd/media *100
media_RS=mean(DF_RS)
CF_RS<-sd(DF_RS)/media_RS
round(CF_RS*100,2)
# coeficiente de variación >35% => nivel de confianza=99%
Z_RS= qnorm(0.05/2,0,1,lower.tail = F)
CF_RS<-sd(DF_RS)/sqrt(length(DF_RS))
margen_error=CF_RS*Z_RS
# intervalo de confianza = media_RS +/- margen_error
inferior= media_RS - margen_error
superior= media_RS + margen_error
inferior
superior
DT<-filter(DF,  Becado== "Beca" | Becado== "Crédito educativo" )
HSB<-DT$HS #HSB= horas de sueños de "becados"
#INTERVALO DE CONFIANZA= DESVIACIÓN ESTANDAR/RAIZ CUADRADA DE TAMAÑO DE LA MUESTRA
IC_HSB<-sd(HSB)/sqrt(66)
#COEFICIENTE DE VARIACIÓN DE LA VARIABLE
#cf=sd/media*100
CF_B<-sd(HSB)/mean(HSB) *100 #CF_B = coeficiente de varición de HSB
media<-mean(HSB)
z = (media - 8)/(sd(HSB)/sqrt(66))
alfa<-(0.12)
round(-qnorm((alfa/2),0,1),2)
round(qnorm((alfa/2),0,1),2)
round(z,2)
Var_interes_2<-DT$HS
parametro = 8
desvi= sd(Var_interes_2)
n = length(Var_interes_2)
estadistico = mean(Var_interes_2)
alpha=0.12
z <- (estadistico-parametro)*sqrt(n)/desvi
Pc_inf=qnorm(alpha/2,0,1)
Pc_sup=qnorm(1-alpha/2,0,1)
curve(dnorm(x, mean=0, sd=1 , log=F), from=-15, to=15, xlim=c(-15, 13), col=3, lwd=4, main="Asistencia financiera")
abline(v=Pc_inf, col="Red")
abline(v=Pc_sup, col="Red")
abline(v=z, col=7)
DT_NB<-filter(DF, Becado != "Beca" & Becado!= "Crédito educativo")
HS_NB<-DT_NB$HS #HS_NB = horas de sueño de no "becados"
#INTERVALO DE CONFIANZA= DESVIACIÓN ESTANDAR/RAIZ CUADRADA DE TAMAÑO DE LA MUESTRA
IC_HSNB<-sd(HS_NB)/sqrt(153)
#COEFICIENTE DE VARIACIÓN DE LA VARIABLE
#cf=sd/media*100
CF_NB<-sd(HS_NB)/mean(HS_NB) *100 #CF_NB= coeficiente de variación de HS_NB
mediaNB<-mean(HS_NB)
zNB = (mediaNB - 8)*sqrt(153)/sd(HS_NB)
alfaNB<-0.12
round(qnorm(alfaNB/2,0,1),2)
round(-qnorm(alfaNB/2,0,1),2)
round(zNB,2)
Var_interes_2<-DT_NB$HS
parametro = 8
desvi= sd(Var_interes_2)
n = length(Var_interes_2)
estadistico = mean(Var_interes_2)
alpha=0.12
z <- (estadistico-parametro)*sqrt(n)/desvi
Pc_inf=qnorm(alpha/2,0,1)
Pc_sup=qnorm(1-alpha/2,0,1)
curve(dnorm(x, mean=0, sd=1 , log=F), from=-15, to=15, xlim=c(-15, 13), col=3, lwd=4, main="Sin Asistencia financiera")
abline(v=Pc_inf, col="Red") # Punto Critico inf
abline(v=Pc_sup, col="Red")# Punto Critico
abline(v=z, col=7)
DT<-filter(DF,  Becado== "Beca"  | Becado== "Crédito educativo" ) #"becados"
DT_NB<-filter(DF, Becado != "Beca" & Becado!= "Crédito educativo") #no "becados"
x <- mean(DT$HE)
y <- mean(DT_NB$HE)
sdx <- sd(DT$HE)
sdy <- sd(DT_NB$HE)
nx<- nrow(DT)
ny <- nrow(DT_NB)
uo <- 0
divisor <- sqrt((sdx^2)/nx + (sdy^2)/ny)
z <- ((x - y)- uo)/divisor
round(z,2) #estadístico de prueba
round(qnorm(0.01),2) #zcritico (final de la zona de rechazo)
x <- mean(DT$HE)
y <- mean(DT_NB$HE)
sdx <- sd(DT$HE)
sdy <- sd(DT_NB$HE)
nx<- nrow(DT)
ny <- nrow(DT_NB)
uo <- 0
divisor <- sqrt((sdx^2)/nx + (sdy^2)/ny)
z <- ((x - y)- uo)/divisor
alpha=0.01
Pc_inf=qnorm(alpha,0,1)
curve(dnorm(x, mean=0, sd=1 , log=F), from=-15, to=15, xlim=c(-15, 13), col=3, lwd=4, main="Prueba esfuerzo asist. finan. vs sin asist. finan.")
abline(v=Pc_inf, col="Red") # Punto Critico inf
abline(v=z, col=7)
DFTL <- DF %>% mutate(TL = Deporte + Videojuegos + SS + AA + RS) %>% slice(which(Carrera != "Ciencia de la Computación" & Carrera != "Administración y negocios digitales")) #Los estudiantes aquí solo son de ingeniería
media<- mean(DFTL$TL)
n <-length(DFTL$TL)
sd <- sd(DFTL$TL)
z <- (media-14)*sqrt(n)/sd  #estadístico de prueba
round(z ,2)
round(qnorm(0.01),2) #zcritico (final de la zona de rechazo)
media<- mean(DFTL$TL)
n <-length(DFTL$TL)
sd <- sd(DFTL$TL)
z <- (media-14)*sqrt(n)/sd
alpha=0.01
Pc_inf=qnorm(alpha,0,1)
#Pc_sup=qnorm(1-alpha,0,1)
curve(dnorm(x, mean=0, sd=1 , log=F), from=-15, to=15, xlim=c(-15, 13), col=3, lwd=4, main="Prueba tiempo libre")
abline(v=Pc_inf, col="Red") # Punto Critico inf
#abline(v=Pc_sup, col="Red")
abline(v=z, col=7)
Promedios <- c(mean(DFTL$Videojuegos), mean(DFTL$SS), mean(DFTL$AA), mean(DFTL$RS))
max(Promedios)
mean(DFTL$RS) #Solo se cuentan a estudiantes de ingenieria
Promedios <- c(mean(DFTL$Videojuegos), mean(DFTL$SS), mean(DFTL$AA), mean(DFTL$RS))
Desviaciones <- c(sd(DFTL$Videojuegos), sd(DFTL$SS), sd(DFTL$AA), sd(DFTL$RS))
Xm = max(Promedios)
#Si hacemos Xm ==  mean(DFTL$RS), saldría 1. Eso quiere decir que RS es la mas frecuente, sin contar a deporte.
Ym = mean(DFTL$Deporte)
n <-length(DFTL$TL)
sdx <- sd(DFTL$RS)
sdy <- sd(DFTL$Deporte)
uo <- 0
divisor <- sqrt((sdx^2)/n + (sdy^2)/n)
z <- ((Xm - Ym)- uo)/divisor
round(z,2) #estadístico de prueba
round(qnorm(0.01,lower.tail = F),2) #zcritico (inicio de la zona de rechazo)
z <- ((Xm - Ym)- uo)/divisor
alpha=0.01
Pc_sup=qnorm(1-alpha)
curve(dnorm(x, mean=0, sd=1 , log=F), from=-15, to=15, xlim=c(-15, 13), col=3, lwd=4, main="Prueba estilo de vida sedentario")
abline(v=Pc_sup, col="Red")
abline(v=z, col=7)
TL <- DF %>% mutate(TL = Deporte + Videojuegos + SS + AA + RS)
x = TL$TL
y = DF$HS
data = data.frame(cbind(y,x))
regresion <- lm(y ~ x, data = data)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
mean(regresion$residuals)
summary(regresion)
cor(data)
plot(x,y, xlab = "Tiempo libre", ylab = "Horas de sueño")
abline(regresion, col = "black")
Et=c("Y = 6.09 + 0.03X")
legend("topright", legend = Et , fill=c("blue","cyan"))
nuevos.x <- data.frame(x = c(36,38,40,41,42,43))
predict(regresion,nuevos.x)
TL <- DF %>% mutate(TL = Deporte + Videojuegos + SS + AA + RS)
x = DF$HE
y = TL$TL
data = data.frame(cbind(y,x))
regresion <- lm(y ~ x, data = data)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
mean(regresion$residuals)
x = DF$Edad
y = DF$Videojuegos
data = data.frame(cbind(y,x))
regresion <- lm(y ~ x, data = data)
xfit <- seq(min(regresion$residuals),max(regresion$residuals),length=40)
yfit <- dnorm(xfit)
plot(xfit,yfit)
mean(regresion$residuals)
summary(regresion)
cor(data)
remove.packages("Rlab", lib="~/R/win-library/4.0")
remove.packages("modeest", lib="~/R/win-library/4.0")
remove.packages("readr", lib="~/R/win-library/4.0")
