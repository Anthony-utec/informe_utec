library(readr)
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggpubr")
library(readr)
library(dplyr)
library(ggplot2)
library(ggpubr)
rm(list = ls())
DL<-read_csv("Consumo_Delivery.csv")
colnames(DL) <- c("fecha y hora","correo","Genero","Edad","Peso", "Estatura","Carrera","Num_cursos", "Horas_clase", "Vive_solo", "Trabajo","Horas_trabajo","UsaDelivery_Prepandemia","Delivery_Prepandemia","ComidaRap_Prepandemia","Oriental_Prepandemia","Carta_Prepandemia","Postre_Prepandemia","NumDias_Prepandemia","Maxveces_Prepandemia", "Contacto_Prepandemia","Gasto_Prepandemia","UsaDelivery_Pandemia","Delivery_Pandemia","ComidaRap_Pandemia","Oriental_Pandemia","Carta_Pandemia","Postre_Pandemia","NumDias_Pandemia","Maxveces_Pandemia","Contacto_Pandemia","Gasto_Pandemia","Rapidez","Protocolos","General","Recomienda")
# Generando columna del IMC
DL$Estatura = DL$Estatura/100
mutate(DL,IMC=Peso/Estatura^2)->DL    # DL$IMC
mutate(DL, imc_OMS="")->DL
# Categorizando IMC según OMS
DL$imc_OMS[DL$IMC<18.5] = "Desnutrición"
DL$imc_OMS[DL$IMC>=18.5] = "Normal"
DL$imc_OMS[DL$IMC>=25] = "Sobrepeso"
DL$imc_OMS[DL$IMC>=30] = "Obesidad"
DL$imc_OMS[DL$IMC>=35] = "Obesidad II"
DL$imc_OMS[DL$IMC>=40] = "Obesidad III"
# Renombrar respuestas de observaciones
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="Teléfono del restaurante/repartidor"] = "Tel. Rest."
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="App del delivery (Rappi, Glovo, etc)"] = "AppDeliv"
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="Página web del restaurante"] = "Website"
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="App del propio restaurante"] = "AppRest"
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="Red social del restaurante (Messenger, WhatsApp, Instagram)"] = "Redes"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="Teléfono del restaurante/repartidor"] = "Tel. Rest."
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="App del delivery (Rappi, Glovo, etc)"] = "AppDeliv"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="Página web del restaurante"] = "Website"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="App del propio restaurante"] = "AppRest"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="Red social del restaurante (Messenger, WhatsApp, Instagram)"] = "Redes"
DL$Delivery_Prepandemia[DL$Delivery_Prepandemia=="Delivery Propio (Restaurante)"] = "Dir. Rest."
DL$Delivery_Pandemia[DL$Delivery_Pandemia=="Delivery Propio (Restaurante)"] = "Dir. Rest."
# Limpieza de carreras
DL$Carrera[DL$Carrera=="Administración y negocios digitales"] = "Administración"
DL$Carrera[DL$Carrera=="Bioingeniería"] = "Bio"
DL$Carrera[DL$Carrera=="Ciencia de Datos"] = "Data Science"
DL$Carrera[DL$Carrera=="Ciencias de la Computación"] = "CS"
DL$Carrera[DL$Carrera=="Ingeniería Ambiental"] = "Ambiental"
DL$Carrera[DL$Carrera=="Ingeniería Civil"] = "Civil"
DL$Carrera[DL$Carrera=="Ingeniería de la Energía"] = "Energía"
DL$Carrera[DL$Carrera=="Ingeniería Industrial"] = "Industrial"
DL$Carrera[DL$Carrera=="Ingeniería Electrónica"] = "Electrónica"
DL$Carrera[DL$Carrera=="Ingeniería Mecánica"] = "Mecánica"
DL$Carrera[DL$Carrera=="Ingeniería Mecatrónica"] = "Mecatrónica"
DL$Carrera[DL$Carrera=="Ingeniería Química"] = "Química"
DL$Genero[DL$Genero == "Masculino"] <- 'M'
DL$Genero[DL$Genero == "Femenino"] <- 'F'
View(DL)
DL$Genero[DL$Genero == "Masculino"] <- "M"
DL$Genero[DL$Genero == "Femenino"] <- "F"
dim(DL) #Dimensión de los datos
nrow(DL) #Número de filas
ncol(DL) #Número de columnas
sum(is.na(DL)) #Número de datos faltantes
sum(!is.na(DL)) #Número de datos completos
sum(is.na(DL)) + sum(!is.na(DL)) #Datos totales
sum(complete.cases(DL)) #Filas completas
round(sum(is.na(DL))*(100/6300),2)#Porcentaje de datos faltantes
round(sum(!is.na(DL))*(100/6300),2)#Porcentaje de datos completos
DL_Limpios<-DL[complete.cases(DL),] #Datos con observaciones completas
nrow(DL_Limpios) #Número de filas
ncol(DL_Limpios) #Número de columnas
resumen.numerico=function(numerico){
resumen=data.frame(
"Rango"=apply(numerico, 2, function(x)paste("[", min(x), ",", max(x),"]")),
"Media"=apply(numerico, 2, function(x)paste(round(mean(x),2))),
"Mediana"=apply(numerico, 2, function(x)paste(median(x))),
"N.Datos atípicos"=apply(numerico, 2, function(x)paste(sum(x>(quantile(x,0.75)+IQR(x)*1.5))+sum(x<(quantile(x,0.25)-IQR(x)*1.5)))),
"Sesgo"=apply(numerico, 2, function(x)if(mean(x)<median(x))"Izquierdo" else if(mean(x)>median(x))"Derecho" else "Ninguno")
)
resumen
}
resumen.numerico(select(DL, Edad))
table(DL$Edad) #Tabla de frecuencias
hist(DL$Edad, main="edad general",freq = FALSE, col="darkviolet", xlab="edad", ylab="")
abline(v=mean(DL$Edad), col="cornflowerblue", lwd=2, lty=2)
abline(v=median(DL$Edad), col="darkblue", lwd=4, lty=1)
legend("topright", c("media","mediana"), col=c("cornflowerblue","darkblue"), lwd = 2, lty = c(2,1))
curve(dnorm(x, mean(DL$Edad,na.rm = TRUE), sd = sd(DL$Edad,na.rm = TRUE)),
col = "mediumspringgreen", lwd=2,
add = TRUE)
library(readr)
library(dplyr)
library(ggplot2)
library(ggpubr)
rm(list = ls())
DL<-read_csv("Consumo_Delivery.csv")
colnames(DL) <- c("fecha y hora","correo","Genero","Edad","Peso", "Estatura","Carrera","Num_cursos", "Horas_clase", "Vive_solo", "Trabajo","Horas_trabajo","UsaDelivery_Prepandemia","Delivery_Prepandemia","ComidaRap_Prepandemia","Oriental_Prepandemia","Carta_Prepandemia","Postre_Prepandemia","NumDias_Prepandemia","Maxveces_Prepandemia", "Contacto_Prepandemia","Gasto_Prepandemia","UsaDelivery_Pandemia","Delivery_Pandemia","ComidaRap_Pandemia","Oriental_Pandemia","Carta_Pandemia","Postre_Pandemia","NumDias_Pandemia","Maxveces_Pandemia","Contacto_Pandemia","Gasto_Pandemia","Rapidez","Protocolos","General","Recomienda")
# Generando columna del IMC
DL$Estatura = DL$Estatura/100
mutate(DL,IMC=Peso/Estatura^2)->DL    # DL$IMC
mutate(DL, imc_OMS="")->DL
# Categorizando IMC según OMS
DL$imc_OMS[DL$IMC<18.5] = "Desnutrición"
DL$imc_OMS[DL$IMC>=18.5] = "Normal"
DL$imc_OMS[DL$IMC>=25] = "Sobrepeso"
DL$imc_OMS[DL$IMC>=30] = "Obesidad"
DL$imc_OMS[DL$IMC>=35] = "Obesidad II"
DL$imc_OMS[DL$IMC>=40] = "Obesidad III"
# Renombrar respuestas de observaciones
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="Teléfono del restaurante/repartidor"] = "Tel. Rest."
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="App del delivery (Rappi, Glovo, etc)"] = "AppDeliv"
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="Página web del restaurante"] = "Website"
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="App del propio restaurante"] = "AppRest"
DL$Contacto_Prepandemia[DL$Contacto_Prepandemia=="Red social del restaurante (Messenger, WhatsApp, Instagram)"] = "Redes"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="Teléfono del restaurante/repartidor"] = "Tel. Rest."
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="App del delivery (Rappi, Glovo, etc)"] = "AppDeliv"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="Página web del restaurante"] = "Website"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="App del propio restaurante"] = "AppRest"
DL$Contacto_Pandemia[DL$Contacto_Pandemia=="Red social del restaurante (Messenger, WhatsApp, Instagram)"] = "Redes"
DL$Delivery_Prepandemia[DL$Delivery_Prepandemia=="Delivery Propio (Restaurante)"] = "Dir. Rest."
DL$Delivery_Pandemia[DL$Delivery_Pandemia=="Delivery Propio (Restaurante)"] = "Dir. Rest."
# Limpieza de carreras
DL$Carrera[DL$Carrera=="Administración y negocios digitales"] = "Administración"
DL$Carrera[DL$Carrera=="Bioingeniería"] = "Bio"
DL$Carrera[DL$Carrera=="Ciencia de Datos"] = "Data Science"
DL$Carrera[DL$Carrera=="Ciencias de la Computación"] = "CS"
DL$Carrera[DL$Carrera=="Ingeniería Ambiental"] = "Ambiental"
DL$Carrera[DL$Carrera=="Ingeniería Civil"] = "Civil"
DL$Carrera[DL$Carrera=="Ingeniería de la Energía"] = "Energía"
DL$Carrera[DL$Carrera=="Ingeniería Industrial"] = "Industrial"
DL$Carrera[DL$Carrera=="Ingeniería Electrónica"] = "Electrónica"
DL$Carrera[DL$Carrera=="Ingeniería Mecánica"] = "Mecánica"
DL$Carrera[DL$Carrera=="Ingeniería Mecatrónica"] = "Mecatrónica"
DL$Carrera[DL$Carrera=="Ingeniería Química"] = "Química"
DL$Genero[DL$Genero == "Masculino"] <- 'M'
DL$Genero[DL$Genero == "Femenino"] <- 'F'
DL_Limpios<-DL[complete.cases(DL),] #Datos con observaciones completas
View(DL_Limpios)
n<-20 # Tamaño de la muestra
media<-1050
nivelconfianza<-0.95
alpha<-1-nivelconfianza
desv<-sqrt(900)
error.est<-desv/sqrt(n)
margen.error<-qt((1-alpha/2),14,lower.tail = T)*error.est
margen.error
lim.inf<-media-margen.error
lim.inf
lim.sup<-media+margen.error
lim.sup
n<-20 # Tamaño de la muestra
media<-1050
nivelconfianza<-0.95
alpha<-1-nivelconfianza
desv<-30
error.est<-desv/sqrt(n)
margen.error<-qnorm(1-alpha/2,0,1)*error.est
margen.error
lim.inf<-media-margen.error
lim.inf
lim.sup<-media+margen.error
lim.sup
length(x)
length(x)
x = c(2 , 10 , 4 , 5 , 1 , 7 , 5 , 9 , 3 , 9, 11, 4, 6, 3, 2, 3, 5, 7)7
x = c(2,10,4,5,1,7,5,9,3,9,11,4,6,3,2,3,5,7)
length(x)
mean(x)
medianashe<-mean(x)
x = c(1538,1450,1178,2032,1647,1361,1537,1489,1415,1579,1123,1115, 1503,1489,1985,1500,1600)
length(x)
medianashe<-mean(x)
n<-18 # Tamaño de la muestra
media<-medianashe
nivelconfianza<-0.90
alpha<-1-nivelconfianza
desv<-250
error.est<-desv/sqrt(n)
margen.error<-qnorm(1-alpha/2,0,1)*error.est
margen.error
lim.inf<-media-margen.error
lim.inf
lim.sup<-media+margen.error
lim.sup
x = c(1538,1450,1178,2032,1647,1361,1537,1489,1415,1579,1123,1115, 1503,1489,1985,1500,1600)
length(x)
medianashe<-mean(x)
n<-17 # Tamaño de la muestra
media<-medianashe
nivelconfianza<-0.95
alpha<-1-nivelconfianza
desv<-250
error.est<-desv/sqrt(n)
margen.error<-qnorm(1-alpha/2,0,1)*error.est
margen.error
lim.inf<-media-margen.error
lim.inf
lim.sup<-media+margen.error
lim.sup
x=c(2,10,4,5,1,7,5,9,3,9,11,4,6,3,2,3,5,7)
n<- length(x)
media<-mean(x)
nivelconfianza<-0.9
alpha<-1-nivelconfianza
x=c(2,10,4,5,1,7,5,9,3,9,11,4,6,3,2,3,5,7)
n<- length(x)
media<-mean(x)
nivelconfianza<-0.9
alpha<-1-nivelconfianza
ta<-qt(alpha/2,df=length(x)-1,lower.tail = F)
izq<-mean(x)-ta*sd(x)/sqrt(length(x))
x=c(2,10,4,5,1,7,5,9,3,9,11,4,6,3,2,3,5,7)
n<- length(x)
media<-mean(x)
nivelconfianza<-0.9
alpha<-1-nivelconfianza
ta<-qt(alpha/2,df=length(x)-1,lower.tail = F)
izq<-mean(x)-ta*sd(x)/sqrt(length(x))
izq
x=c(2,10,4,5,1,7,5,9,3,9,11,4,6,3,2,3,5,7)
n<- length(x)
media<-mean(x)
nivelconfianza<-0.9
alpha<-1-nivelconfianza
ta<-qt(alpha/2,df=length(x)-1,lower.tail = F)
izq<-mean(x)-ta*sd(x)/sqrt(length(x))
izq
der<-mean(x)+ta*sd(x)/sqrt(length(x))
x=c(2,10,4,5,1,7,5,9,3,9,11,4,6,3,2,3,5,7)
n<- length(x)
media<-mean(x)
nivelconfianza<-0.9
alpha<-1-nivelconfianza
ta<-qt(alpha/2,df=length(x)-1,lower.tail = F)
izq<-mean(x)-ta*sd(x)/sqrt(length(x))
izq
der<-mean(x)+ta*sd(x)/sqrt(length(x))
der
n<-500
media<-0.2
alpha<-0.1
ta<-qt(alpha/2,df=n-1,lower.tail = F)
izq<-mean-ta*sd(n)/sqrt(500)
