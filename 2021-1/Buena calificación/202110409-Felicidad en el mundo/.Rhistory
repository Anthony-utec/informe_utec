if ( x== "Latin America and Caribbean" && cont<21){
vidaRegion<-c(vidaRegion,w$EsperanzaVida1[pos])
cont<-cont+1
}
if (cont==21){
promAnio=sum(vidaRegion)/21 #promedio de y año
vprom<-c(promAnio,vprom)
vregion<-c(vregion,"Latin America and Caribbean")
vano<-c(vano,ano)
ano<-ano-1
cont=0
vidaRegion=c()
}
pos=pos+1
}
DFLAC=data.frame(vprom,vregion,vano)
#para la variable Commonwealth of Independent States
ano=2020
cont=0
vidaRegion=c() #esperanza de vida de toda una region en y años
vprom=c() #vector promedio y año
vano<-c() #año
vregion<-c() #region
pos=1
for (x in w$Region){
if ( x== "Commonwealth of Independent States" && cont<12){
vidaRegion<-c(vidaRegion,w$EsperanzaVida1[pos])
cont<-cont+1
}
if (cont==12){
promAnio=sum(vidaRegion)/12 #promedio de y año
vprom<-c(promAnio,vprom)
vregion<-c(vregion,"Commonwealth of Independent States")
vano<-c(vano,ano)
ano<-ano-1
cont=0
vidaRegion=c()
}
pos=pos+1
}
DFCIS=data.frame(vprom,vregion,vano)
#para la variable North America and ANZ
ano=2020
cont=0
vidaRegion=c() #esperanza de vida de toda una region en y años
vprom=c() #vector promedio y año
vano<-c() #año
vregion<-c() #region
pos=1
for (x in w$Region){
if ( x== "North America and ANZ" && cont<3){
vidaRegion<-c(vidaRegion,w$EsperanzaVida1[pos])
cont<-cont+1
}
if (cont==3){
promAnio=sum(vidaRegion)/3 #promedio de y año
vprom<-c(promAnio,vprom)
vregion<-c(vregion,"North America and ANZ")
vano<-c(vano,ano)
ano<-ano-1
cont=0
vidaRegion=c()
}
pos=pos+1
}
DFNAA=data.frame(vprom,vregion,vano)
#para la variable Sub-Saharan Africa
ano=2020
cont=0
vidaRegion=c() #esperanza de vida de toda una region en y años
vprom=c() #vector promedio y año
vano<-c() #año
vregion<-c() #region
pos=1
for (x in w$Region){
if ( x== "Sub-Saharan Africa" && cont<39){
vidaRegion<-c(vidaRegion,w$EsperanzaVida1[pos])
cont<-cont+1
}
if (cont==39){
promAnio=sum(vidaRegion)/39 #promedio de y año
vprom<-c(promAnio,vprom)
vregion<-c(vregion,"Sub-Saharan Africa")
vano<-c(vano,ano)
ano<-ano-1
cont=0
vidaRegion=c()
}
pos=pos+1
}
DFSSA=data.frame(vprom,vregion,vano)
#para la variable Southeast Asia
ano=2020
cont=0
vidaRegion=c() #esperanza de vida de toda una region en y años
vprom=c() #vector promedio y año
vano<-c() #año
vregion<-c() #region
pos=1
for (x in w$Region){
if ( x== "Southeast Asia" && cont<9){
vidaRegion<-c(vidaRegion,w$EsperanzaVida1[pos])
cont<-cont+1
}
if (cont==9){
promAnio=sum(vidaRegion)/9 #promedio de y año
vprom<-c(promAnio,vprom)
vregion<-c(vregion,"Southeast Asia")
vano<-c(vano,ano)
ano<-ano-1
cont=0
vidaRegion=c()
}
pos=pos+1
}
DFSEA=data.frame(vprom,vregion,vano)
#para la variable East Asia
ano=2020
cont=0
vidaRegion=c() #esperanza de vida de toda una region en y años
vprom=c() #vector promedio y año
vano<-c() #año
vregion<-c() #region
pos=1
for (x in w$Region){
if ( x== "East Asia" && cont<6){
vidaRegion<-c(vidaRegion,w$EsperanzaVida1[pos])
cont<-cont+1
}
if (cont==6){
promAnio=sum(vidaRegion)/6 #promedio de y año
vprom<-c(promAnio,vprom)
vregion<-c(vregion,"East Asia")
vano<-c(vano,ano)
ano<-ano-1
cont=0
vidaRegion=c()
}
pos=pos+1
}
DFEA=data.frame(vprom,vregion,vano)
col_caract<-{}
col_caract["2020"]<-"cyan4"
col_caract["2019"]<-"cyan3"
col_caract["2018"]<-"cyan2"
col_caract["2017"]<-"cyan1"
col_caract["2016"]<-"lightblue"
col_caract["2015"]<-"lightblue1"
NWE=c(DFWE[1,1],DFWE[2,1],DFWE[3,1], DFWE[4,1], DFWE[5,1], DFWE[6,1])
NSA=c(DFSA[1,1], DFSA[2,1], DFSA[3,1], DFSA[4,1], DFSA[5,1], DFSA[6,1])
NCEE=c(DFCEE[1,1], DFCEE[2,1],DFCEE[3,1],DFCEE[4,1],DFCEE[5,1],DFCEE[6,1])
NMENA=c(DFMENA[1,1], DFMENA[2,1],DFMENA[3,1],DFMENA[4,1],DFMENA[5,1],DFMENA[6,1])
NLAC=c(DFLAC[1,1],  DFLAC[2,1],DFLAC[3,1],DFLAC[4,1], DFLAC[5,1],DFLAC[6,1])
NCIS=c(DFCIS[1,1],  DFCIS[2,1],DFCIS[3,1],DFCIS[4,1],DFCIS[5,1],DFCIS[6,1])
NNAA=c(DFNAA[1,1], DFNAA[2,1],DFNAA[3,1],DFNAA[4,1],DFNAA[5,1],DFNAA[6,1])
NSSA=c(DFSSA[1,1],  DFSSA[2,1],DFSSA[3,1],DFSSA[4,1],DFSSA[5,1],DFSSA[6,1])
NSEA=c(DFSEA[1,1],DFSEA[2,1],DFSEA[3,1],DFSEA[4,1],DFSEA[5,1],DFSEA[6,1])
NEA=c(DFEA[1,1], DFEA[2,1],DFEA[3,1],DFEA[4,1],DFEA[5,1],DFEA[6,1])
data2=data.frame(NWE,NSA,NCEE,NMENA,NLAC,NCIS,NNAA,NSSA,NSEA,NEA)
names(data2)=c("WE","NSA","CEE","MENA","LAC","CIS","NAA","SSA","SEA","EA")
barplot( height=as.matrix(data2), beside=TRUE, main="Gráfica promedio de esperanza de vida por regiones", ylab="Promedio de esperanza de vida", col=col_caract, legend=TRUE, legend.text = c("2020","2019","2018","2017","2016","2015"), fill=col_caract, ylim = c(0,95), args.legend = list( bty="n",x="top", ncol=3))
boxplot(F2015$`Logged GDP per capita`, F2016$`Logged GDP per capita`, F2017$`Logged GDP per capita`,  F2018$`Logged GDP per capita`,  F2019$`Logged GDP per capita`,  F2020$`Logged GDP per capita`,
main = "Distribución del log del PBI per cápita desde el 2015 al 2020",
names = c("2015", "2016","2017","2018","2019","2020"),
col =  c("orange","cyan","red","yellow","light green", "blue"),
border = "black",
ylab="Años",
xlab="Logaritmo del PBI per cápita desde el 2015 al 2020",
horizontal=T
)
abline(v=mean(F2015$`Logged GDP per capita`), col="orange",lwd=2) #Linea de la media aritmética
abline(v=mean(F2017$`Logged GDP per capita`), col="red",lwd=2) #Linea de la media aritmética
abline(v=mean(F2018$`Logged GDP per capita`), col="yellow",lwd=2) #Linea de la media aritmética
abline(v=mean(F2020$`Logged GDP per capita`), col="blue",lwd=2) #Linea de la media aritmética
D2015=read_csv("2015.csv")
D2016=read_csv("2016.csv")
D2017=read_csv("2017.csv")
D2018=read_csv("2018.csv")
D2019=read_csv("2019.csv")
D2020=read_csv("2020.csv")
PBI2015=D2015$`Logged GDP per capita`
PBI2016=D2016$`Logged GDP per capita`
PBI2017=D2017$`Logged GDP per capita`
PBI2018=D2018$`Logged GDP per capita`
PBI2019=D2019$`Logged GDP per capita`
PBI2020=D2020$`Logged GDP per capita`
PBI= c(PBI2015,PBI2016,PBI2017,PBI2018,PBI2019,PBI2020)
ESP2015=D2015$`Healthy life expectancy`
ESP2016=D2016$`Healthy life expectancy`
ESP2017=D2017$`Healthy life expectancy`
ESP2018=D2018$`Healthy life expectancy`
ESP2019=D2019$`Healthy life expectancy`
ESP2020=D2020$`Healthy life expectancy`
ESP= c(ESP2015,ESP2016,ESP2017,ESP2018,ESP2019,ESP2020)
plot(PBI2015,ESP2015,col="blue",pch=20,xlab="Log PBI per cápita", ylab="Esperanza de vida",main="Log PBI per cápita vs Esperanza de vida por años",cex=0.7)
abline(lm(ESP~PBI), col = "red",lwd=1)
legend(x="bottomright",legend=c("2015","2016","2017","2018","2019","2020"),col=c("firebrick","darkorange","gold1","darkgreen","deepskyblue"),lwd=1)
points(PBI2016,ESP2016,col="firebrick",pch=20,cex=0.7)
points(PBI2017,ESP2017,col="darkorange",pch=20 ,cex=0.7)
points(PBI2018,ESP2018,col="gold1",pch=20,cex=0.7)
points(PBI2019,ESP2019,col="darkgreen",pch=20,cex=0.7)
points(PBI2020,ESP2020,col="deepskyblue",pch=20,cex=0.7)
cor(PBI,ESP ,use ="complete.obs")
cov(PBI,ESP, use ="complete.obs")
F2020$`Perceptions of corruption`*100
mapply(DescriptoresFelicidad, list(Social = F2020$`Social support`*100, Libertad= F2020$`Freedom to make life choices`*100, Corrupcion=(F2020$`Perceptions of corruption` * 100)))
MF15=F2015[which(F2015$`Ladder score`==max(F2015$`Ladder score`)),1:3]
MF16=F2016[which(F2016$`Ladder score`==max(F2016$`Ladder score`)),1:3]
MF17=F2017[which(F2017$`Ladder score`==max(F2017$`Ladder score`)),1:3]
MF18=F2018[which(F2018$`Ladder score`==max(F2018$`Ladder score`)),1:3]
MF19=F2019[which(F2019$`Ladder score`==max(F2019$`Ladder score`)),1:3]
MF20=F2020[which(F2020$`Ladder score`==max(F2020$`Ladder score`)),1:3]
MASFELIZ<-rbind(MF15,MF16,MF17,MF18,MF19,MF20)
Year=c("2015","2016","2017","2018","2019","2020")
mutate(MASFELIZ,Year)
totalperceptions <- c(F2015$`Perceptions of corruption`,F2016$`Perceptions of corruption`,F2017$`Perceptions of corruption`,F2018$`Perceptions of corruption`,F2019$`Perceptions of corruption`,F2020$`Perceptions of corruption`)
countries <- c(F2015$`Country name`,F2016$`Country name`,F2017$`Country name`,F2018$`Country name`,F2019$`Country name`,F2020$`Country name`)
Atotal <- data.frame(countries,totalperceptions)
Per_NO <- c() #no_perceptions_p
Per_SI <- c() #perceptions_p
Fin_NO <- c() #no_perceptions_f
Fin_SI <- c() #perceptions_f
country <- c()
anio <- 2015
anios <- c()
cont <- 1
for (x in Atotal$countries) {
if(x == "Peru"){
Per_SI <- c(Per_SI,Atotal$totalperceptions[cont])
Per_NO <- c(Per_NO,1-Atotal$totalperceptions[cont])
anio <- anio + 1
}
if(x == "Finland"){
Fin_SI<- c(Fin_SI,Atotal$totalperceptions[cont])
Fin_NO <- c(Fin_NO,1-Atotal$totalperceptions[cont])
anios <- c(anios, anio)
}
cont <- cont + 1
}
percibeFinlandia <- cbind(Fin_SI,Fin_NO)
rownames(percibeFinlandia) = anios
percibePeru<- cbind(Per_SI,Per_NO)
rownames(percibePeru) = anios
f <- cbind(percibeFinlandia,percibePeru)
mosaicplot(percibeFinlandia, col=c("cyan4","cornsilk4"), xlab="Años", ylab="Porcentaje de la población", main="Percepcion de la corrupción de Finlandia" )
mosaicplot(percibePeru, col=c("firebrick3", "goldenrod1"), xlab="Años", ylab="Porcentaje de población", main="Percepcion de la corrupción de Perú" )
mosaicplot(f, col=c("green", "red"), main="Percepciones de corrupción entre Perú y Finlandia", xlab="Años", ylab="Porcentaje de la población" )
DF15=read_csv("2015.csv");
DF16=read_csv("2016.csv");
DF17=read_csv("2017.csv");
DF18=read_csv("2018.csv");
DF19=read_csv("2019.csv");
DF20=read_csv("2020.csv");
regiones<-c(unique(DF15$`Regional indicator`))
promedios15=c()
promedios16=c()
promedios17=c()
promedios18=c()
promedios19=c()
promedios20=c()
for(i in 1:10){
promedios15[i]=mean(DF15$`Freedom to make life choices`[DF15$`Regional indicator`==regiones[i]])
}
for(i in 1:10){
promedios16[i]=mean(DF16$`Freedom to make life choices`[DF16$`Regional indicator`==regiones[i]])
}
for(i in 1:10){
promedios17[i]=mean(DF17$`Freedom to make life choices`[DF17$`Regional indicator`==regiones[i]])
}
for(i in 1:10){
promedios18[i]=mean(DF18$`Freedom to make life choices`[DF18$`Regional indicator`==regiones[i]])
}
for(i in 1:10){
promedios19[i]=mean(DF19$`Freedom to make life choices`[DF19$`Regional indicator`==regiones[i]])
}
for(i in 1:10){
promedios20[i]=mean(DF20$`Freedom to make life choices`[DF20$`Regional indicator`==regiones[i]])
}
SI=c(promedios15*100,promedios16*100,promedios17*100,promedios18*100,promedios19*100,promedios20*100)
NO=c(100-promedios15*100,100-promedios16*100,100-promedios17*100,100-promedios18*100,100-promedios19*100,100-promedios20*100)
SA_si=c()
SA_no=c()
CEE_si=c()
CEE_no=c()
MENA_si=c()
MENA_no=c()
LAC_si=c()
LAC_no=c()
CMMWIS_si=c()
CMMWIS_no=c()
NANZ_si=c()
NANZ_no=c()
WE_si=c()
WE_no=c()
SSA_si=c()
SSA_no=c()
SEA_si=c()
SEA_no=c()
EA_si=c()
EA_no=c()
for(i in 1:10){
for(j in 0:5){
if(i==1){
SA_si[j+1]=SI[i+10*j]
SA_no[j+1]=NO[i+10*j]
}
if (i==2){
CEE_si[j+1]=SI[i+10*j]
CEE_no[j+1]=NO[i+10*j]
}
if (i==3){
MENA_si[j+1]=SI[i+10*j]
MENA_no[j+1]=NO[i+10*j]
}
if (i==4){
LAC_si[j+1]=SI[i+10*j]
LAC_no[j+1]=NO[i+10*j]
}
if (i==5)
{
CMMWIS_si[j+1]=SI[i+10*j]
CMMWIS_no[j+1]=NO[i+10*j]
}
if (i==6)
{
NANZ_si[j+1]=SI[i+10*j]
NANZ_no[j+1]=NO[i+10*j]
}
if (i==7)
{
WE_si[j+1]=SI[i+10*j]
WE_no[j+1]=NO[i+10*j]
}
if (i==8)
{
SSA_si[j+1]=SI[i+10*j]
SSA_no[j+1]=NO[i+10*j]
}
if (i==9)
{
SEA_si[j+1]=SI[i+10*j]
SEA_no[j+1]=NO[i+10*j]
}
if (i==10)
{
EA_si[j+1]=SI[i+10*j]
EA_no[j+1]=NO[i+10*j]
}
}
}
Percepcion_de_la_Libertad_eu1=matrix(c(CEE_si,CEE_no),ncol=2,byrow=T)
rownames(Percepcion_de_la_Libertad_eu1)=c(2015,2016,2017,2018,2019,2020)
colnames(Percepcion_de_la_Libertad_eu1)=c("Sí","No")
pleu1=as.table(Percepcion_de_la_Libertad_eu1)
mosaicplot(pleu1,main="Percepción de la libertad Europa central y del este",xlab="Porcentaje de la población que percibe que sí y no",ylab="Años",las=1,dir=c("h","v"),color=c("blue","red"))
Percepcion_de_la_Libertad_eu2=matrix(c(WE_si,WE_no),ncol=2)
rownames(Percepcion_de_la_Libertad_eu2)=c(2015,2016,2017,2018,2019,2020)
colnames(Percepcion_de_la_Libertad_eu2)=c("Sí","No")
pleu2=as.table(Percepcion_de_la_Libertad_eu2)
mosaicplot(pleu2,las=1,xlab="Porcentaje de la población que percibe que sí y no",ylab="Años",main="Percepción de libertad Europa del oeste",dir=c("h","v"),color=c("orange","darkgreen"))
DescriptoresFelicidad<-function(X){
return(list(
Mediana=round(median(X),2),
Media=round(mean(X),2)))
}
mapply(DescriptoresFelicidad, list(Felicidad = F2020$`Ladder score`, Esperanza_Vida= F2020$`Healthy life expectancy`))
ScoreFelicidad=c(F2015$`Ladder score`,F2016$`Ladder score`,F2017$`Ladder score`,F2018$`Ladder score`,F2019$`Ladder score`,F2020$`Ladder score`)
#ScoreFelicidad=(ScoreFelicidad-mean(ScoreFelicidad))/sd(ScoreFelicidad) #Estandarizando la distribución
hist(ScoreFelicidad,freq=F)
curve(dnorm(x, mean(ScoreFelicidad,na.rm = TRUE), sd = sd(ScoreFelicidad,na.rm = TRUE)), # Función dnorm a evaluar
0, 8, 100, # Límites de x y nº de valores a evaluar
col = "red",
las = 1, # Etiquetas alineadas horizontalmente
ann = FALSE, # Sin títulos en los ejes
xaxp = c(0, 300, 10),  # Marcas del eje x
ylim = c(0,0.5), # Límites del eje
yaxs = "i", add = TRUE) # Estilo del eje y, ajustado a los límites
EspVida=c(F2015$`Healthy life expectancy`,F2016$`Healthy life expectancy`,F2017$`Healthy life expectancy`,F2018$`Healthy life expectancy`,F2019$`Healthy life expectancy`,F2020$`Healthy life expectancy`)
hist(EspVida,freq=F)
curve(dnorm(x, mean(EspVida,na.rm = TRUE), sd = sd(EspVida,na.rm = TRUE)), # Función dnorm a evaluar
0, 90, 100, # Límites de x y nº de valores a evaluar
col = "red",
las = 1, # Etiquetas alineadas horizontalmente
ann = FALSE, # Sin títulos en los ejes
xaxp = c(0, 300, 10),  # Marcas del eje x
ylim = c(0,0.5), # Límites del eje
yaxs = "i", add = TRUE) # Estilo del eje y, ajustado a los límites
ScoreFelicidadLatinoamerica=c(F2015$`Ladder score`[F2015$`Regional indicator`=='Latin America and Caribbean'],F2016$`Ladder score`[F2016$`Regional indicator`=='Latin America and Caribbean'],F2017$`Ladder score`[F2017$`Regional indicator`=='Latin America and Caribbean'],F2018$`Ladder score`[F2018$`Regional indicator`=='Latin America and Caribbean'],F2019$`Ladder score`[F2019$`Regional indicator`=='Latin America and Caribbean'],F2020$`Ladder score`[F2020$`Regional indicator`=='Latin America and Caribbean'])
xbarra=mean(ScoreFelicidadLatinoamerica)
sigma=sd(ScoreFelicidadLatinoamerica)
n=126
alpha=0.1 #Nivel de significancia al 10% por ser una encuesta a personas
z=qnorm(1-alpha/2)
a=xbarra-(z*sigma/sqrt(n))
b=xbarra+(z*sigma/sqrt(n))
a
b
EspVidaLatinoamerica=c(F2015$`Healthy life expectancy`[F2015$`Regional indicator`=='Latin America and Caribbean'],F2016$`Healthy life expectancy`[F2016$`Regional indicator`=='Latin America and Caribbean'],F2017$`Healthy life expectancy`[F2017$`Regional indicator`=='Latin America and Caribbean'],F2018$`Healthy life expectancy`[F2018$`Regional indicator`=='Latin America and Caribbean'],F2019$`Healthy life expectancy`[F2019$`Regional indicator`=='Latin America and Caribbean'],F2020$`Healthy life expectancy`[F2020$`Regional indicator`=='Latin America and Caribbean'])
xbarra=mean(EspVidaLatinoamerica)
sigma=sd(EspVidaLatinoamerica)
n=126
alpha=0.1 #Nivel de significancia al 10% por ser una encuesta a personas
z=qnorm(1-alpha/2)
a=xbarra-(z*sigma/sqrt(n))
b=xbarra+(z*sigma/sqrt(n))
a
b
PercCorrLatinoamerica=c(F2015$`Perceptions of corruption`[F2015$`Regional indicator`=='Latin America and Caribbean'],F2016$`Perceptions of corruption`[F2016$`Regional indicator`=='Latin America and Caribbean'],F2017$`Perceptions of corruption`[F2017$`Regional indicator`=='Latin America and Caribbean'],F2018$`Perceptions of corruption`[F2018$`Regional indicator`=='Latin America and Caribbean'],F2019$`Perceptions of corruption`[F2019$`Regional indicator`=='Latin America and Caribbean'],F2020$`Perceptions of corruption`[F2020$`Regional indicator`=='Latin America and Caribbean'])
proporcion=mean(PercCorrLatinoamerica)
p=proporcion
n=length(PercCorrLatinoamerica)
alpha=0.1 #Nivel de significancia al 10% por ser una encuesta a personas
z=qnorm(1-alpha/2)
a=p-(z*sqrt(p*(1-p)/n))
b=p+(z*sqrt(p*(1-p)/n))
a
b
EstadisticoPrueba1=(5.7968-5)*sqrt(4992)/4.33
EstadisticoPrueba1
ValorCritico1=qnorm(0.1)
ValorCritico1
Z <- seq(-14, 14, by = 0.1)
plot(Z, dnorm(Z), type = "l",ylab="Densidad")
abline(v=c(ValorCritico1,EstadisticoPrueba1), lty = c(1,2), col = c("red", "blue"))
abline(h = 0, col = "gray")
legend(3.5,0.38,c("Valor Crítico","Estadístico de prueba"),col=c("red","blue"), lty = c(1,2))
EstadisticoPrueba2=(68.1-60)*sqrt(4992)/8.23
EstadisticoPrueba2
ValorCritico2=qnorm(0.9)
ValorCritico2
Z <- seq(-70, 70, by = 0.1)
plot(Z, dnorm(Z), type = "l",ylab="Densidad")
abline(v=c(ValorCritico2,EstadisticoPrueba2), lty = c(1,2), col = c("red", "blue"))
abline(h = 0, col = "gray")
legend(3.5,0.38,c("Valor Crítico","Estadístico de prueba"),col=c("red","blue"), lty = c(1,2))
EstadisticoPrueba3=(0.893-0.9)/sqrt((0.9*0.1)/4992)
EstadisticoPrueba3
ValorCritico3=qnorm(0.9)
ValorCritico3
Z <- seq(-3, 3, by = 0.1)
plot(Z, dnorm(Z), type = "l",ylab="Densidad")
abline(v=c(ValorCritico3,EstadisticoPrueba3), lty = c(1,2), col = c("red", "blue"))
abline(h = 0, col = "gray")
legend(-1.5,0.4,c("Valor Crítico","Estadístico de prueba"),col=c("red","blue"), lty = c(1,2))
D2015=read_csv("2015.csv")
D2016=read_csv("2016.csv")
D2017=read_csv("2017.csv")
D2018=read_csv("2018.csv")
D2019=read_csv("2019.csv")
D2020=read_csv("2020.csv")
PBI2015=D2015$`Logged GDP per capita`
PBI2016=D2016$`Logged GDP per capita`
PBI2017=D2017$`Logged GDP per capita`
PBI2018=D2018$`Logged GDP per capita`
PBI2019=D2019$`Logged GDP per capita`
PBI2020=D2020$`Logged GDP per capita`
PBI= c(PBI2015,PBI2016,PBI2017,PBI2018,PBI2019,PBI2020)
ESP2015=D2015$`Healthy life expectancy`
ESP2016=D2016$`Healthy life expectancy`
ESP2017=D2017$`Healthy life expectancy`
ESP2018=D2018$`Healthy life expectancy`
ESP2019=D2019$`Healthy life expectancy`
ESP2020=D2020$`Healthy life expectancy`
ESP= c(ESP2015,ESP2016,ESP2017,ESP2018,ESP2019,ESP2020)
plot(PBI2015,ESP2015,col="blue",pch=20,xlab="Log PBI per cápita", ylab="Esperanza de vida",main="Log PBI per cápita vs Esperanza de vida por años",cex=0.7)
abline(lm(ESP~PBI), col = "red",lwd=1)
legend(x="bottomright",legend=c("2015","2016","2017","2018","2019","2020"),col=c("firebrick","darkorange","gold1","darkgreen","deepskyblue"),lwd=1)
points(PBI2016,ESP2016,col="firebrick",pch=20,cex=0.7)
points(PBI2017,ESP2017,col="darkorange",pch=20 ,cex=0.7)
points(PBI2018,ESP2018,col="gold1",pch=20,cex=0.7)
points(PBI2019,ESP2019,col="darkgreen",pch=20,cex=0.7)
points(PBI2020,ESP2020,col="deepskyblue",pch=20,cex=0.7)
cor(PBI,ESP ,use ="complete.obs")
summary(lm(ESP~PBI))
ScoreFelicidad2015=F2015$`Ladder score`
ScoreFelicidad2016=F2016$`Ladder score`
ScoreFelicidad2017=F2017$`Ladder score`
ScoreFelicidad2018=F2018$`Ladder score`
ScoreFelicidad2019=F2019$`Ladder score`
ScoreFelicidad2020=F2020$`Ladder score`
plot(PBI2015,ScoreFelicidad2015,col="blue",pch=20,xlab="Log PBI per cápita", ylab="Score de Felicidad",main="Log PBI per cápita vs Score de Felicidad",cex=0.7)
abline(lm(ScoreFelicidad~PBI), col = "red",lwd=1)
legend(x="bottomright",legend=c("2015","2016","2017","2018","2019","2020"),col=c("firebrick","darkorange","gold1","darkgreen","deepskyblue"),lwd=1)
points(PBI2016,ScoreFelicidad2016,col="firebrick",pch=20,cex=0.7)
points(PBI2017,ScoreFelicidad2017,col="darkorange",pch=20 ,cex=0.7)
points(PBI2018,ScoreFelicidad2018,col="gold1",pch=20,cex=0.7)
points(PBI2019,ScoreFelicidad2019,col="darkgreen",pch=20,cex=0.7)
points(PBI2020,ScoreFelicidad2020,col="deepskyblue",pch=20,cex=0.7)
cor(PBI,ScoreFelicidad ,use ="complete.obs")
summary(lm(ScoreFelicidad~PBI))
Corrup2015=F2015$`Perceptions of corruption`
Corrup2016=F2016$`Perceptions of corruption`
Corrup2017=F2017$`Perceptions of corruption`
Corrup2018=F2018$`Perceptions of corruption`
Corrup2019=F2019$`Perceptions of corruption`
Corrup2020=F2020$`Perceptions of corruption`
Corrup=c(Corrup2015,Corrup2016,Corrup2017,Corrup2018,Corrup2019,Corrup2020)
plot(PBI2015,Corrup2015,col="blue",pch=20,xlab="Log PBI per cápita", ylab="Percepción de la corrupción",main="Log PBI per cápita vs Percepción de la corrupción",cex=0.7)
abline(lm(Corrup~PBI), col = "red",lwd=1)
legend(x="bottomright",legend=c("2015","2016","2017","2018","2019","2020"),col=c("firebrick","darkorange","gold1","darkgreen","deepskyblue"),lwd=1)
points(PBI2016,Corrup2016,col="firebrick",pch=20,cex=0.7)
points(PBI2017,Corrup2017,col="darkorange",pch=20 ,cex=0.7)
points(PBI2018,Corrup2018,col="gold1",pch=20,cex=0.7)
points(PBI2019,Corrup2019,col="darkgreen",pch=20,cex=0.7)
points(PBI2020,Corrup2020,col="deepskyblue",pch=20,cex=0.7)
cor(PBI,Corrup,use ="complete.obs")
summary(lm(Corrup~PBI))
# Acondicionamiento - Llamado de librerías
install.packages("readr")
library(readr)
install.packages("dplyr")
library(dplyr)
