Casos %>% group_by(Casos$VariableAleatoria) %>% sumamarise(Casos$VariableAleatoria/nrow(Casos))
library(dplyr)
Casos %>% group_by(Casos$VariableAleatoria) %>% summarise(Casos$VariableAleatoria/nrow(Casos))
library(dplyr)
Casos %>% group_by(c(1,2,3,4,5,6)) %>% summarise(Casos$VariableAleatoria/nrow(Casos))
table(Casos$VariableAleatoria/nrow(Casos))
library(dplyr)
table(Casos$VariableAleatoria/nrow(Casos))
Casos %>% group_by(c(1,2,3,4,5,6)) %>% summarise(table(Casos$VariableAleatoria/nrow(Casos)))
as.data.frame(table(Casos$VariableAleatoria/nrow(Casos)))
library(dplyr)
as.data.frame(table(Casos$VariableAleatoria/nrow(Casos)))
Casos %>% group_by(c(1,2,3,4,5,6)) %>% summarise(as.data.frame(table(Casos$VariableAleatoria/nrow(Casos))))
library(dplyr)
as.data.frame(table(Casos$VariableAleatoria/nrow(Casos)))
Casos %>% group_by(Casos$VariableAleatoria) %>% summarise(as.data.frame(table(Casos$VariableAleatoria/nrow(Casos))))
library(dplyr)
as.data.frame(table(Casos$VariableAleatoria/nrow(Casos)))
Casos %>% group_by(Casos$VariableAleatoria) %>% summarise(table(Casos$VariableAleatoria/nrow(Casos)))
library(dplyr)
as.data.frame(table(Casos$VariableAleatoria/nrow(Casos)))
Casos %>% group_by(Casos$VariableAleatoria) %>% summarise(table(Casos$VariableAleatoria/nrow(Casos))[2])
library(dplyr)
as.data.frame(table(Casos$VariableAleatoria/nrow(Casos)))
Casos %>% group_by(Casos$VariableAleatoria) %>% summarise(table(Casos$VariableAleatoria/nrow(Casos))[:][2])
library(dplyr)
as.data.frame(table(Casos$VariableAleatoria/nrow(Casos)))
Casos %>% group_by(X) %>% summarise(Casos$VariableAleatoria/nrow(Casos))
library(dplyr)
Casos %>% group_by(Casos$VariableAleatoria)
Casos
library(dplyr)
Casos %>% group_by(VariableAleatoria)
Casos %>% group_by(VariableAleatoria)
library(dplyr)
group_by(Casos,VariableAleatoria)
library(dplyr)
Casos %>% arrange(VariableAleatoria)
library(dplyr)
Casos %>% arrange(VariableAleatoria) %>% group_by(VariableAleatoria)
library(dplyr)
Casos %>% arrange(VariableAleatoria) %>% group_by(VariableAleatoria) %>% summarise(n()/nrow(Casos))
library(dplyr)
Casos %>% group_by(VariableAleatoria) %>% summarise(n()/nrow(Casos))
?n()
n()
n()
as.data.frame(table(Casos$VariableAleatoria))
col(as.data.frame(table(Casos$VariableAleatoria)),2)
as.data.frame(table(Casos$VariableAleatoria))
select(as.data.frame(table(Casos$VariableAleatoria)),Freq)
VA=select(as.data.frame(table(Casos$VariableAleatoria)),Freq)
library(dplyr)
VA=select(as.data.frame(table(Casos$VariableAleatoria)),Freq)
Casos %>% group_by(VariableAleatoria) %>% summarise(VA/nrow(Casos))
library(dplyr)
VA=select(as.data.frame(table(Casos$VariableAleatoria)),Freq)
Casos %>% group_by(VariableAleatoria) %>% summarise(unique(VariableAleatoria)/nrow(Casos))
library(dplyr)
Casos %>% group_by(VariableAleatoria) %>% summarise(unique(VariableAleatoria)/nrow(Casos))
unique(VariableAleatoria)
nrow(Casos)
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(unique(VariableAleatoria)/nrow(Casos))
sum(VA$VariableAleatoria*VA$`unique(VariableAleatoria)/nrow(Casos)`)
library(dplyr)
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(unique(VariableAleatoria)/nrow(Casos))
va
library(dplyr)
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(unique(VariableAleatoria)/nrow(Casos))
sum(VA$VariableAleatoria*VA$`unique(VariableAleatoria)/nrow(Casos)`)
library(dplyr)
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(unique(VariableAleatoria)/nrow(Casos))
VA
sum(VA$VariableAleatoria*VA$`unique(VariableAleatoria)/nrow(Casos)`)
library(dplyr)
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(n()/nrow(Casos))
VA
sum(VA$VariableAleatoria*VA$`unique(VariableAleatoria)/nrow(Casos)`)
sum(VA$VariableAleatoria*VA$`n()/nrow(Casos)`)
as.data.frame(table(VariableAleatoria))
library(dplyr)
GA = as.data.frame(table(VariableAleatoria))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(n()/nrow(Casos))
VA
sum(VA$VariableAleatoria*VA$`n()/nrow(Casos)`)
library(dplyr)
GA = as.data.frame(table(VariableAleatoria))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(GA/nrow(Casos))
VA
sum(VA$VariableAleatoria*VA$`n()/nrow(Casos)`)
library(dplyr)
GA = as.data.frame(table(VariableAleatoria)/nrow(Casos))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(GA/nrow(Casos))
VA
sum(VA$VariableAleatoria*VA$`n()/nrow(Casos)`)
GA
GA
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(as.data.frame(table(VariableAleatoria)/nrow(Casos)))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(table(VariableAleatoria)/nrow(Casos))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(as.data.frame(table(VariableAleatoria)/nrow(Casos)))
VA
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(as.data.frame(table(VariableAleatoria)/nrow(Casos)))
VA
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(table(VariableAleatoria)/nrow(Casos))
VA
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(as.data.frame(table(VariableAleatoria)/nrow(Casos)))
VA
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(table(VariableAleatoria)/nrow(Casos)))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(as.data.frame(table(VariableAleatoria)/nrow(Casos)))
VA
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(table(VariableAleatoria)/nrow(Casos))
VA
library(dplyr)
GA = as.data.frame(table(VariableAleatoria)/nrow(Casos))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(as.data.frame(table(VariableAleatoria)/nrow(Casos)))
VA
Esperanza = sum(VA$VariableAleatoria*VA$Freq)
VA$VariableAleatoria
VA$Freq
Esperanza = sum(VA$VariableAleatoria*VA$Freq)
library(dplyr)
GA = as.data.frame(table(VariableAleatoria)/nrow(Casos))
VA = Casos %>% group_by(VariableAleatoria) %>% summarise(table(VariableAleatoria)/nrow(Casos))
VA
VA$VariableAleatoria
VA$`table(VariableAleatoria)/nrow(Casos)`
Esperanza = sum(VA$VariableAleatoria*VA$`table(VariableAleatoria)/nrow(Casos)`)
Esperanza = sum(VA$VariableAleatoria*VA$`table(VariableAleatoria)/nrow(Casos)`)
Esperanza
VA
Desviacion = VA$VariableAleatoria**2
Desviacion = ((VA$VariableAleatoria**2)*VA$`table(VariableAleatoria)/nrow(Casos)`)-Esperanza**2
Desviación
Desviacion = ((VA$VariableAleatoria**2)*VA$`table(VariableAleatoria)/nrow(Casos)`)-Esperanza**2
Desviación
Desviacion = ((VA$VariableAleatoria**2)*VA$`table(VariableAleatoria)/nrow(Casos)`)-Esperanza**2
Desviacion
Desviacion = sum(((VA$VariableAleatoria**2)*VA$`table(VariableAleatoria)/nrow(Casos)`))-Esperanza**2
Desviacion
Desviacion=Varianza**0.5
Varianza = sum(((VA$VariableAleatoria**2)*VA$`table(VariableAleatoria)/nrow(Casos)`))-Esperanza**2
Varianza
Desviacion=Varianza**0.5
Desviacion=Varianza**0.5
Desviacion
replicate(100,sample(1:6,3))
replicate(100,sample(1:6,3,replace=T))
replicate(100,sample(1:6,3,replace=T))
replicate(100,sample(1:6,3,replace=T))
table(replicate(100,sample(1:6,3,replace=T)))
table(max(replicate(100,sample(1:6,3,replace=T))))
table(replicate(100,max(sample(1:6,3,replace=T)))))
table(replicate(100,max(sample(1:6,3,replace=T))))
table(replicate(100,max(sample(1:6,3,replace=T))))
table(replicate(100,max(sample(1:6,3,replace=T))))
table(replicate(1000,max(sample(1:6,3,replace=T))))
table(replicate(1000,max(sample(1:6,3,replace=T)))/1000)
table(replicate(1000,max(sample(1:6,3,replace=T))))
table(replicate(1000,max(sample(1:6,3,replace=T))))/1000
table(replicate(10000,max(sample(1:6,3,replace=T))))/1000
table(replicate(100000,max(sample(1:6,3,replace=T))))/1000
table(replicate(100000,max(sample(1:6,3,replace=T))))/1000
table(replicate(100000,max(sample(1:6,3,replace=T))))/1000
table(replicate(100000,max(sample(1:6,3,replace=T))))/100000
table(replicate(1000000,max(sample(1:6,3,replace=T))))/1000000
table(replicate(100000,max(sample(1:6,3,replace=T))))/100000
dbinom(5,80,0.05)
pbinom(5,80,0.05)
pbinom(57,80,0.75)
dbinom(57,80,0.75)
pbinom(56,80,0.75)
pbinom(58,80,0.75)
pbinom(57,80,0.75)
ppoiss(57,60)
ppois(57,60)
dgeom(3,0.5)
pgeom(3,0.5)
dgeom(4,0.5)
pgeom(5,0.5)
pgeom(4,0.5)
pgeom(3,0.5)
dgeom(3,0.5)
dgeom(4,0.5)
dgeom(3,0.5)
pgeom(3,0.5)
pgeom(4,0.5)
dgeom(4,0.5)
dgeom(3,0.5)
dgeom(4,0.5)
1-ppois(5,100)
1-ppois(95,100)
1-pnbinom(4,99,0.06)
1-pnbinom(4,99,0.06)
pnbinom(4,99,0.06)
dnbinom(4,99,0.06)
1-pnbinom(4,99,0.94)
pnbinom(2,18,98)
pnbinom(2,18,0.98)
pnbinom(2,18,0.02)
pnbinom(2,100,0.96)
pnbinom(1,100,0.96)
ppois(130,120)
dgeom(5,1/6)
dgeom(4,1/6)
dgeom(5,1/6)
dgeom(4,1/6)
pbinom(100,130,19/15)
pbinom(100,130,15/19)
dbinom(100,130,15/19)
ppios(57,60)
ppois(57,60)
sum(dpois(0:57,60))
ppois(a,b)
b=3*24 #valor esperado
a = 29
ppois(a,b)
dunif(0.4)
punif()
dunif(1.1)
punif()
punif(10.1,10,20)
tener un intervalo
punif(24,20,30)
qunif(0.4,20,30)
dexp(1.2,3)
pexp(1.2,3)
dexp(1.2,3)
#Te da el area acumulada hasta el punto x, es una integral.
pexp(1.2,3)
dexp(1.2,3)
3*exp(-3*1.2) #Es lo mismo
qnbinom(4,size=0,0.15)
ppois(169,180)
dnbinom(3,3,0.53)
dnbinom(0,3,0.53)
dnbinom(16,4,0.01)
pnbinom(16,4,0.01)
1-pnbinom(16,4,0.01)
pbinom(4,20,0.01)
1-pbinom(4,20,0.01)
1-dbinom(4,20,0.01)
1-dbinom(3,20,0.01)
dhyper(4,7,12,8)
dnbinom(0,6,0.9)
dbinom(0,6,0.1)
ppoiss(130,120)
ppois(130,120)
dpois(130,120)
dbinom(0,20,0.01)
1-pbinom(3,20,0.01)
dnbinom(21,4,0.15)
dhyper(2,7,5,12)
dhyper(2,7,5,3)
dgeom(1,0.3)
# Probando la normalidad gráficamente comparando la normal con la densidad
# densidad
plot(density(g))
library(readr)
library(dplyr)
DFL<-read.csv( "Base de datos Limpia.csv")
n_observaciones <- nrow(DFL)
n_variables <- ncol(DFL)
ifelse(require(readr)==T, library(readr))
ifelse(require(ggplot2)==T, library(ggplot2))
a <-('1. Plantear temas Iniciales')
b <- ('2. Escoger tema para P1')
c <- ('3. Preparar la P1')
d <- ('4. Implementar comentarios de P1')
e <- ('5. Preparar la P2')
plan <- data.frame(Actividad = c(a, b, c, d, e),
start = c(2, 6.2, 6.8, 8.8, 10),
end = c(3.7, 6.8, 7.7, 9, 14)
)
if(!require(ggplot2)){install.packages('ggplot2')}
ggplot(plan, aes(x=start, xend=end, y=Actividad, yend=Actividad )) +
theme_bw()+ #use ggplot theme with black gridlines and white background
geom_segment(size=8) + #increase line width of segments in the chart
labs(title='Planificacion', x='semana', y='Actividad')
ifelse(require(readr)==T, library(readr))
DF = read_csv("Spotify 2010 - 2019 Top 100.csv")
variables <- colnames(DF)
DF1 <- DF[,-4] # Elimina Year realeased
DF2 <- DF1[,-4] # Elimina added
DF3 <- DF2[,-5] # Elimina nrgy
DF4 <- DF3[,-5] # Elimina dnce
DF5 <- DF4[,-6] # Elimina live
DF6 <- DF5[,-6] # Elimina val
DF7 <- DF6[,-7] # Elimina acous
DF8 <- DF7[,-7] # Elimina soch
DF9 <- DF8[,-7] # Elimina pop
DFL <- DF9[,-8] # Elimina artis type
DFL
#Verificaremos que el archivo no cuente con datos faltantes
Na1 = sum((is.na(DFL$title)))
Na2 = sum((is.na(DFL$artist)))
Na3 = sum((is.na(DFL$`top genre`)))
Na4 = sum((is.na(DFL$bpm)))
Na5 = sum((is.na(DFL$dB)))
Na6 = sum((is.na(DFL$dur)))
Na7 = sum((is.na(DFL$`top year`)))
#Nos indica que tenemos 3 valores N.A a lo último de la tabla, los eliminamos.
DFL = head(DFL, 1000)
DFL
#Selección canciones de cada año
TOP2010 <- DFL[!(DFL$`top year` > 2010),]
TOP2011 <- DFL[(DFL$`top year` == 2011),]
TOP2012 <- DFL[(DFL$`top year` == 2012),]
TOP2013 <- DFL[(DFL$`top year` == 2013),]
TOP2014 <- DFL[(DFL$`top year` == 2014),]
TOP2015 <- DFL[(DFL$`top year` == 2015),]
TOP2016 <- DFL[(DFL$`top year` == 2016),]
TOP2017 <- DFL[(DFL$`top year` == 2017),]
TOP2018 <- DFL[(DFL$`top year` == 2018),]
TOP2019 <- DFL[(DFL$`top year` == 2019),]
#Crea base de datos limpia por cada año
write_csv(TOP2010, "TOP100_2010.csv")
write_csv(TOP2011, "TOP100_2011.csv")
write_csv(TOP2012, "TOP100_2012.csv")
write_csv(TOP2013, "TOP100_2013.csv")
write_csv(TOP2014, "TOP100_2014.csv")
write_csv(TOP2015, "TOP100_2015.csv")
write_csv(TOP2016, "TOP100_2016.csv")
write_csv(TOP2017, "TOP100_2017.csv")
write_csv(TOP2018, "TOP100_2018.csv")
write_csv(TOP2019, "TOP100_2019.csv")
#Base de datos limpia con todos los años
write_csv(DFL, "Base de Datos Limpia.csv")
ifelse(require(readr)==T, library(readr))
DD = read_csv("Base de Datos Limpia.csv")
Frecuencia_artista <- table(DD$artist)
Frecuencia_artista
ifelse(require(readr)==T, library(readr))
ifelse(require(dplyr)==T, library(dplyr))
BDL= read_csv("Base de Datos Limpia.csv")
#Moda
#Total BDL
dt= as.data.frame(table(BDL$`top genre`))
names(dt) = c("Géneros","# de canciones")
dt
#Vemos que la moda es dance pop
cmt=BDL[BDL$`top genre`=="dance pop",] #canciones con dance pop
cmt
#Gráfico de modas de género por año
#Total
plot(table(BDL$`top genre`),type="l",main="Gráfico de los géneros de canciones 2010-2019",ylab="Cantidad de canciones",las=2,cex.axis=0.6)
#Gráfico de "dance pop" por apariciones por año
a=BDL[BDL$`top genre`=="dance pop",]$`top genre`
b=BDL[BDL$`top genre`=="dance pop",]$`top year`
t=table(a,b)
barplot(t,col="red",main="Apariciones de 'dance pop' por año",ylab="Número de apariciones",xlab="Año")
barplot(t/100,col="blue", main="Porcentaje de apariciones de dance pop por año", ylab="Porcentaje de apariciones",xlab="Año")
#¿Qué hace especial a "dance pop"?
#Comparando con btm
a=BDL[BDL$`top genre`=="dance pop",]$`top genre`
b=BDL[BDL$`top genre`=="dance pop",]$bpm
#Gráfica de bpm en dance pop
t2 = table(b)
dt2=as.data.frame(t2)
names(dt2)=c("BPM","# de canciones en las que se encuentra")
dt2
barplot(t2,main="cantidad de canciones con cierto bpm",ylab="# de canciones",xlab="bpm",col="green",las=2)
#Vemos que hay un bpm que destaca el 128
#Relacionamos el bpm con el año
c=BDL[BDL$`top genre`=="dance pop",]$bpm
d=BDL[BDL$`top genre`=="dance pop",]$`top year`
t=tail(head(table(c,d),53),1) #Encontramos las apariciones del bpm 128 por año
barplot(t,main="Presencia del bpm modal 128 en cada año",ylab="#Número de canciones",xlab="año",col="brown")
#El bpm modal de 128 aparece veces en los años 2010-1015 (mejores años)
#Canciones que cuentan con este bpm y que son "dance pop":
#The Time (Dirty Bit)
#Club Can't Handle Me (feat. David Guetta)
#Good Feeling
#¿Qué hace especial a "dance pop"?
#Comparando con duración
a=BDL[BDL$`top genre`=="dance pop",]$`top genre`
b=BDL[BDL$`top genre`=="dance pop",]$dur
#Gráfica de duración en dance pop
t2 = table(b)
barplot(t2,main="Duración de las canciones 'dance pop'",ylab="# de canciones",xlab="duración en segundos",col="orange")
#No hay una duración en específico única, varían desde 6 hasta 1
mean(b) #En segundos
mean(b/60) #En minutos
sd(b) #Desviacion estandar
library(readr)
library(dplyr)
TB4 = read_csv("Base de datos limpia.csv")
TB4
hist(TB4$bpm, breaks = 20, xlab = "Beats por minuto(bpm)", ylab = "Densidad", main="Histograma de bpm", col = "gray", probability = TRUE)
lines(density(TB4$bpm), col = "blue", lwd = 2) # Densidad
x <- seq(min(TB4$bpm), max(TB4$bpm), length = 40)
f <- dnorm(x, mean = mean(TB4$bpm), sd = sd(TB4$bpm))
lines(x, f, col = "red", lwd = 2)#normal
legend("topright", c("Histograma", "Densidad", "Normal"), box.lty = 0,
lty = 1, col = c("black", "blue", "red"), lwd = c(1, 2, 2))
boxplot(main="BoxPlot bpm" ,xlab="ppm",TB4$bpm, horizontal = TRUE)
segments(x0 = mean(TB4$bpm), y0 = 0.8,
x1 = mean(TB4$bpm), y1 = 1.2,
col = "red", lwd = 2)
points(mean(TB4$bpm), 1, col = 3, pch = 19)
par(mfrow = c(1, 1))
legend("topright", c("Diagrama BoxPLot", "Mediana"), box.lty = 0,
lty = 1, col = c("black", "red"), lwd = c(2, 2))
boxplot(TB4$bpm ~ TB4$`top year`, xlab="TOP YEAR", ylab="bpm")
ifelse(require(readr)==T, library(readr))
DFL= read_csv("Base de Datos Limpia.csv")
#Moda Total
Frecuencia_dB <- table(DFL$dB) # -6 dB -> 212/1000 -> 21.2%
#Promedio
Promedio_dB <- mean(DFL$dB) # -5.663 dB
#Mediana
Mediana_dB <- median(DFL$dB) # -5 dB
plot(Frecuencia_dB,type="l",main="Gráfico de los decibeles de canciones entre 2010-2019",ylab="Cantidad de canciones",xlab="Decibeles")
#Gráfico de "decibel" por apariciones por año
a=DFL[DFL$dB== -6,]$dB
b=DFL[DFL$dB== -6,]$`top year`
t=table(a,b)
#Apariciones de -6dB por Año
barplot(t,col="red",main="Apariciones de -6 Decibeles por año",ylab="Número de apariciones",xlab="Año")
#Porcentaje de apariciones de decibeles por año
barplot(t/100,col="blue", main="Porcentaje de apariciones de -6 Decibeles por año", ylab="% de apariciones",xlab="Año")
ifelse(require(tidyverse)==T, library(tidyverse))
Duracion<- DFL %>% group_by(`top year`) %>% summarise(dur_avg = mean(dur), dur_median = median (dur), dur_cv = sd(dur)/mean(dur), max_dur = max(dur),min_dur=min(dur))%>% arrange(desc(dur_avg))
Duracion
Promedio <- mean(Duracion$dur_avg)
Promedio
Dur_Genero<- DFL %>% group_by(`top genre`) %>% summarise(dur_avg = mean(dur))%>% arrange(desc(dur_avg))
Dur_Genero
boxplot(Dur_Genero$dur_avg,main="Duracion promedio en segundos de cada genero top",xlab="Segundos promedio",horizontal = TRUE,col = "red")
Cuantil_1 <- quantile(Dur_Genero$dur_avg,0.25)
Cuantil_2 <- quantile(Dur_Genero$dur_avg,0.50)
Cuantil_3 <- quantile(Dur_Genero$dur_avg,0.75)
library(dplyr)
BDL = read.csv("Base de Datos Limpia.csv")
genero=filter(BDL,BDL$top.genre=="dance pop")
Ta=data.frame(table(genero$top.year))
colnames(Ta) <- c("Año","# de canciones")
Ta
nrow(genero)
cat("P(x=Dance pop)=",round(361/1000,2))
boxplot(table(BDL$top.genre)/nrow(BDL),horizontal=T)
aea=BDL
P0=nrow(filter(filter(aea,aea$top.year==2010),filter(aea,aea$top.year==2010)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2010))
P1=nrow(filter(filter(aea,aea$top.year==2011),filter(aea,aea$top.year==2011)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2011))
P2=nrow(filter(filter(aea,aea$top.year==2012),filter(aea,aea$top.year==2012)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2012))
P3=nrow(filter(filter(aea,aea$top.year==2013),filter(aea,aea$top.year==2013)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2013))
P4=nrow(filter(filter(aea,aea$top.year==2014),filter(aea,aea$top.year==2014)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2014))
P5=nrow(filter(filter(aea,aea$top.year==2015),filter(aea,aea$top.year==2015)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2015))
P6=nrow(filter(filter(aea,aea$top.year==2016),filter(aea,aea$top.year==2016)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2016))
P7=nrow(filter(filter(aea,aea$top.year==2017),filter(aea,aea$top.year==2017)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2017))
P8=nrow(filter(filter(aea,aea$top.year==2018),filter(aea,aea$top.year==2018)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2018))
P9=nrow(filter(filter(aea,aea$top.year==2019),filter(aea,aea$top.year==2019)$top.genre=="dance pop"))/nrow(filter(aea,aea$top.year==2019))
tabla1=data.frame(Año=c(2010:2019),Probabilidad=c(P0,P1,P2,P3,P4,P5,P6,P7,P8,P9))
tabla1
cat("P(2015|Si)=",round((0.38*0.1)/0.361,2))
cat("P(No|2017)=",round((0.75*0.1)/0.639,2))
cat("P(No|2017)=",round((0.75*0.1)/0.639,2))
BDL = read.csv("Base de Datos Limpia.csv")
# Grafica data
g=BDL[BDL$top.genre=="dance pop" & BDL$dur<350,]$dur
# Grafica
hist(g,breaks = 200,main="Duración de las canciones 'dance pop'",ylab="# de canciones",xlab="duración en segundos",col="yellow")
# Probando la normalidad gráficamente comparando la normal con la densidad
# densidad
plot(density(g))
# normal
curve(dnorm(x,mean=mean(g),sd=sd(g)),
add=TRUE, col="blue", lwd=2)
abline(v=mean(g),col="red", lwd=3, lty=2)
abline(v=median(g),col="blue", lwd=3, lty=3)
legend(x = "topright",legend = c("media", "mediana"),lty = c(2, 3),col = c("red", "blue"),lwd = 3)
```
# Probando la normalidad gráficamente comparando la normal con la densidad
# densidad
plot(density(g))
# normal
curve(dnorm(x,mean=mean(g),sd=sd(g)),
add=TRUE, col="blue", lwd=2)
abline(v=mean(g),col="red", lwd=3, lty=2)
abline(v=median(g),col="blue", lwd=3, lty=3)
legend(x = "topright",legend = c("media", "mediana"),lty = c(2, 3),col = c("red", "blue"),lwd = 3)
qqnorm(g, pch = 19, col = "gray50")
qqline(g)
# Probando la normalidad con Lilliefors debido a que shapiro solo nos sirve para data menor de 50 observaciones
#install.packages("nortest")
library("nortest")
# Probando la normalidad con Lilliefors debido a que shapiro solo nos sirve para data menor de 50 observaciones
#install.packages("nortest")
library("nortest")
lillie.test(x = g)
#X≈N(216.0084,28.38822)
# P(204.43≤X≤239)= P(X<=239)-P(X<=204.43)
pnorm(239,mean(g),sd(g))-pnorm(204.43,mean(g),sd(g))
#Graficamos la region entre estos dos intervalos
regionX=seq(204.43,239,0.01)
xP <- c(204.43,regionX,239)
yP <- c(0,dnorm(regionX,mean(g),sd(g)),0)
curve(dnorm(x,mean(g),sd(g)),xlim=c(100,325),yaxs="i",ylim=c(0,0.015),ylab="f(x)",
main='Densidad N(216.0084,28.38822)')
polygon(xP,yP,col="orange1")
box()
#X≈N(216.0084,28.38822)
# P(204.43≤X≤239)= P(X<=239)-P(X<=204.43)
pnorm(239,mean(g),sd(g))-pnorm(204.43,mean(g),sd(g))
regionX=seq(204.43,239,0.01)
xP <- c(204.43,regionX,239)
yP <- c(0,dnorm(regionX,mean(g),sd(g)),0)
curve(dnorm(x,mean(g),sd(g)),xlim=c(100,325),yaxs="i",ylim=c(0,0.015),ylab="f(x)",
main='Densidad N(216.0084,28.38822)')
polygon(xP,yP,col="orange1")
box()
setwd("C:/Users/sebas/Desktop/Proyecto 2")
setwd("C:/Users/sebas/Desktop/Proyecto 2/Informe")
