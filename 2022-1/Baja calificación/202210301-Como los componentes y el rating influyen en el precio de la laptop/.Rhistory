aes(x = Marca, fill = Generación.Procesador , na.rm=TRUE) +
geom_bar() +
scale_fill_hue(direction = 1) +
coord_flip() +
theme_minimal()
ggplot(datos) +
aes(x = Marca, fill = Generación.Procesador , na.rm=TRUE) +
geom_bar() +
scale_fill_hue(direction = 1) +
coord_flip() +
theme_minimal()
ggplot(datos) +
aes(x = Marca, fill = Generación.Procesador) +
geom_bar() +
scale_fill_hue(direction = 1) +
coord_flip() +
theme_minimal()
esquisse:::esquisser()
# Aplicamos una lógica para instalar paquetes en caso de no estar instalado
lista.paquetes <- c("readr", "dplyr", "ggplot2")
nuevos.paquetes <- lista.paquetes[!(lista.paquetes %in% installed.packages()[,"Package"])]
if(length(nuevos.paquetes)) install.packages(nuevos.paquetes) # instala si no está instalado
library(readr)
library(dplyr)
library(ggplot2)
datos <- read.csv("Datos.csv", header = TRUE, sep = ";", dec = ".", fill = FALSE, encoding = "unknown")
datos$Precio.Actual<-NULL
datos$Descuento<-NULL
datos$Calificación<-NULL
datos$Visualizaciones<-NULL
datos$Marca[datos$Marca %in% c("")]<- c(NA)
datos$Modelo[datos$Modelo %in% c("")]<- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Procesador..Marca.[datos$Procesador..Marca. %in% c("")]<- c(NA)
datos$Ram_gb[datos$Ram_gb %in% c("")]<- c(NA)
datos$HDD[datos$HDD %in% c("")]<- c(NA)
datos$os_bit[datos$os_bit %in% c("")]<- c(NA)
datos$os[datos$os %in% c("")]<- c(NA)
datos$Tarjeta_Grafica_Gb[datos$Tarjeta_Grafica_Gb %in% c("")]<- c(NA)
datos$Peso[datos$Peso %in% c("")]<- c(NA)
datos$Garantía..Años.[datos$Garantía..Años. %in% c("")]<- c(NA)
datos$Pantalla.Táctil[datos$Pantalla.Táctil %in% c("")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$msoffice[datos$msoffice %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("")]<- c(NA)
datos$Puntuación..Estrellas.[datos$Puntuación..Estrellas. %in% c("")]<- c(NA)
# Eliminamos los datos con errores en el CSV, tales como valores que por definición las variables no puedan tener
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("5")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i5")] <- c("Core i5")
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("Core")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i7")] <- c("Core i7")
datos$Generación.Procesador[datos$Generación.Procesador %in% c("Missing")] <- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("i5")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$SSD[datos$SSD %in% c("")]<- c(NA)
datos$SSD[datos$SSD %in% c("32")]<- c(NA)
datos$os[datos$os %in% c("Missing")] <- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("0")]<- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("0")]<- c(NA)
boxplot(datos$Precio.Anterior~datos$Nombre.Procesador,las=2,main="Precio de las laptops en comparación de sus procesadores",xlab="",ylab = "Precio de la laptop",col=palette(rainbow(7)))
boxplot(datos$Puntuación..Estrellas.~datos$Generación.Procesador,main="Gráfico sobre la puntuación de acuerdo a la generación de cada procesador",xlab = "Generación del procesador",ylab = "Puntuación(1-5) ",col=palette(rainbow(6)))
hist(datos$Ram_gb,main ="Preferencia de RAM por los consumidores ",xlab = "GB de RAM",ylab ="Frecuencia",col="lightcyan" )
boxplot(datos$Precio.Anterior~datos$Tipo_Ram, las=2, col=c("blue", "green", "yellow", "red", "pink", "brown", "black"), main="Gráfica de Tipos de Ram", xlab="Tipo de Ram", ylab ="Precio de laptop")
boxplot(datos$Precio.Anterior~datos$SSD, las=2, col=c("blue", "green", "yellow", "red", "pink", "brown", "black"), main="Gráfica de SSD", xlab="Almacenamiento del SSD en GB", ylab ="Precio de laptop")
boxplot(datos$Precio.Anterior~datos$HDD, las=2, col=c("blue", "green", "yellow", "red", "pink", "brown", "black"), main="Gráfica de HDD", xlab="Almacenamiento del HDD en GB", ylab ="Precio de laptop")
View(datos)
dbinom(3,3, 0.5)
dbinom(3,3, 0.2)
dbinom(3,3, 0.25)
dgeom(2, 0.3)
dgeom(1, 0.3)
dgeom(2, 0.3)
pgeom(2, 0.3)
pgeom(1, 0.3)
pnbinom(0, 6, 0.9)
pgeom(3, 0.53)
pgeom(2, 0.53)
pgeom(4, 0.53)
dgeom(4, 0.53)
dgeom(3, 0.53)
dbinom(3,8, 0.368)
dbinom(3,8, 0.36)
dbinom(3,8, 0.3)
dpois(95, 100)
dpois(100, 95)
dpois(95, 100)
print("Probabilidad de tener mascotas antes de la pandemia")
round(table(DF$AP_ESTADO)/nrow(DF),4)
lista.paquetes <- c("readr","funModeling","knitr","dplyr","printr","Hmisc","lattice","survival","Formula","ggplot2")
nuevos.paquetes <- lista.paquetes[!(lista.paquetes %in% installed.packages()[,"Package"])]
if(length(nuevos.paquetes)) install.packages(nuevos.paquetes)
library(funModeling)
library(readr)
library(knitr)
library(dplyr)
library(printr)
library(Hmisc)
library(lattice)
library(survival)
library(Formula)
library(ggplot2)
DF <- read_csv("RESPUESTAS_2.csv")
print("Probabilidad de tener mascotas antes de la pandemia")
round(table(DF$AP_ESTADO)/nrow(DF),4)
print("Probabilidad de tener mascotas durante la pandemia")
round(table(DF$DP_NUM_MASQ)/nrow(DF),4)
print("Probabilidad de tener mascota")
round(table(DF$AP_ESTADO,DF$DP_NUM_MASQ)/nrow(DF),4)
print("Probabilidad de que tenga mascotas antes y ahora")
datos <- read.csv("Datos.csv", header = TRUE, sep = ";", dec = ".", fill = FALSE, encoding = "unknown")
View(datos)
datos$Precio.Actual<-NULL
datos$Descuento<-NULL
datos$Calificación<-NULL
datos$Visualizaciones<-NULL
datos$Marca[datos$Marca %in% c("")]<- c(NA)
datos$Modelo[datos$Modelo %in% c("")]<- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Procesador..Marca.[datos$Procesador..Marca. %in% c("")]<- c(NA)
datos$Ram_gb[datos$Ram_gb %in% c("")]<- c(NA)
datos$HDD[datos$HDD %in% c("")]<- c(NA)
datos$os_bit[datos$os_bit %in% c("")]<- c(NA)
datos$os[datos$os %in% c("")]<- c(NA)
datos$Tarjeta_Grafica_Gb[datos$Tarjeta_Grafica_Gb %in% c("")]<- c(NA)
datos$Peso[datos$Peso %in% c("")]<- c(NA)
datos$Garantía..Años.[datos$Garantía..Años. %in% c("")]<- c(NA)
datos$Pantalla.Táctil[datos$Pantalla.Táctil %in% c("")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$msoffice[datos$msoffice %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("")]<- c(NA)
datos$Puntuación..Estrellas.[datos$Puntuación..Estrellas. %in% c("")]<- c(NA)
# Eliminamos los datos con errores en el CSV, tales como valores que por definición las variables no puedan tener
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("5")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i5")] <- c("Core i5")
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("Core")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i7")] <- c("Core i7")
datos$Generación.Procesador[datos$Generación.Procesador %in% c("Missing")] <- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("i5")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$SSD[datos$SSD %in% c("")]<- c(NA)
datos$SSD[datos$SSD %in% c("32")]<- c(NA)
datos$os[datos$os %in% c("Missing")] <- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("0")]<- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("0")]<- c(NA)
datos$Precio.Actual<-NULL
datos$Descuento<-NULL
datos$Calificación<-NULL
datos$Visualizaciones<-NULL
datos$Marca[datos$Marca %in% c("")]<- c(NA)
datos$Modelo[datos$Modelo %in% c("")]<- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Procesador..Marca.[datos$Procesador..Marca. %in% c("")]<- c(NA)
datos$Ram_gb[datos$Ram_gb %in% c("")]<- c(NA)
datos$HDD[datos$HDD %in% c("")]<- c(NA)
datos$os_bit[datos$os_bit %in% c("")]<- c(NA)
datos$os[datos$os %in% c("")]<- c(NA)
datos$Tarjeta_Grafica_Gb[datos$Tarjeta_Grafica_Gb %in% c("")]<- c(NA)
datos$Peso[datos$Peso %in% c("")]<- c(NA)
datos$Garantía..Años.[datos$Garantía..Años. %in% c("")]<- c(NA)
datos$Pantalla.Táctil[datos$Pantalla.Táctil %in% c("")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$msoffice[datos$msoffice %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("")]<- c(NA)
datos$Puntuación..Estrellas.[datos$Puntuación..Estrellas. %in% c("")]<- c(NA)
# Eliminamos los datos con errores en el CSV, tales como valores que por definición las variables no puedan tener
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("5")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i5")] <- c("Core i5")
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("Core")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i7")] <- c("Core i7")
datos$Generación.Procesador[datos$Generación.Procesador %in% c("Missing")] <- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("i5")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$Ram_gb[datos$Tipo_Ram %in% c("5")]<- c(NA)
datos$SSD[datos$SSD %in% c("")]<- c(NA)
datos$SSD[datos$SSD %in% c("32")]<- c(NA)
datos$os[datos$os %in% c("Missing")] <- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("0")]<- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("0")]<- c(NA)
View(datos)
datos$Precio.Actual<-NULL
datos$Descuento<-NULL
datos$Calificación<-NULL
datos$Visualizaciones<-NULL
datos$Marca[datos$Marca %in% c("")]<- c(NA)
datos$Modelo[datos$Modelo %in% c("")]<- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Procesador..Marca.[datos$Procesador..Marca. %in% c("")]<- c(NA)
datos$Ram_gb[datos$Ram_gb %in% c("")]<- c(NA)
datos$HDD[datos$HDD %in% c("")]<- c(NA)
datos$os_bit[datos$os_bit %in% c("")]<- c(NA)
datos$os[datos$os %in% c("")]<- c(NA)
datos$Tarjeta_Grafica_Gb[datos$Tarjeta_Grafica_Gb %in% c("")]<- c(NA)
datos$Peso[datos$Peso %in% c("")]<- c(NA)
datos$Garantía..Años.[datos$Garantía..Años. %in% c("")]<- c(NA)
datos$Pantalla.Táctil[datos$Pantalla.Táctil %in% c("")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$msoffice[datos$msoffice %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("")]<- c(NA)
datos$Puntuación..Estrellas.[datos$Puntuación..Estrellas. %in% c("")]<- c(NA)
# Eliminamos los datos con errores en el CSV, tales como valores que por definición las variables no puedan tener
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("5")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i5")] <- c("Core i5")
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("Core")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i7")] <- c("Core i7")
datos$Generación.Procesador[datos$Generación.Procesador %in% c("Missing")] <- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("i5")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$Ram_gb[datos$Tipo_Ram %in% c("5")]<- c(NA)
datos$SSD[datos$SSD %in% c("")]<- c(NA)
datos$SSD[datos$SSD %in% c("32")]<- c(NA)
datos$os[datos$os %in% c("Missing")] <- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("0")]<- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("0")]<- c(NA)
View(datos)
datos$Precio.Actual<-NULL
datos$Descuento<-NULL
datos$Calificación<-NULL
datos$Visualizaciones<-NULL
datos$Marca[datos$Marca %in% c("")]<- c(NA)
datos$Modelo[datos$Modelo %in% c("")]<- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Procesador..Marca.[datos$Procesador..Marca. %in% c("")]<- c(NA)
datos$Ram_gb[datos$Ram_gb %in% c("")]<- c(NA)
datos$HDD[datos$HDD %in% c("")]<- c(NA)
datos$os_bit[datos$os_bit %in% c("")]<- c(NA)
datos$os[datos$os %in% c("")]<- c(NA)
datos$Tarjeta_Grafica_Gb[datos$Tarjeta_Grafica_Gb %in% c("")]<- c(NA)
datos$Peso[datos$Peso %in% c("")]<- c(NA)
datos$Garantía..Años.[datos$Garantía..Años. %in% c("")]<- c(NA)
datos$Pantalla.Táctil[datos$Pantalla.Táctil %in% c("")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$msoffice[datos$msoffice %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("")]<- c(NA)
datos$Puntuación..Estrellas.[datos$Puntuación..Estrellas. %in% c("")]<- c(NA)
# Eliminamos los datos con errores en el CSV, tales como valores que por definición las variables no puedan tener
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("5")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i5")] <- c("Core i5")
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("Core")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("")] <- c(NA)
datos$Nombre.Procesador[datos$Nombre.Procesador %in% c("i7")] <- c("Core i7")
datos$Generación.Procesador[datos$Generación.Procesador %in% c("Missing")] <- c(NA)
datos$Generación.Procesador[datos$Generación.Procesador %in% c("")] <- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("i5")]<- c(NA)
datos$Tipo_Ram[datos$Tipo_Ram %in% c("")]<- c(NA)
datos$Ram_gb[datos$Ram_gb %in% c("5")]<- c(NA)
datos$SSD[datos$SSD %in% c("")]<- c(NA)
datos$SSD[datos$SSD %in% c("32")]<- c(NA)
datos$os[datos$os %in% c("Missing")] <- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("0")]<- c(NA)
datos$Tamaño_Pantalla[datos$Tamaño_Pantalla %in% c("")]<- c(NA)
datos$Precio.Anterior[datos$Precio.Anterior %in% c("0")]<- c(NA)
View(datos)
var(datos$Ram_gb, na.rm = TRUE)
λ <- var(datos$Ram_gb, na.rm = TRUE)
v <- var(datos$Ram_gb, na.rm = TRUE)
lamb <- var(datos$Ram_gb, na.rm = TRUE)
View(datos)
r <- function(x){
return(round(x, digits = 2))
}
lamb <- r(var(datos$Ram_gb, na.rm = TRUE))
lamb <- r(var(datos$Ram_gb, na.rm = TRUE))
lamb <- r(var(datos$Ram_gb, na.rm = TRUE))
lamb
View(datos)
r <- function(x){
return(round(x, digits = 2))
}
plot(dpois(datos$Ram_gb, lamb), type = "h", lwd = 2,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(datos$Ram_gb, lamb), type = "h", lwd = 10,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(datos$Ram_gb, lamb), type = "h", lwd = 100,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(datos$Ram_gb, lamb), type = "h", lwd = 0.5,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(datos$Ram_gb, lamb), type = "h", lwd = 0.1,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(datos$Ram_gb, lamb), type = "h", lwd = 0.01,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(datos$Ram_gb , lamb), type = "h", lwd = 0.01,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(datos$Ram_gb , lamb), type = "o", lwd = 0.01,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
x <- datos$Ram_gb
plot(dpois(x, lamb), type = "h", lwd = 2,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- 1:50
plot(dpois(x, lamb), type = "h", lwd = 2,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
table(datos$Ram_gb)
x <- 1:4
plot(dpois(x, lamb), type = "h", lwd = 2,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- 1:4
plot(dpois(x, lamb), type = "h", lwd = 10,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- 1:4
plot(dpois(x, lamb), type = "h", lwd = 0.5,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- 1:32
plot(dpois(x, lamb), type = "h", lwd = 0.5,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- datos$Ram_gb
plot(dpois(x, lamb), type = "h", lwd = 0.5,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- datos$Ram_gb
plot(dpois(x, lamb), type = "h", lwd = 10000,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- datos$Ram_gb
plot(dpois(x, lamb), type = "h", lwd = 0.001,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
x <- datos$Ram_gb
plot(dpois(x, lamb), type = "h", lwd = 0.001,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#-----------
# lambda: 10
#-----------
lambda <- 10
lines(dpois(x, lambda), type = "h", lwd = 0.001, col = rgb(1,0,0, 0.7))
#-----------
# lambda: 20
#-----------
lambda <- 20
lines(dpois(x, lambda), type = "h", lwd = 0.001, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("5", "10", "20"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
#exito
P <- nrow(filter(datos,datos$msoffice=="Yes"))/nrow(datos)
P
#numero total de observaciones válidas
n <- nrow(datos)
x <- 0:nrow(datos)
#media y varianza
m1 <- n*P
m1
v1 <- n*P*(1-P)
v1
plot(x,pbinom(x,n,P)*100, type= 'h', main = "Distribucion Binomial msoffice", xlab = "Cantidad de estudiantes", ylab = "Porcentaje", col="blue")
lines(x,dbinom(x,n,P)*100,col="red",type = "p")
legend("topleft",c("Funcion distribucion","Funcion acumulativa"),fill=c("red","blue"))
display_sd<-sd(datos$Tamaño_Pantalla,na.rm=T)
display_mean<-mean(datos$Tamaño_Pantalla,na.rm=T)
unique(datos$Tamaño_Pantalla)
print(display_sd)
print(display_mean)
x<-rnorm(400,display_mean,display_sd);
hist(x,freq = F,xlab = "Tamaño de Pantalla")
points(x,dnorm(x,display_mean,display_sd),col="red")
legend("topleft",c("Funcion distribucion","Funcion acumulativa"),fill=c("red","gray"))
# numero de laptop de marca ASUS
x=254
n <- nrow(datos)
P <- n_asus/nrow(datos)
