(3*(mean(DDL$promedio)-median(DDL$promedio)))/sd(DDL$promedio)
#histograma
hist(DDL$promedio,ylab = "frecuencia",xlab="notas",adj=0.5,main = "histograma del promedio de notas ",col = "orange")
library(car)
DDL$promedio2 <-car::recode(DDL$promedio,"9:10.45='desaprobado';10.5:12.99='promedio bajo';13:15.99='promedio normal';16:20='promedio alto'")
boxplot(DDL$t_estudio,ylab="tiempo de estudio en horas", main="Diagrama de cajas variable tiempo de estudio")
summary(DDL$t_estudio)
hist(DDL$t_estudio,main="histograma tiempo de estudio",ylab="Cantidad de alumnos",xlab="Tiempo de estudio (horas)")
# Varianza
var(DDL$t_estudio)
# Desviación estándar
sd(DDL$t_estudio)
# Coeficiente de variación
(sd(DDL$t_estudio)/mean(DDL$t_estudio))*100
library(car)
DDL$dieta2 <-car::recode(DDL$dieta,"1:2='mala dieta';3:3.9='dieta regular';4:5 ='buena dieta'")
boxplot(DDL$promedio~DDL$dieta2,ylab = "promedio de notas",xlab="tipo de dieta",main="boxplot notas-dieta",col=c("white","yellow","orange"))
library(gmodels)
CrossTable(DDL$dieta2,DDL$promedio2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("TIPO DE DIETA","PROMEDIO DE NOTAS"),format = "SAS")
dieta <-c(rep("buena dieta",4),rep("dieta regular",4),rep("mala dieta",4))
notas<-rep(c("desaprobado[0-10.4]","promedio alto [16-20]","promedio bajo[10.5-12.9]","promedio normal[13-15.9]"),3)
f1<-c(0,26,1,46,2,25,11,70,0,7,6,17)
d<-data.frame(dieta,notas,f1)
ggplot(d,aes(x=dieta, y=f1, fill=notas))+ geom_bar(position = "stack", stat = "identity")+ theme_minimal() + labs(title = "Tipo de dieta--notas") + ylab("cantidad alumnos")+xlab("Tipo de dieta")
library(ggplot2)
ggplot(d,aes(x=dieta, y=f1, fill=notas))+ geom_bar(position = "fill", stat = "identity")+ theme_minimal() + labs(title = "Tipo de dieta--notas") + ylab("cantidad alumnos")+xlab("Tipo de dieta")
library(dplyr)
DDL$IMC <- round((DDL$peso)/(DDL$estatura**2),2)
select(DDL,estatura,peso,IMC)
boxplot(DDL$IMC,ylab="IMC",main="Boxplot IMC")
summary(DDL$IMC)
# Varianza
var(DDL$IMC)
# Desviación estándar
sd(DDL$IMC)
# Coeficiente de variación
(sd(DDL$IMC)/mean(DDL$IMC))*100
max(DDL$IMC)
min(DDL$IMC)
hist(DDL$IMC,freq=F,ylab = "frecuencia",xlab="indice de masa corporal",adj=0.5,main = "histograma indice de masa corporal ",col = "orange")
(3*(mean(DDL$IMC)-median(DDL$IMC)))/sd(DDL$IMC)
DDL$IMC2 <-car::recode(DDL$IMC,"0:18.49='peso bajo';18.5:24.99='peso normal';25:29.99='sobrepeso';30:40='obesidad'",levels = c('peso bajo','peso normal','sobrepeso','obesidad'))
dato_sobrepeso<-filter(DDL,IMC2=="sobrepeso" | IMC2 =="obesidad")
table(dato_sobrepeso$genero,dato_sobrepeso$IMC2)
genero <-c(rep("Hombre",2),rep("Mujer",2))
peso<-rep(c("obesidad","sobrepeso"),2)
fr<-c(3,37,0,13)
dat<-data.frame(genero,peso,fr)
library(ggplot2)
ggplot(dat,aes(x=genero, y=fr, fill=peso))+ geom_bar(position = "fill", stat = "identity")+ theme_minimal() + labs(title = "Cantidad de alumnos con sobrepeso y obesidad") + ylab("cantidad alumnos")+xlab("genero") # + geom_text(aes(label=fr))
DDL$IMC2 <-car::recode(DDL$IMC,"0:18.49='peso bajo';18.5:24.99='peso normal';25:29.99='sobrepeso';30:40='obesidad'")
table(DDL$genero,DDL$IMC2)
genero <- c(rep("Hombre",4),rep("Mujer",4))
imc<-rep(c("obesidad","peso bajo","peso normal","sobrepeso"),2)
frecuencia <- c(3,7,96,37,0,2,53,13)
dato1<- data.frame(genero,imc,frecuencia)
dato1
library(ggplot2)
ggplot(dato1,aes(x=imc, y=frecuencia, fill=genero))+ geom_bar(position = "dodge", stat = "identity")+ theme_minimal() + labs(title = "Cantidad de alumnos por IMC") + ylab("cantidad alumnos")+xlab("Indice de Masa Corporal") + geom_text(aes(label=frecuencia))
boxplot(DDL$promedio~DDL$IMC2,col=c("orange","white","gray","yellow"),ylab="promedio de notas",xlab="Indice de masa corporal",main="Promedio-IMC")
library(gmodels)
CrossTable(DDL$promedio2,DDL$IMC2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("NOTAS","IMC"),format = "SAS")
promedio <- c(rep("desaprobado[0-10.4]",4),rep("promedio alto [16-20]",4),rep(" promedio bajo[10.5-12.9] ",4),rep("promedio normal[13-15.9]",4))
imc<-rep(c("obesidad","peso bajo","peso normal","sobrepeso"),4)
frecuencia <- c(1,0,0,1,1,3,41,13,0,1,12,5,1,5,96,31)
dato2<- data.frame(promedio,imc,frecuencia)
dato2
library(ggplot2)
ggplot(dato2,aes(x=imc, y=frecuencia, fill=promedio))+ geom_bar(position = "dodge", stat = "identity")+ theme_minimal() + labs(title = "Cantidad de alumnos por IMC") + ylab("cantidad alumnos")+xlab("Indice de Masa Corporal")
cov(DDL$IMC,DDL$promedio)
cor(DDL$IMC,DDL$promedio)
plot(DDL$IMC,DDL$promedio,ylab="Nota promedio de cada alumno",xlab="Indice de masa corporal",main = "Diagrama de dispersion nota-Imc")
library(dplyr)
dato_sobrepeso2<-filter(DDL,IMC2=="sobrepeso" | IMC2 =="obesidad")%>%select(genero,sobrepeso,IMC2)
dato_sobrepeso2
table(dato_sobrepeso2$sobrepeso,dato_sobrepeso2$IMC2)
respuesta<-c(rep("NO",2),rep("SI",2))
peso22<-rep(c("obesidad","sobrepeso"),2)
f <- c(0,12,3,38)
dta <- data.frame(respuesta,peso22,f)
library(ggplot2)
ggplot(dta,aes(x=peso22, y=f, fill=respuesta))+ geom_bar(position = "dodge", stat = "identity")+ theme_minimal() + xlab("Resultados de IMC") + ylab("Número de alumnos") + geom_text(aes(label = f)) + labs(title = "Realidad vs. Respuestas de los alumnos")
library(gmodels)
CrossTable(DDL$promedio2,DDL$IMC2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("NOTAS","IMC"),format = "SAS")
library(gmodels)
CrossTable(DDL$dieta2,DDL$promedio2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("TIPO DE DIETA","PROMEDIO DE NOTAS"),format = "SAS")
hist(DDL$IMC, freq=F)
lines(density(DDL$IMC),lwd=2,col="red")
summary(DDL$IMC)
M1 <- DDL[ sample ( nrow (DDL), size = 60 ),]
summary(M1$IMC)
#pnorm(X,E(X), sqrt(V(X)))
pnorm(18.5,23.31,3.073)
1-pnorm(25,23.31,3.073)
1-pnorm(25,23.31,0.3968)
(1-pnorm(25,23.31,3.073))/(1-pnorm(18.5,23.31,3.073))
qnorm(0.50,23.31,3.073)
library(dplyr)
Muestra <- sample_n(DDL,size=10)
Muestra
ord1 <- table(DDL$IMC2)
tabla1 <- prop.table(ord1)
tabla1
# Probabilidad de exito
p <- nrow(p_sbrp)/nrow(DDL)
p
1-p
# solo de muestra
Rx <- c(0,1,2,3,4,5,6,7,8,9,10)
X0 = round(dbinom(0,10,0.2369668),2)
X1 = round(dbinom(1,10,0.2369668),2)
X2 = round(dbinom(2,10,0.2369668),2)
X3 = round(dbinom(3,10,0.2369668),2)
X4 = round(dbinom(4,10,0.2369668),2)
X5 = round(dbinom(5,10,0.2369668),2)
X6 = round(dbinom(6,10,0.2369668),2)
X7 = round(dbinom(7,10,0.2369668),2)
X8 = round(dbinom(8,10,0.2369668),2)
X9 = round(dbinom(9,10,0.2369668),2)
X10 = round(dbinom(10,10,0.2369668),2)
Y <- c(X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10)
Datos1 <- data.frame(Rx,Y)
Datos1
plot(dbinom(x=0:10,size=10,prob=0.2369668),lwd=4,type='h', xlab='x', ylab='Probabilidad', main = "Función de probabilidad binomial para personas con Sobrepeso")
dbinom(10,10,0.2369668)
1- pbinom(5,10,0.2369668)
tabla1 # tabla de probabilidades de las categorías del IMC2 del total
p1 <- nrow(p_sbrp) / nrow(DDL) # probabilidad de personas con sobrepeso del total
p1
tabla2 # tabla de probabilidades de las notas del total
p2 = nrow(prom14) / nrow(DDL) # probabilidad de personas con notas de 14
p2
p_sbrp <-filter(DDL,IMC2 == 'sobrepeso')
p_sbrp
asbrp <- nrow(p_sbrp)/nrow(DDL)#promedio de personas con sobrepeso
prom14sbrp <-filter(p_sbrp,promedio2=='promedio bajo')
prom14sbrp
a <- nrow(prom14sbrp)/nrow(p_sbrp)#promedio de personas con promedio bajo  y con sobrepeso
p_norm <-filter(DDL,IMC2 == 'peso normal')
p_norm
bnorm<- nrow(p_norm)/nrow(DDL)#promedio de personas con peso normal
prom14norm <-filter(p_norm,promedio2=='promedio bajo')
prom14norm
b <-nrow(prom14norm)/nrow(p_norm)#promedio de personas con promedio bajo con peso normal
p_psbaj <-filter(DDL,IMC2 == 'peso bajo')
p_psbaj
cpsbaj<- nrow(p_psbaj)/nrow(DDL)#promedio de personas con peso bajo
prom14psbaj <-filter(p_psbaj,promedio2=='promedio bajo')
prom14psbaj
c <-nrow(prom14psbaj)/nrow(p_psbaj)#promedio de personas con promedio bajo y con peso bajo
p_obs <-filter(DDL,IMC2 == 'obesidad')
p_obs
dobs<- nrow(p_obs)/nrow(DDL)#promedio de personas con obesidad
prom14obs <-filter(p_obs,promedio2=='promedio bajo')
prom14obs
d <-nrow(prom14obs)/nrow(p_obs)#promedio de personas con nota bajo y con obesidad
tabla1
tablaprom1 <- c(dobs,cpsbaj,bnorm,asbrp)#personas
tablaprom1
tablaprom2 <- c(d,c,b,a)# promedio de nota baja
tablaprom2
P14 <- dobs*d + cpsbaj*c+bnorm*b+asbrp*a
P14
# P(A/B) = P(A)* ( P(A∩B)/P(B) )
# P(14/sobrepeso) =P(14 del total) * P(sobrepeso del total ∩ 14 de sobrepeso)/ 14 del total
P <-  P14*( (asbrp*a)/P14 )
P
library(gmodels)
CrossTable(DDL$promedio2,DDL$IMC2,prop.r=F,prop.c=F,prop.chisq=F)
# solo de muestra
Rx <- c(0,1,2,3,4,5,6,7,8,9,10)
X0 = round(dgeom(0,0.2369668),2)
X1 = round(dgeom(1,0.2369668),2)
X2 = round(dgeom(2,0.2369668),2)
X3 = round(dgeom(3,0.2369668),2)
X4 = round(dgeom(4,0.2369668),2)
X5 = round(dgeom(5,0.2369668),2)
X6 = round(dgeom(6,0.2369668),2)
X7 = round(dgeom(7,0.2369668),2)
X8 = round(dgeom(8,0.2369668),2)
X9 = round(dgeom(9,0.2369668),2)
X10 = round(dgeom(10,0.2369668),2)
Y <- c(X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10)
Datos2 <- data.frame(Rx,Y)
Datos2
plot(dgeom(x=0:10,prob=0.2369668),lwd=4,type='h', xlab='x', ylab='Probabilidad', main =  "Función de probabilidad geométrica para personas con Sobrepeso")
dgeom(1,0.23696682)
1 - pgeom(3,0.23696682)
1 - pgeom(0,0.23696682)
data <- data.frame(Integrantes = c('Evelyn Catalina Zavala Cuya', 'Yerson Andre Ramos Padin','Katherin Yohana Villanueva Campos','Andrés López Vega','Franco Nilson Carrasco Martinez'))
data
data <- data.frame(Nombres = c('Evelyn Catalina Zavala Cuya', 'Yerson Andre Ramos Padin','Katherin Yohana Villanueva Campos','Andrés López Vega','Franco Nilson Carrasco Martinez'),
Inicio = c(17, 24, 26, 1 , 3), Mes.inicio = c("Abril","Abril", "Abril", "Mayo", "Mayo"),
Fin = c(24, 25, 1, 3,4), Mes.fin = c("Abril","Abril", "Mayo", "Mayo", "Mayo"),
Trabajo = c('Plantilla de entrevista', 'Revisión y creación de entrevista', 'Recolección de datos', 'Limpieza de datos', 'Descripción'))
data
variables <- data.frame(variables = c('Edad','Genero','Peso','Estatura','Ciclo','Promedio', 'Tiempo de estudio', 'Desayunos a la semana', 'Hora de desayuno', 'Almuerzos a la semana', 'Hora de almuerzo', 'Cantidad de veces que cena a la semana','Hora de cena', 'Comida Rápida', 'Vegano','Sobrepeso','Carrera que estudia','Cantidad de cursos','Cambio horas', 'Dolores','Hábitos alimenticios', 'Deporte', 'Dieta'),
tipo = c('Cuantitativa (Discreta)','Cualitativa (Nominal)','Cuantitativa (Continua)','Cuantitativa (Continua)','Cuantitativa (Ordinal)','Cuantitativa (Continua)','Cuantitativa (Continua)','Cuantitativa (Discreta)','Cualitativa (Nominal)','Cuantitativa (Discreta)','Cualitativa (Nominal)','Cuantitativa (Discreta)','Cualitativa (Nominal)','Cualitativa (Nominal)','Cualitativa (Nominal)','Cualitativa (Nominal)','Cualitativa (Nominal)','Cuantitativa (Discreta)','Cuantitativa (Continua)','Cuantitativa (Continua)','Cuantitativa (Continua)','Cuantitativa (discreta)','Cuantitativa Discreta'),
Restricciones=c('tiene que ser un entero no negativo','solo puede escoger una opción de las dos disponibles','tiene que ser un entero no negativo mayor a 40','tiene que ser un entero no negativo mayor 140 cm','tiene que ser un entero no negativo mayor que 1 y menor que 7','tiene que ser un entero no negativo menor que 20','tiene que ser un entero no negativo','tiene que ser un entero no negativo menor o igual que 7','tiene que ser un rango de tiempo menor a las 11:00 am','tiene que ser un entero no negativo menor o igual que 7','tiene que ser un rango de tiempo menor a las 4:00 pm','tiene que ser un entero no negativo menor o igual que 7','tiene que ser un rango de tiempo menor a las 11:00 pm','solo puede escoger una opción de las dos disponibles','solo puede escoger una opción de las dos disponibles','solo puede escoger una opción de las dos disponibles','tiene que ser una carrera disponible en la universidad','tiene que ser un entero no negativo','tiene que ser un entero no negativo que represente una escala de menor a mayor','tiene que ser un entero no negativo que represente una escala de menor a mayor','tiene que ser un entero no negativo que represente una escala de menor a mayor','tiene que ser un entero no negativo que represente una escala de menor a mayor','tiene que ser un entero no negativo que represente una escala de menor a mayor'))
variables
library(readr)
library(dplyr)
library(car)
library(ggplot2)
DD<-read.csv("encuesta_p1.csv",header=T,sep=',')
str(DD)
#datos faltantes?
sum(is.na(DD))
sum(!is.na(DD))
#casos completos?
sum(complete.cases(DD))
sum(!complete.cases(DD))
names(DD)
DD<- rename(DD, tiempo= 'Marca.temporal',correo= 'DirecciÃ³n.de.correo.electrÃ³nico',edad='Edad..aÃ.os.cumplidos.',genero= 'Genero',peso='Peso..Kg...usar.decimales...Ej..76.42..solo.cifra.numerica.',estatura='Talla..cm..Ej..175..solo.cifra.numÃ.rica.',polo='Talla.de.polo',carrera='Carrera.que.estudia',ciclo='NroÂ..de.Ciclo',cursos='Cantidad..de.cursos.que.lleva.actualmente',promedio='Ingrese.su.promedio.ponderado.exacto.de.la.carrera..actual..Ej..15.28.',t_estudio='Cantidad.de.tiempo.que.estudia.en.la.semana.fuera.de.la.Universidad..En.horas....Ej..3.5',desayuno='Â.Con.que.frecuencia.desayuna..a.la.semana...Solo.respuesta.numÃ.rica.del.1.al.7.',desayuno_intervalo='Â.En.que.rango.de.horas.suele.desayunar...Ej..8.00...8.30..am.',almuerzo='Â.Con.que.frecuencia.almuerza..a.la.semana...Solo.respuesta.numÃ.rica.del.1.al.7.',almuerzo_intervalo='Â.En.que.rango.de.horas.suele.almorzar...Ej..13.30.14.00.pm..',cena='Â.Con.que.frecuencia.cena..a.la.semana...Solo.respuesta.numÃ.rica.del.1.al.7.',cena_intervalo='Â.En.que.rango.de.horas.suele.cenar...Ej..19.30...20.00.pm.',cambio_rango='Â.quÃ..tan.seguido.cambias.tu.rango.de.horas.de.almuerzo..desayuno.y.o.cena.a.la.semana.',dolores='Â.QuÃ..tan.seguido.sufres.de.dolores.en.el.estÃ³mago..molestias..gastritis.o.dolor.de.cabeza.',habitos_alimenticios='Â.Del.1.al.5..QuÃ..tanto.crees.que.influyen.tus.hÃ.bitos.alimenticios.en.tus.calificaciones.',comida_rapida='Â.Suele.comer.comida.rapida.',deporte='Â.Del.1.al.5.que.tan.seguido.practicas.algÃºn.deporte.o.haces.ejercicios.',vegano='Â.Es.vegano.',sobrepeso='Â.Tienes.Sobrepeso.',dieta='Â.Del.1.al.5.quÃ..tan.saludable.crees.que.es.tu.dieta.')
names(DD)
(DDL<-DD[,3:26])# DE ESTA MANERA DESCARTAMOS LAS VARIABLES DE MARCA TEMPORAL Y CORREO QUE FUERON AGREGADAS POR EL DOCUMENTO DE FORMS POR DEFECTO
unique(DDL$edad)# Permite conocer todas las formas en las que se escribio la variable edad
unique(DDL$genero)
unique(DDL$peso)
unique(DDL$estatura)
unique(DDL$polo)
unique(DDL$carrera)
unique(DDL$ciclo)
unique(DDL$cursos)
unique(DDL$promedio)
unique(DDL$t_estudio)
unique(DDL$desayuno)
unique(DDL$desayuno_intervalo)
unique(DDL$almuerzo)
unique(DDL$almuerzo_intervalo)
unique(DDL$cena)
unique(DDL$cena_intervalo)
unique(DDL$cambio_rango)
unique(DDL$dolores)
unique(DDL$habitos_alimenticios)
unique(DDL$comida_rapida)
unique(DDL$deporte)
unique(DDL$vegano)
unique(DDL$sobrepeso)
unique(DDL$dieta)
# CON ESTO CORROBORAMOS QUE POR CADA VARIABLE SOLO HAY UNA FORMA DE ESCRITURA
#edad
table(DDL$edad)
DDL %>% group_by(edad) %>% summarise(n=n())
#estatura
table(DDL$estatura)
DDL %>% group_by(estatura) %>% summarise(n=n())
table(DDL$genero)
DDL %>% group_by(genero) %>% summarise(n=n())
table(DDL$peso)
DDL %>% group_by(peso) %>% summarise(n=n())
table(DDL$polo)
DDL %>% group_by(polo) %>% summarise(n=n())
table(DDL$carrera)
DDL %>% group_by(carrera) %>% summarise(n=n())
table(DDL$ciclo)
DDL %>% group_by(ciclo) %>% summarise(n=n())
table(DDL$cursos)
DDL %>% group_by(cursos) %>% summarise(n=n())
table(DDL$promedio)
DDL %>% group_by(promedio) %>% summarise(n=n())
table(DDL$t_estudio)
DDL %>% group_by(t_estudio) %>% summarise(n=n())
table(DDL$desayuno)
DDL %>% group_by(desayuno) %>% summarise(n=n())
table(DDL$desayuno_intervalo)
DDL %>% group_by(desayuno_intervalo) %>% summarise(n=n())
table(DDL$almuerzo)
DDL %>% group_by(almuerzo) %>% summarise(n=n())
table(DDL$almuerzo_intervalo)
DDL %>% group_by(almuerzo_intervalo) %>% summarise(n=n())
table(DDL$cena)
DDL %>% group_by(cena) %>% summarise(n=n())
table(DDL$cambio_rango)
DDL %>% group_by(cambio_rango) %>% summarise(n=n())
table(DDL$habitos_alimenticios)
DDL %>% group_by(habitos_alimenticios) %>% summarise(n=n())
table(DDL$vegano)
DDL %>% group_by(vegano) %>% summarise(n=n())
table(DDL$sobrepeso)
DDL %>% group_by(sobrepeso) %>% summarise(n=n())
#CON ESTO COMPROBAMOS QUE PARA CADA VALOR DE UNA VARIABLE NO HAY UNA FORMA DE ESCRITURA DISTINTA
DDL$estatura<-(DDL$estatura)/100
DDL <-filter(DDL,edad>=18 & peso>=40 & estatura>=1.40 & estatura<=2.50 & t_estudio>=0 & promedio>0)
sum(is.na(DDL))
sum(!complete.cases(DDL))
boxplot(DDL$peso,data = DDL,ylab="peso(Kg)",col=c("pink"),main="diagrama de cajas de Peso(Kg)")
median(DDL$peso)
# Varianza
var(DDL$peso)
# Desviación estándar
sd(DDL$peso)
# Coeficiente de variación
(sd(DDL$peso)/mean(DDL$peso))*100
summary(DDL$peso)
boxplot(DDL$estatura,ylab="estatura(m)",main="Diagrama de cajas de Estatura")
summary(DDL$estatura)
# Varianza
var(DDL$estatura)
# Desviación estándar
sd(DDL$estatura)
# Coeficiente de variación
(sd(DDL$estatura)/mean(DDL$estatura))*100
boxplot(DDL$promedio,ylab="notas",main = "Diagrama de cajas variable Promedio")
summary(DDL$promedio)
# Varianza
var(DDL$promedio)
# Desviación estándar
sd(DDL$promedio)
# Coeficiente de variación
(sd(DDL$promedio)/mean(DDL$promedio))*100
#coeficiente de asimetria
(3*(mean(DDL$promedio)-median(DDL$promedio)))/sd(DDL$promedio)
#histograma
hist(DDL$promedio,ylab = "frecuencia",xlab="notas",adj=0.5,main = "histograma del promedio de notas ",col = "orange")
library(car)
DDL$promedio2 <-car::recode(DDL$promedio,"9:10.45='desaprobado';10.5:12.99='promedio bajo';13:15.99='promedio normal';16:20='promedio alto'")
boxplot(DDL$t_estudio,ylab="tiempo de estudio en horas", main="Diagrama de cajas variable tiempo de estudio")
summary(DDL$t_estudio)
hist(DDL$t_estudio,main="histograma tiempo de estudio",ylab="Cantidad de alumnos",xlab="Tiempo de estudio (horas)")
# Varianza
var(DDL$t_estudio)
# Desviación estándar
sd(DDL$t_estudio)
# Coeficiente de variación
(sd(DDL$t_estudio)/mean(DDL$t_estudio))*100
library(car)
DDL$dieta2 <-car::recode(DDL$dieta,"1:2='mala dieta';3:3.9='dieta regular';4:5 ='buena dieta'")
boxplot(DDL$promedio~DDL$dieta2,ylab = "promedio de notas",xlab="tipo de dieta",main="boxplot notas-dieta",col=c("white","yellow","orange"))
library(gmodels)
CrossTable(DDL$dieta2,DDL$promedio2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("TIPO DE DIETA","PROMEDIO DE NOTAS"),format = "SAS")
dieta <-c(rep("buena dieta",4),rep("dieta regular",4),rep("mala dieta",4))
notas<-rep(c("desaprobado[0-10.4]","promedio alto [16-20]","promedio bajo[10.5-12.9]","promedio normal[13-15.9]"),3)
f1<-c(0,26,1,46,2,25,11,70,0,7,6,17)
d<-data.frame(dieta,notas,f1)
ggplot(d,aes(x=dieta, y=f1, fill=notas))+ geom_bar(position = "stack", stat = "identity")+ theme_minimal() + labs(title = "Tipo de dieta--notas") + ylab("cantidad alumnos")+xlab("Tipo de dieta")
library(ggplot2)
ggplot(d,aes(x=dieta, y=f1, fill=notas))+ geom_bar(position = "fill", stat = "identity")+ theme_minimal() + labs(title = "Tipo de dieta--notas") + ylab("cantidad alumnos")+xlab("Tipo de dieta")
library(dplyr)
DDL$IMC <- round((DDL$peso)/(DDL$estatura**2),2)
select(DDL,estatura,peso,IMC)
boxplot(DDL$IMC,ylab="IMC",main="Boxplot IMC")
summary(DDL$IMC)
# Varianza
var(DDL$IMC)
# Desviación estándar
sd(DDL$IMC)
# Coeficiente de variación
(sd(DDL$IMC)/mean(DDL$IMC))*100
max(DDL$IMC)
min(DDL$IMC)
hist(DDL$IMC,freq=F,ylab = "frecuencia",xlab="indice de masa corporal",adj=0.5,main = "histograma indice de masa corporal ",col = "orange")
(3*(mean(DDL$IMC)-median(DDL$IMC)))/sd(DDL$IMC)
DDL$IMC2 <-car::recode(DDL$IMC,"0:18.49='peso bajo';18.5:24.99='peso normal';25:29.99='sobrepeso';30:40='obesidad'",levels = c('peso bajo','peso normal','sobrepeso','obesidad'))
dato_sobrepeso<-filter(DDL,IMC2=="sobrepeso" | IMC2 =="obesidad")
table(dato_sobrepeso$genero,dato_sobrepeso$IMC2)
genero <-c(rep("Hombre",2),rep("Mujer",2))
peso<-rep(c("obesidad","sobrepeso"),2)
fr<-c(3,37,0,13)
dat<-data.frame(genero,peso,fr)
library(ggplot2)
ggplot(dat,aes(x=genero, y=fr, fill=peso))+ geom_bar(position = "fill", stat = "identity")+ theme_minimal() + labs(title = "Cantidad de alumnos con sobrepeso y obesidad") + ylab("cantidad alumnos")+xlab("genero") # + geom_text(aes(label=fr))
DDL$IMC2 <-car::recode(DDL$IMC,"0:18.49='peso bajo';18.5:24.99='peso normal';25:29.99='sobrepeso';30:40='obesidad'")
table(DDL$genero,DDL$IMC2)
genero <- c(rep("Hombre",4),rep("Mujer",4))
imc<-rep(c("obesidad","peso bajo","peso normal","sobrepeso"),2)
frecuencia <- c(3,7,96,37,0,2,53,13)
dato1<- data.frame(genero,imc,frecuencia)
dato1
library(ggplot2)
ggplot(dato1,aes(x=imc, y=frecuencia, fill=genero))+ geom_bar(position = "dodge", stat = "identity")+ theme_minimal() + labs(title = "Cantidad de alumnos por IMC") + ylab("cantidad alumnos")+xlab("Indice de Masa Corporal") + geom_text(aes(label=frecuencia))
boxplot(DDL$promedio~DDL$IMC2,col=c("orange","white","gray","yellow"),ylab="promedio de notas",xlab="Indice de masa corporal",main="Promedio-IMC")
library(gmodels)
CrossTable(DDL$promedio2,DDL$IMC2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("NOTAS","IMC"),format = "SAS")
promedio <- c(rep("desaprobado[0-10.4]",4),rep("promedio alto [16-20]",4),rep(" promedio bajo[10.5-12.9] ",4),rep("promedio normal[13-15.9]",4))
imc<-rep(c("obesidad","peso bajo","peso normal","sobrepeso"),4)
frecuencia <- c(1,0,0,1,1,3,41,13,0,1,12,5,1,5,96,31)
dato2<- data.frame(promedio,imc,frecuencia)
dato2
library(ggplot2)
ggplot(dato2,aes(x=imc, y=frecuencia, fill=promedio))+ geom_bar(position = "dodge", stat = "identity")+ theme_minimal() + labs(title = "Cantidad de alumnos por IMC") + ylab("cantidad alumnos")+xlab("Indice de Masa Corporal")
cov(DDL$IMC,DDL$promedio)
cor(DDL$IMC,DDL$promedio)
plot(DDL$IMC,DDL$promedio,ylab="Nota promedio de cada alumno",xlab="Indice de masa corporal",main = "Diagrama de dispersion nota-Imc")
library(dplyr)
dato_sobrepeso2<-filter(DDL,IMC2=="sobrepeso" | IMC2 =="obesidad")%>%select(genero,sobrepeso,IMC2)
dato_sobrepeso2
table(dato_sobrepeso2$sobrepeso,dato_sobrepeso2$IMC2)
respuesta<-c(rep("NO",2),rep("SI",2))
peso22<-rep(c("obesidad","sobrepeso"),2)
f <- c(0,12,3,38)
dta <- data.frame(respuesta,peso22,f)
library(ggplot2)
ggplot(dta,aes(x=peso22, y=f, fill=respuesta))+ geom_bar(position = "dodge", stat = "identity")+ theme_minimal() + xlab("Resultados de IMC") + ylab("Número de alumnos") + geom_text(aes(label = f)) + labs(title = "Realidad vs. Respuestas de los alumnos")
library(gmodels)
CrossTable(DDL$promedio2,DDL$IMC2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("NOTAS","IMC"),format = "SAS")
library(gmodels)
CrossTable(DDL$dieta2,DDL$promedio2, prop.r=F,prop.c=F, prop.t=F, prop.chisq=F,dnn=c("TIPO DE DIETA","PROMEDIO DE NOTAS"),format = "SAS")
hist(DDL$IMC, freq=F)
lines(density(DDL$IMC),lwd=2,col="red")
summary(DDL$IMC)
M1 <- DDL[ sample ( nrow (DDL), size = 60 ),]
summary(M1$IMC)
#pnorm(X,E(X), sqrt(V(X)))
pnorm(18.5,23.31,3.073)
1-pnorm(25,23.31,3.073)
1-pnorm(25,23.31,0.3968)
(1-pnorm(25,23.31,3.073))/(1-pnorm(18.5,23.31,3.073))
qnorm(0.50,23.31,3.073)
library(dplyr)
Muestra <- sample_n(DDL,size=10)
Muestra
ord1 <- table(DDL$IMC2)
tabla1 <- prop.table(ord1)
tabla1
# Probabilidad de exito
p <- nrow(p_sbrp)/nrow(DDL)
p
1-p
# solo de muestra
Rx <- c(0,1,2,3,4,5,6,7,8,9,10)
X0 = round(dbinom(0,10,0.2369668),2)
X1 = round(dbinom(1,10,0.2369668),2)
X2 = round(dbinom(2,10,0.2369668),2)
X3 = round(dbinom(3,10,0.2369668),2)
X4 = round(dbinom(4,10,0.2369668),2)
X5 = round(dbinom(5,10,0.2369668),2)
X6 = round(dbinom(6,10,0.2369668),2)
X7 = round(dbinom(7,10,0.2369668),2)
X8 = round(dbinom(8,10,0.2369668),2)
X9 = round(dbinom(9,10,0.2369668),2)
X10 = round(dbinom(10,10,0.2369668),2)
Y <- c(X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10)
Datos1 <- data.frame(Rx,Y)
Datos1
plot(dbinom(x=0:10,size=10,prob=0.2369668),lwd=4,type='h', xlab='x', ylab='Probabilidad', main = "Función de probabilidad binomial para personas con Sobrepeso")
dbinom(10,10,0.2369668)
1- pbinom(5,10,0.2369668)
tabla1 # tabla de probabilidades de las categorías del IMC2 del total
p1 <- nrow(p_sbrp) / nrow(DDL) # probabilidad de personas con sobrepeso del total
p1
tabla2 # tabla de probabilidades de las notas del total
p2 = nrow(prom14) / nrow(DDL) # probabilidad de personas con notas de 14
p2
p_sbrp <-filter(DDL,IMC2 == 'sobrepeso')
p_sbrp
asbrp <- nrow(p_sbrp)/nrow(DDL)#promedio de personas con sobrepeso
prom14sbrp <-filter(p_sbrp,promedio2=='promedio bajo')
prom14sbrp
a <- nrow(prom14sbrp)/nrow(p_sbrp)#promedio de personas con promedio bajo  y con sobrepeso
p_norm <-filter(DDL,IMC2 == 'peso normal')
p_norm
bnorm<- nrow(p_norm)/nrow(DDL)#promedio de personas con peso normal
prom14norm <-filter(p_norm,promedio2=='promedio bajo')
prom14norm
b <-nrow(prom14norm)/nrow(p_norm)#promedio de personas con promedio bajo con peso normal
p_psbaj <-filter(DDL,IMC2 == 'peso bajo')
p_psbaj
cpsbaj<- nrow(p_psbaj)/nrow(DDL)#promedio de personas con peso bajo
prom14psbaj <-filter(p_psbaj,promedio2=='promedio bajo')
prom14psbaj
c <-nrow(prom14psbaj)/nrow(p_psbaj)#promedio de personas con promedio bajo y con peso bajo
p_obs <-filter(DDL,IMC2 == 'obesidad')
p_obs
dobs<- nrow(p_obs)/nrow(DDL)#promedio de personas con obesidad
prom14obs <-filter(p_obs,promedio2=='promedio bajo')
prom14obs
d <-nrow(prom14obs)/nrow(p_obs)#promedio de personas con nota bajo y con obesidad
tabla1
tablaprom1 <- c(dobs,cpsbaj,bnorm,asbrp)#personas
tablaprom1
tablaprom2 <- c(d,c,b,a)# promedio de nota baja
tablaprom2
P14 <- dobs*d + cpsbaj*c+bnorm*b+asbrp*a
P14
# P(A/B) = P(A)* ( P(A∩B)/P(B) )
# P(14/sobrepeso) =P(14 del total) * P(sobrepeso del total ∩ 14 de sobrepeso)/ 14 del total
P <-  P14*( (asbrp*a)/P14 )
P
library(gmodels)
CrossTable(DDL$promedio2,DDL$IMC2,prop.r=F,prop.c=F,prop.chisq=F)
# solo de muestra
Rx <- c(0,1,2,3,4,5,6,7,8,9,10)
X0 = round(dgeom(0,0.2369668),2)
X1 = round(dgeom(1,0.2369668),2)
X2 = round(dgeom(2,0.2369668),2)
X3 = round(dgeom(3,0.2369668),2)
X4 = round(dgeom(4,0.2369668),2)
X5 = round(dgeom(5,0.2369668),2)
X6 = round(dgeom(6,0.2369668),2)
X7 = round(dgeom(7,0.2369668),2)
X8 = round(dgeom(8,0.2369668),2)
X9 = round(dgeom(9,0.2369668),2)
X10 = round(dgeom(10,0.2369668),2)
Y <- c(X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10)
Datos2 <- data.frame(Rx,Y)
Datos2
plot(dgeom(x=0:10,prob=0.2369668),lwd=4,type='h', xlab='x', ylab='Probabilidad', main =  "Función de probabilidad geométrica para personas con Sobrepeso")
dgeom(1,0.23696682)
1 - pgeom(3,0.23696682)
1 - pgeom(0,0.23696682)
# Probabilidad de éxito
p <- nrow(ord1)/nrow(DDL)
p
1-p
# Probabilidad de éxito
p <- nrow(tabla1)/nrow(DDL)
p
ord1 <- table(DDL$IMC2)
ord1
tabla1
tabla1[4]
