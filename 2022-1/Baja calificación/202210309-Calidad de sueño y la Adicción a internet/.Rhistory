if(!require(ggplot2)){install.packages('ggplot2')}
ggplot(data, aes(x=start, xend=end, y=name, yend=name, color=shift_type)) +
geom_segment()
ggplot(data, aes(x=start, xend=end, y=name, yend=name, color=shift_type)) +
geom_segment()
ggplot(data, aes(x=start, xend=end, y=name, yend=name, color=shift_type)) + geom_segment()
require("tidyverse")
gantt <- read.csv("gantt.csv", h=T)
gantt <- read.csv("gantt.csv", h=T)
library(ggplot2)
library(tidyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read
knit_with_parameters("C:/Users/matia/OneDrive/Escritorio/2022-1/Estadistica y Probabilidades I/Proyecto Final/ejemplo.Rmd", encoding = "UTF-8")
tinytex::install_tinytex()
library(ggplot2)
library(tidyr)
library(libridate)
install.packages("lubridate")
library(ggplot2)
library(tidyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read_csv("prueba.csv")
View(df)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-05-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
pl <- pl + geom_line(alpha = 0.5, size = 7)
pl
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-05-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
pl <- pl + geom_line(alpha = 0.5, size = 7)
pl
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
pl <- pl + geom_line(alpha = 0.5, size = 7)
pl
View(df)
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df<- data.frame(Stage = c("Hola", "Estoy", "Probando", "Estoy", "Un", "Momento"))
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
View(df)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df<- data.frame(Stage = c("Hola", "Estoy", "Probando", "Casa", "Un", "Momento"), Star = c("01-01-2022", "01-02-2022", "15-02-2022", "17-02-2022", "17-02-2022"), End = c("01/02/2022", "15/02/2022", "27/01/2022", "01/03/2022", "17/03/2022") "30/03/2022"), Complete = c(TRUE, FALSE, TRUE, FALSE, FALSE, FALSE))
View(df)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
pl <- pl + geom_line(alpha = 0.5, size = 7)
pl
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
pl <- pl + geom_line(alpha = 0.5, size = 7)
pl
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df<- data.frame(Stage = c("Hola", "Estoy", "Probando", "Casa", "Un", "Momento"), Star = c("01-01-2022", "01-02-2022", "15-02-2022", "17-02-2022", "17-02-2022"), End = c("01/02/2022", "15/02/2022", "27/01/2022", "01/03/2022", "17/03/2022") "30/03/2022"), Complete = c(TRUE, FALSE, TRUE, FALSE, FALSE, FALSE))
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df<- data.frame(Stage = c("Hola", "Estoy", "Probando", "Casa", "Un", "Momento"), Star = c("01-01-2022", "01-02-2022", "15-02-2022", "17-02-2022", "17-02-2022"), End = c("01/02/2022", "15/02/2022", "27/01/2022", "01/03/2022", "17/03/2022", "30/03/2022"), Complete = c(TRUE, FALSE, TRUE, FALSE, FALSE, FALSE))
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df<- data.frame(Stage = c("Hola", "Estoy", "Probando", "Casa", "Un", "Momento"), Star = c("01-01-2022", "01-02-2022", "15-02-2022", "17-02-2022", "17-02-2022", "22-02-2022"), End = c("01/02/2022", "15/02/2022", "27/01/2022", "01/03/2022", "17/03/2022", "30/03/2022"), Complete = c(TRUE, FALSE, TRUE, FALSE, FALSE, FALSE))
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
pl <- pl + geom_line(alpha = 0.5, size = 7)
pl
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot2(df.melt, aes(x=value, y=stage, colours=Complete))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(magrittr)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Star, End))
today <- as.Date('2022-02-05')
pl <- ggplot(df.melt, aes(x=value, y=stage, colours=Complete))
df <- read_csv("prueba.csv")
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
df<- data.frame(Stage = c("Hola", "Estoy", "Probando", "Casa", "Un", "Momento"), Star = c("01-01-2022", "01-02-2022", "15-02-2022", "17-02-2022", "17-02-2022", "22-02-2022"), End = c("01/02/2022", "15/02/2022", "27/01/2022", "01/03/2022", "17/03/2022", "30/03/2022"), Complete = c(TRUE, FALSE, TRUE, FALSE, FALSE, FALSE))
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = Star, xend = End, y = Stage, color = Complete)) + ggplot2::geom_segment()
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
View(df)
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
df <- read_csv("prueba.csv")
df$Star <- dmy(df$Star)
df$End <- dmy(df$End)
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = FECHAS, xend = df$End, y = DEBERES, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = "hola", xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = "df$End", y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
if (! require (ggplot2)) {install.packages ('ggplot2')}
ggplot2::ggplot(df, aes(x = df$Star, xend = df$End, y = df$Stage, yend = df$Stage, color = df$Complete)) + ggplot2::geom_segment()
###### LIBRERIAS
library(ggplot2)
library(tidyr)
library(lubridate)
library(readr)
###### LIBRERIAS
if (! require (ggplot2)) {install.packages ('ggplot2')}
library(ggplot2)
if (! require (tidyr)) {install.packages ('tidyr')}
library(tidyr)
if (! require (lubridate)) {install.packages ('lubridate')}
library(lubridate)
if (! require (readr)) {install.packages ('readr')}
library(readr)
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
View(datos)
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
names(datos) = c("Marca Temporal", "Sorteo", "Edad", "Sexo", "Convivencia" , "Año_de_estudios", "Conexion_internet", "Descuido_internet", "Conexion_humana", "Relacion_Usuarios_inter")
###### ELIMINAR MARCA TEMPORAL
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
names(datos) = c("Marca Temporal", "Sorteo", "Edad", "Sexo", "Convivencia" , "Año_de_estudios", "Conexion_internet", "Descuido_internet", "Conexion_humana", "Relacion_Usuarios_inter", "Queja_tiempo_conectado", "Calificaciones_internet", "Revisar_correo", "Trabajo_internet", "Defensiva_internet", "Pensamientos_agradables_internet", "Anticipa_conectado", "vida_sin_internet", "enoja_conectado", "no_dormir_internet", "imagina_estar_coectado", "un_min_mas", "tratar_de_dejarlo", "ocultarse_tiempo_conectado", "no_salir", "mal_no_bien_si_internet", "hora_de_dormir", "tiempo_para_dormir", "hora_despertar", "horas_de_dormir", "problemas_dormir", "calidad_sueño", "medicina_dormir", "somnolencia", "problema_para_hacer_actividades", "como_duerme")
###### ELIMINAR MARCA TEMPORAL
###### LIBRERIAS
if (! require (ggplot2)) {install.packages ('ggplot2')}
library(ggplot2)
if (! require (tidyr)) {install.packages ('tidyr')}
library(tidyr)
if (! require (lubridate)) {install.packages ('lubridate')}
library(lubridate)
if (! require (readr)) {install.packages ('readr')}
library(readr)
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
names(datos) = c("Marca Temporal", "Sorteo", "Edad", "Sexo", "Convivencia" , "Año_de_estudios", "Conexion_internet", "Descuido_internet", "Conexion_humana", "Relacion_Usuarios_inter", "Queja_tiempo_conectado", "Calificaciones_internet", "Revisar_correo", "Trabajo_internet", "Defensiva_internet", "Pensamientos_agradables_internet", "Anticipa_conectado", "vida_sin_internet", "enoja_conectado", "no_dormir_internet", "imagina_estar_coectado", "un_min_mas", "tratar_de_dejarlo", "ocultarse_tiempo_conectado", "no_salir", "mal_no_bien_si_internet", "hora_de_dormir", "tiempo_para_dormir", "hora_despertar", "horas_de_dormir", "problemas_dormir", "calidad_sueño", "medicina_dormir", "somnolencia", "problema_para_hacer_actividades", "como_duerme")
###### ELIMINAR MARCA TEMPORAL
View(df)
View(datos)
###### LIBRERIAS
if (! require (ggplot2)) {install.packages ('ggplot2')}
library(ggplot2)
if (! require (tidyr)) {install.packages ('tidyr')}
library(tidyr)
if (! require (lubridate)) {install.packages ('lubridate')}
library(lubridate)
if (! require (readr)) {install.packages ('readr')}
library(readr)
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### ELIMINAR MARCA TEMPORAL
View(datos)
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
names(datos) = c("Marca_Temporal", "Sorteo", "Edad", "Sexo", "Convivencia" , "Año_de_estudios", "Conexion_internet", "Descuido_internet", "Conexion_humana", "Relacion_Usuarios_inter", "Queja_tiempo_conectado", "Calificaciones_internet", "Revisar_correo", "Trabajo_internet", "Defensiva_internet", "Pensamientos_agradables_internet", "Anticipa_conectado", "vida_sin_internet", "enoja_conectado", "no_dormir_internet", "imagina_estar_coectado", "un_min_mas", "tratar_de_dejarlo", "ocultarse_tiempo_conectado", "no_salir", "mal_no_bien_si_internet", "hora_de_dormir", "tiempo_para_dormir", "hora_despertar", "horas_de_dormir", "problemas_dormir","despertar_denoche", "ir_baño", "respirar_mal", "toser_roncar", "frio", "calor", "pesadillas", "dolores", "otros", "calidad_sueño", "medicina_dormir", "somnolencia", "animo_actividad", "duerme_solo", "no_entendi", "adiccion_inter", "calidad_sueño")
###### ELIMINAR MARCA TEMPORAL
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
names(datos) = c("Marca_Temporal", "Sorteo", "Edad", "Sexo", "Convivencia" , "Año_de_estudios", "Conexion_internet", "Descuido_internet", "Conexion_humana", "Relacion_Usuarios_inter", "Queja_tiempo_conectado", "Calificaciones_internet", "Revisar_correo", "Trabajo_internet", "Defensiva_internet", "Pensamientos_agradables_internet", "Anticipa_conectado", "vida_sin_internet", "enoja_conectado", "no_dormir_internet", "imagina_estar_coectado", "un_min_mas", "tratar_de_dejarlo", "ocultarse_tiempo_conectado", "no_salir", "mal_no_bien_si_internet", "hora_de_dormir", "tiempo_para_dormir", "hora_despertar", "horas_de_dormir", "problemas_dormir","despertar_denoche", "ir_baño", "respirar_mal", "toser_roncar", "frio", "calor", "pesadillas", "dolores", "otros", "calidad_sueño", "medicina_dormir", "somnolencia", "animo_actividad", "duerme_solo", "no_entendi", "adiccion_inter", "calidad_sueño")
###### ELIMINAR MARCA TEMPORAL
View(df)
View(datos)
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
names(datos) = c("Marca_Temporal", "Sorteo", "Edad", "Sexo", "Convivencia" , "Año_de_estudios","todos_cursos", "Conexion_internet", "Descuido_internet", "Conexion_humana", "Relacion_Usuarios_inter", "Queja_tiempo_conectado", "Calificaciones_internet", "Revisar_correo", "Trabajo_internet", "Defensiva_internet", "Pensamientos_agradables_internet", "Anticipa_conectado", "vida_sin_internet", "enoja_conectado", "no_dormir_internet", "imagina_estar_coectado", "un_min_mas", "tratar_de_dejarlo", "ocultarse_tiempo_conectado", "no_salir", "mal_no_bien_si_internet", "hora_de_dormir", "tiempo_para_dormir", "hora_despertar", "horas_de_dormir", "problemas_dormir","despertar_denoche", "ir_baño", "respirar_mal", "toser_roncar", "frio", "calor", "pesadillas", "dolores", "otros", "calidad_sueño", "medicina_dormir", "somnolencia", "animo_actividad", "duerme_solo", "no_entendi", "adiccion_inter", "calidad_sueño")
###### ELIMINAR MARCA TEMPORAL
View(datos)
###### LEER CSV
datos <- read_csv("BASEDEDATOS.csv")
###### RENOMBRAR VARIABLES
names(datos) = c("Marca_Temporal", "Sorteo", "Edad", "Sexo", "Convivencia" , "Año_de_estudios","Curso_por_ciclo", "Conexion_internet", "Descuido_internet", "Conexion_humana", "Relacion_Usuarios_inter", "Queja_tiempo_conectado", "Calificaciones_internet", "Revisar_correo", "Trabajo_internet", "Defensiva_internet", "Pensamientos_agradables_internet", "Anticipa_conectado", "vida_sin_internet", "enoja_conectado", "no_dormir_internet", "imagina_estar_coectado", "un_min_mas", "tratar_de_dejarlo", "ocultarse_tiempo_conectado", "no_salir", "mal_no_bien_si_internet", "Hora_de_acostarse	", "Tiempo_de_dormir", "Hora_de_levantarse	", "horas_de_dormir", "problemas_dormir","despertar_denoche", "ir_baño", "respirar_mal", "toser_roncar", "frio", "calor", "pesadillas", "dolores", "otros", "calidad_sueño", "medicina_dormir", "somnolencia", "animo_actividad", "duerme_solo", "no_entendi", "Tets_de_adicción_a_Internet	", "Test_de_calidad_de_sueño")
###### ELIMINAR MARCA TEMPORAL
summary(datos$Edad)
###### CREAR DATAFRAME DE EDADES
Edades <- data.frame(
Edad = c(rep("Edades", nrow(datos))),
CantidadDeAlumnos = c(rnorm(nrow(datos), mean(datos$Edad), sd(datos$Edad)))
)
###### BOXPLOT DE EDADES
ggplot(Edades, aes(x=Edad, y=CantidadDeAlumnos), fill=Edad) +
geom_boxplot(fill="RED", alpha=0.3) +
xlab("")
###### CREAR DATAFRAME DE EDADES
Edades <- data.frame(
Edad = c(rep("Edades", nrow(datos))),
CantidadDeAlumnos = c(rnorm(nrow(datos), mean(datos$Edad), sd(datos$Edad)))
)
###### BOXPLOT DE EDADES
ggplot(Edades, aes(x=Edad, y=CantidadDeAlumnos), fill=Edad) +
geom_boxplot(fill="RED", alpha=0.3, orientation = x) +
xlab("")
###### CREAR DATAFRAME DE EDADES
Edades <- data.frame(
Edad = c(rep("Edades", nrow(datos))),
CantidadDeAlumnos = c(rnorm(nrow(datos), mean(datos$Edad), sd(datos$Edad)))
)
###### BOXPLOT DE EDADES
ggplot(Edades, aes(x=Edad, y=CantidadDeAlumnos), fill=Edad) +
geom_boxplot(fill="RED", alpha=0.3, orientation = row) +
xlab("")
###### CREAR DATAFRAME DE EDADES
Edades <- data.frame(
Edad = c(rep("Edades", nrow(datos))),
CantidadDeAlumnos = c(rnorm(nrow(datos), mean(datos$Edad), sd(datos$Edad)))
)
###### BOXPLOT DE EDADES
ggplot(Edades, aes(x=Edad, y=CantidadDeAlumnos), fill=Edad) +
geom_boxplot(fill="RED", alpha=0.3, orientation = y) +
xlab("")
###### CREAR DATAFRAME DE EDADES
Edades <- data.frame(
Edad = c(rep("Edades", nrow(datos))),
CantidadDeAlumnos = c(rnorm(nrow(datos), mean(datos$Edad), sd(datos$Edad)))
)
###### BOXPLOT DE EDADES
ggplot(Edades, aes(x=Edad, y=CantidadDeAlumnos), fill=Edad) +
geom_boxplot(fill="RED", alpha=0.3) +
xlab("")
###### CREAR DATAFRAME DE EDADES
Edades <- data.frame(
Edad = c(rep("Edades", nrow(datos))),
CantidadDeAlumnos = c(rnorm(nrow(datos), mean(datos$Edad), sd(datos$Edad)))
)
###### BOXPLOT DE EDADES
ggplot(Edades, aes(x=CantidadDeAlumnos, y= Edad), fill=Edad) +
geom_boxplot(fill="RED", alpha=0.3) +
xlab("")
###### FUNCION QUE RETORNA LA CANTIDAD DE ESTUDIANTES POR CARRERA
Suma <- function (personas){
return (sum(datos$Convivencia==Convivencia))
}
###### CREAR DATA FRAME "carreras"
personas <- data.frame(
Convivencia=levels(factor(datos$Convivencia)),
Alumnos=c(Suma("Con papá y/o mamá y/o hermanos"), Suma("Solo"), Suma("Con amigos"), Suma("Con otros familiares"))
)
###### FUNCION QUE RETORNA LA CANTIDAD DE ESTUDIANTES POR CARRERA
Suma <- function (personas){
return (sum(datos$Convivencia==personas))
}
###### CREAR DATA FRAME "carreras"
personas <- data.frame(
Convivencia=levels(factor(datos$Convivencia)),
Alumnos=c(Suma("Con papá y/o mamá y/o hermanos"), Suma("Solo"), Suma("Con amigos"), Suma("Con otros familiares"))
)
###### BARPLOT HORIZONTAL DE CARRERA
ggplot(Convivencia, aes(x=Convivencia, y=personas, fill=as.factor(Convivencia))) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 54) +
theme(legend.position="none") +
coord_flip()
###### FUNCION QUE RETORNA LA CANTIDAD DE ESTUDIANTES POR CARRERA
Suma <- function (personas){
return (sum(datos$Convivencia==personas))
}
###### CREAR DATA FRAME "carreras"
Personas <- data.frame(
Convivencia=levels(factor(datos$Convivencia)),
Alumnos=c(Suma("Con papá y/o mamá y/o hermanos"), Suma("Solo"), Suma("Con amigos"), Suma("Con otros familiares"))
)
###### BARPLOT HORIZONTAL DE CARRERA
ggplot(Personas, aes(x=Convivencia, y=personas, fill=as.factor(Convivencia))) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 54) +
theme(legend.position="none") +
coord_flip()
###### FUNCION QUE RETORNA LA CANTIDAD DE ESTUDIANTES POR CARRERA
Suma <- function (personas){
return (sum(datos$Convivencia==personas))
}
###### CREAR DATA FRAME "carreras"
Personas <- data.frame(
Convivencia=levels(factor(datos$Convivencia)),
Alumnos=c(Suma("Con papá y/o mamá y/o hermanos"), Suma("Solo"), Suma("Con amigos"), Suma("Con otros familiares"))
)
###### BARPLOT HORIZONTAL DE CARRERA
ggplot(Personas, aes(x=Convivencia, y=Alumnos, fill=as.factor(Convivencia))) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 54) +
theme(legend.position="none") +
coord_flip()
###### Funcion que retorna la cantidad de personas por metodo de convivencia
Suma <- function (personas){
return (sum(datos$Convivencia==personas))
}
###### CREAR DATA FRAME DE Convivencia
Personas <- data.frame(
Convivencia=levels(factor(datos$Convivencia)),
Alumnos=c(Suma("Con amigos"), Suma("Solo"), Suma("Con papá y/o mamá y/o hermanos"), Suma("Con otros familiares"))
)
###### BARPLOT HORIZONTAL DE Convivencia
ggplot(Personas, aes(x=Convivencia, y=Alumnos, fill=as.factor(Convivencia))) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 54) +
theme(legend.position="none") +
coord_flip()
tabla1<-table(datos$Sexo)
barplot(tabla1)
###### CREAR DATA FRAME DE CURSOS POR CICLO
data <- data.frame(
horas=c( rep("Hora_de_acostarse",nrow(datos)), rep("Hora_de_levantarse",nrow(datos))),
cursos=c( rnorm(nrow(datos), mean(datos$Hora_de_acostarse), sd(datos$Hora_de_acostarse)), rnorm(nrow(datos), mean(datos$Hora_de_levantarse), sd(Datos$Hora_de_levantarse)))
)
###### CREAR DATA FRAME DE CURSOS POR CICLO
data <- data.frame(
horas=c( rep("Hora_de_acostarse",nrow(datos)), rep("Hora_de_levantarse",nrow(datos))),
cursos=c( rnorm(nrow(datos), mean(datos$Hora_de_acostarse), sd(datos$Hora_de_acostarse)), rnorm(nrow(datos), mean(datos$Hora_de_levantarse), sd(datos$Hora_de_levantarse)))
)
###### CREAR BOXPLOT DOBLE
data %>%
ggplot( aes(x=horas, y=cursos, fill=horas)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Hora de acostrse vs Hora de levantarse") +
xlab("Ciclo")
###### CREAR DATA FRAME DE CURSOS POR CICLO
data <- data.frame(
horas=c( rep("Hora_de_acostarse",nrow(datos)), rep("Hora_de_levantarse",nrow(datos))),
cursos=c( rnorm(nrow(datos), mean(datos$Hora_de_acostarse), sd(datos$Hora_de_acostarse)), rnorm(nrow(datos), mean(datos$Hora_de_levantarse), sd(datos$Hora_de_levantarse)))
)
###### CREAR BOXPLOT DOBLE
data %>%
ggplot( aes(x=horas, y=cursos, fill=horas)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Hora de acostrse vs Hora de levantarse") +
xlab("Ciclo")
