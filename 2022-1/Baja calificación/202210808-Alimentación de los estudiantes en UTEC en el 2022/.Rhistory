BD$Problema[BD$Problema=="anemia"]<-"Anemia"
BD$Altura = BD$Altura/100
BD$Problema[BD$Problema=="Anorexia nerviosa."]<-"Anorexia nerviosa"
BD$Problema[BD$Problema=="Ansiedad por comer"]<-"Ansiedad"
BD$Problema[BD$Problema=="Bulimia nerviosa."]<-"Bulimia nerviosa"
BD$Problema[BD$Problema=="gastritis"]<-"Gastritis"
BD$Problema[BD$Problema=="gastritis"]<-"Gastritis"
BD$Problema[BD$Problema=="nada"]<-"Ninguna"
BD$Problema[BD$Problema=="Ningúna"]<-"Ninguna"
BD$Problema[BD$Problema=="Ninguno"]<-"Ninguna"
BD$Problema[BD$Problema=="No"]<-"Ninguna"
BD$Problema[BD$Problema=="No padezco o he padecido de ninguna enfermedad."]<-"Ninguna"
BD$Problema[BD$Problema=="Nose, solo me duele y ya"]<-"Ninguna"
BD$Problema[BD$Problema=="Trastorno de rumiación."]<-"Trastorno de rumiación"
BD$Problema[BD$Problema=="Transtorno de rumiación"]<-"Trastorno de rumiación"
BD$Problema[BD$Problema=="Tuve diabetes , no  si te sirva v:"]<-"Diabetes"
BD$Problema[BD$Problema=="Transtorno por atracon y bulimia"]<-"Trastorno por atracón"
BD$Problema[BD$Problema=="Trastorno alimentario compulsivo."]<-"Trastorno alimentario compulsivo"
BD$Problema[BD$Problema=="Trastorno por evitación de alimento."]<-"Trastorno por evitación de alimentos"
Carreras <- select(BD,1)
barplot(table(Carreras$Carrera),main="Encuestados según carrera", ylab = "Frecuencias", las = 2, col = 'skyblue')
range(BD$Peso, na.rm = TRUE)
range(BD$Altura, na.rm = TRUE)
sd(BD$Peso, na.rm = TRUE)
sd(BD$Altura, na.rm = TRUE)
plot(BD$Peso)
plot(BD$Altura)
plot(BD$Altura~BD$Peso)
Peso <- select(BD, 3)
Altura <- select(BD, 4)
#which(!complete.cases(BD$Peso))
#which(!complete.cases(BD$Altura))
Altura[167,1] <- NA
Peso[23, 1] <- NA
Peso[181, 1] <- NA
pesoyaltura <- data.frame(Peso, Altura)
pesoyaltura <-pesoyaltura[complete.cases(pesoyaltura), ]
cor(pesoyaltura$Peso, pesoyaltura$Altura)
resultados <- lm(pesoyaltura$Peso~pesoyaltura$Altura,data = pesoyaltura)
resultados
plot(pesoyaltura$Altura, pesoyaltura$Peso, main = "Peso vs. Altura", xlab = "Altura", ylab="Peso")
abline(resultados, col = "red")
# Dado que el IMC ideal es de 21.8, usamos la fórmula anterior para calcular el peso ideal de los estudiantes según su altura teniendo en cuenta dicho valor de IMC.
PesoIdealSegunIMC <- (21.8 * BD$Altura *  BD$Altura)
plot(BD$Peso, PesoIdealSegunIMC, xlab="Peso real (kg)", ylab = "Peso ideal según estatura (kg)", main = "Comparación entre el peso real y peso ideal")
abline (0,1, col="red")
barplot(table(BD$CalidAlimentacion),main="Calidad de alimentación",col="lightblue", ylab = "Frecuencias")
Desayunos <- select(BD,7)
barplot(table(Desayunos$Desayuno),main="Alimento primordial del desayuno",ylab = "Frecuencias", col = 'skyblue', las = 2)
barplot(table(BD$HoraAlmuerzo), main="Hora de almuerzo", ylab = "Frecuencia", xlab = "Hora", col = 'skyblue')
TipoAlmuerzoo <- select(BD,9)
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida casera"]<- "Casera"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida de la cafetería"]<- "Cafetería"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida de los exteriores (restaurantes)"]<- "Restaurante"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida rápida"]<- "Rápida"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Restaurante"]<- "Rest"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Rest"]<- "Rest      "
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Rest      "]<- "Rest             "
mosaicplot(table(BD$FactorAlimentacion,TipoAlmuerzoo$TipoAlmuerzo), main='Factores que condicionan los tipos de almuerzo',col=c("yellow","blue","red", "green"))
table(BD$LugarAlmuerzo)
summary(BD$NumFrutas)
boxplot(BD$NumFrutas, main = "Cantidad de fruta al día", ylab = "Frecuencias", xlab = "Cantidades de frutas", col = "skyblue")
boxplot(BD$LitAgua, col = "sky blue", main = "Relación de litros de agua", ylab = "Litros")
smoothScatter(BD$NumCursos,BD$TazasCafe, main = "Relación entre la cantidad de cursos y tazas de cafe",xlab="Número de cursos", ylab = "Tazas de cafe al día")
summary(BD$ComidaChatarra)
table(BD$Problema)
FFA<- as.data.frame(table(BD$FactorAlimentacion))
PorceFA<- data.frame(FFA$Freq/2)
FDA <- cbind(FFA, PorceFA/100)
FDA <- rename(FDA, Probabilidad = 'FFA.Freq.2',Frecuencia='Freq')
FDA
sum(0.425, 0.21)
FrecAlmuerzo <- as.data.frame(table(BD$TipoAlmuerzo))
Porcentajes2 <- data.frame(FrecAlmuerzo$Freq/2)
E <- cbind(FrecAlmuerzo, Porcentajes2/100)
E <- rename(E, Probabilidad = 'FrecAlmuerzo.Freq.2')
E
1 - 0.805
nrow(filter(BD,FactorAlimentacion == "Tiempo" ,TipoAlmuerzo=="Comida rápida"))/200
BR<- as.data.frame(table(BD$CalidAlimentacion))
PorceBR<- data.frame(BR$Freq/2)
PO<- cbind(BR, PorceBR/100)
PO<- rename(PO,Probabilidad = 'BR.Freq.2', Frecuencia='Freq')
PO
1-(0.08)
FC<- as.data.frame(table(BD$ComidaChatarra))
PFC<- data.frame(FC$Freq/2)
FCA <- cbind(FC, PFC/100)
FCA <- rename(FCA, Probabilidad = 'FC.Freq.2',Frecuencia='Freq')
FCA
hist (BD$ComidaChatarra ,xlab='Comida chatarra', main = 'Distribucion observada de comida chatarra a la semana', prob = T)
lines(density(BD$ComidaChatarra), lwd = 2, col = 'red')
legend("topleft", c("Distribucion"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:7,dgeom(-1:6,0.29), main = 'Distribucion (Geometrica) teorica')
dgeom(0,0.695)
FNF<- as.data.frame(table(BD$NumFrutas))
PorceNF<- data.frame(FNF$Freq/2)
NF <- cbind(FNF, PorceNF/100)
NF <- rename(NF, Probabilidad = 'FNF.Freq.2',Frecuencia='Freq')
NF
hist(BD$NumFrutas, main='Distribución observada de frutas al día', xlab = 'Número de frutas consumidas', prob = TRUE)
plot(0:7,dnbinom(0:7,3,0.4),xlab='Número de frutas consumidas',main = 'Distribución (Binomial Negativa) teórica')
round(pnbinom(7,3,0.4),2)
FrecCursos <- as.data.frame(table(BD$NumCursos))
PorcentajesCursos <- data.frame(FrecCursos$Freq/2)
Ncursos<- cbind(FrecCursos, PorcentajesCursos/100)
Ncursos <- rename(Ncursos, Probabilidad = 'FrecCursos.Freq.2')
Ncursos
hist(BD$NumCursos, xlab="Cantidad de Cursos", main = "Distribucion observada de cantidad de cursos", prob = T)
lines(density(BD$NumCursos), lwd = 2, col = 'red')
legend("topleft", c("Distribucion"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:8,dbinom(0:8,30,0.18),main = "Distribucion (Binomial) teorica",xlab='Cantidad de cursos')
pbinom(50,200,0.18)
Caf<- as.data.frame(table(BD$TazasCafe))
PorceCaf<- data.frame(Caf$Freq/2)
NCafe <- cbind(Caf, PorceCaf/100)
NCafe <- rename(NCafe, Probabilidad = 'Caf.Freq.2',Frecuencia='Freq')
NCafe
mean(BD$TazasCafe, na.rm = T)
hist(BD$TazasCafe, main='Distribución observada de tazas de café a la semana', xlab = 'Tazas de café', prob = TRUE)
lines(density(BD$TazasCafe), lwd = 2, col = 'red')
legend("topright", c("Curva Observada"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:23,dpois(0:23, lambda = mean(BD$TazasCafe)), main = 'Distribución (Poisson) teórica')
1 - ppois(9, lambda = mean(BD$TazasCafe)) + dpois(9, lambda = mean(BD$TazasCafe))
round((nrow(filter(BD, TazasCafe > 7, NumCursos<4 ))/200)/ppois(7, mean(BD$TazasCafe), lower.tail = FALSE),2)
FrecPeso <- as.data.frame(table(Peso=factor(cut(BD$Peso, breaks=10))))
FrecPeso[["Porcentajes"]] <-with(FrecPeso, Freq/sum(FrecPeso$Freq))
FrecPeso
round(mean(BD$Peso, na.rm=T),2)
round(var(BD$Peso, na.rm=T),2)
hist(BD$Peso,breaks=10, freq=FALSE, main="Histograma de peso", xlab="Peso (kg)", col="green")
lines(density(BD$Peso, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(BD$Peso,na.rm=TRUE), sd(BD$Peso,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topright", c("curva observada", "curva (normal) teórica"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
FrecAltura <- as.data.frame(table(Altura=factor(cut(BD$Altura, breaks=10))))
FrecAltura[["Porcentajes"]] <-with(FrecAltura, Freq/sum(FrecAltura$Freq))
FrecAltura
round(mean(BD$Altura, na.rm=T),2)
round(var(BD$Altura, na.rm=T),2)
hist(BD$Altura,breaks=10, freq=FALSE, main="Histograma de altura", xlab="Altura (m)", col="green")
lines(density(BD$Altura, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(BD$Altura,na.rm=TRUE), sd(BD$Altura,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topright", c("curva observada", "curva (normal) teórica"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
((nrow(filter(BD,Peso > 64 ,Altura<=1.7))/200)-(nrow(filter(BD,Peso > 64 ,Altura<=1.620))/200))/(pnorm(1.7, 1.655, 0.00770736) - pnorm(1.62, 1.655, 0.00770736))
nrow(filter(BD, Peso > 90, ComidaChatarra > 4))/200
dbinom(50,200,0.005)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(readr) #Apertura de librería readr
library(dplyr) #Apertura de librería dplyr
BD <- read_csv("Proyecto.csv", col_types = "ccnnnccccccnnnnc") # Lectura del archivo
BD <- BD[,2:16] # Eliminación de la columna generada por google forms
BD <- rename(BD, Carrera = '¿Qué carrera estudias?', NumCursos = '¿Cuántos cursos estas llevando en este ciclo?', Peso = 'Peso en kilogramos.', Altura = 'Altura en centímetros', CalidAlimentacion = '¿Cómo consideras que estas llevando tu alimentación?', FactorAlimentacion = '¿Qué razones influyen al momento de alimentarte?', Desayuno = '¿Qué alimento es primordial en su desayuno habitual?', HoraAlmuerzo = '¿Cuál es la hora en la que sueles almorzar normalmente? (Ingrese una hora entera en el formato de 24 horas) Por ejemplo, si colocas "14", significará las 2:00pm', TipoAlmuerzo = 'Normalmente, ¿Qué sueles almorzar?.', LugarAlmuerzo='¿Dónde almuerzas?', NumFrutas = '¿Cuántas frutas consumes al día?', LitAgua= '¿Cuántos litros de agua consumes al día?', TazasCafe = '¿Cuántas tazas de café consumes a la semana?', ComidaChatarra = 'Aproximadamente, ¿Cuántos días a la semana comes comida chatarra?', Problema = 'En el caso de haber padecido algún problema alimenticio, nos apoyaría que nos digas cuál es. Cabe recalcar que esta encuesta es totalmente anónima, en pocas palabras, no registramos correos ni nombres.') #Renombrado de las variables
# Limpieza de la variable Peso tras el uso de boxplot
BD$Peso[BD$Peso > 300] <- NA
# Limpieza de la variable Altura tras el uso de boxplot
BD$Altura[BD$Altura < 100] <- NA
# Limpieza de la variable HoraAlmuerzo tras el uso de table
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="1"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="1415"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="2"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="4"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="6"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="7"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="8"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="9"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="13.00"]<-"13"
# Limpieza de la variable Problema tras el uso de tabla
BD$Problema[BD$Problema=="anemia"]<-"Anemia"
BD$Altura = BD$Altura/100
BD$Problema[BD$Problema=="Anorexia nerviosa."]<-"Anorexia nerviosa"
BD$Problema[BD$Problema=="Ansiedad por comer"]<-"Ansiedad"
BD$Problema[BD$Problema=="Bulimia nerviosa."]<-"Bulimia nerviosa"
BD$Problema[BD$Problema=="gastritis"]<-"Gastritis"
BD$Problema[BD$Problema=="gastritis"]<-"Gastritis"
BD$Problema[BD$Problema=="nada"]<-"Ninguna"
BD$Problema[BD$Problema=="Ningúna"]<-"Ninguna"
BD$Problema[BD$Problema=="Ninguno"]<-"Ninguna"
BD$Problema[BD$Problema=="No"]<-"Ninguna"
BD$Problema[BD$Problema=="No padezco o he padecido de ninguna enfermedad."]<-"Ninguna"
BD$Problema[BD$Problema=="Nose, solo me duele y ya"]<-"Ninguna"
BD$Problema[BD$Problema=="Trastorno de rumiación."]<-"Trastorno de rumiación"
BD$Problema[BD$Problema=="Transtorno de rumiación"]<-"Trastorno de rumiación"
BD$Problema[BD$Problema=="Tuve diabetes , no  si te sirva v:"]<-"Diabetes"
BD$Problema[BD$Problema=="Transtorno por atracon y bulimia"]<-"Trastorno por atracón"
BD$Problema[BD$Problema=="Trastorno alimentario compulsivo."]<-"Trastorno alimentario compulsivo"
BD$Problema[BD$Problema=="Trastorno por evitación de alimento."]<-"Trastorno por evitación de alimentos"
Carreras <- select(BD,1)
barplot(table(Carreras$Carrera),main="Encuestados según carrera", ylab = "Frecuencias", las = 2, col = 'skyblue')
range(BD$Peso, na.rm = TRUE)
range(BD$Altura, na.rm = TRUE)
sd(BD$Peso, na.rm = TRUE)
sd(BD$Altura, na.rm = TRUE)
plot(BD$Peso)
plot(BD$Altura)
plot(BD$Altura~BD$Peso)
Peso <- select(BD, 3)
Altura <- select(BD, 4)
#which(!complete.cases(BD$Peso))
#which(!complete.cases(BD$Altura))
Altura[167,1] <- NA
Peso[23, 1] <- NA
Peso[181, 1] <- NA
pesoyaltura <- data.frame(Peso, Altura)
pesoyaltura <-pesoyaltura[complete.cases(pesoyaltura), ]
cor(pesoyaltura$Peso, pesoyaltura$Altura)
resultados <- lm(pesoyaltura$Peso~pesoyaltura$Altura,data = pesoyaltura)
resultados
plot(pesoyaltura$Altura, pesoyaltura$Peso, main = "Peso vs. Altura", xlab = "Altura", ylab="Peso")
abline(resultados, col = "red")
# Dado que el IMC ideal es de 21.8, usamos la fórmula anterior para calcular el peso ideal de los estudiantes según su altura teniendo en cuenta dicho valor de IMC.
PesoIdealSegunIMC <- (21.8 * BD$Altura *  BD$Altura)
plot(BD$Peso, PesoIdealSegunIMC, xlab="Peso real (kg)", ylab = "Peso ideal según estatura (kg)", main = "Comparación entre el peso real y peso ideal")
abline (0,1, col="red")
barplot(table(BD$CalidAlimentacion),main="Calidad de alimentación",col="lightblue", ylab = "Frecuencias")
Desayunos <- select(BD,7)
barplot(table(Desayunos$Desayuno),main="Alimento primordial del desayuno",ylab = "Frecuencias", col = 'skyblue', las = 2)
barplot(table(BD$HoraAlmuerzo), main="Hora de almuerzo", ylab = "Frecuencia", xlab = "Hora", col = 'skyblue')
TipoAlmuerzoo <- select(BD,9)
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida casera"]<- "Casera"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida de la cafetería"]<- "Cafetería"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida de los exteriores (restaurantes)"]<- "Restaurante"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida rápida"]<- "Rápida"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Restaurante"]<- "Rest"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Rest"]<- "Rest      "
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Rest      "]<- "Rest             "
mosaicplot(table(BD$FactorAlimentacion,TipoAlmuerzoo$TipoAlmuerzo), main='Factores que condicionan los tipos de almuerzo',col=c("yellow","blue","red", "green"))
table(BD$LugarAlmuerzo)
summary(BD$NumFrutas)
boxplot(BD$NumFrutas, main = "Cantidad de fruta al día", ylab = "Frecuencias", xlab = "Cantidades de frutas", col = "skyblue")
boxplot(BD$LitAgua, col = "sky blue", main = "Relación de litros de agua", ylab = "Litros")
smoothScatter(BD$NumCursos,BD$TazasCafe, main = "Relación entre la cantidad de cursos y tazas de cafe",xlab="Número de cursos", ylab = "Tazas de cafe al día")
summary(BD$ComidaChatarra)
table(BD$Problema)
FFA<- as.data.frame(table(BD$FactorAlimentacion))
PorceFA<- data.frame(FFA$Freq/2)
FDA <- cbind(FFA, PorceFA/100)
FDA <- rename(FDA, Probabilidad = 'FFA.Freq.2',Frecuencia='Freq')
FDA
sum(0.425, 0.21)
FrecAlmuerzo <- as.data.frame(table(BD$TipoAlmuerzo))
Porcentajes2 <- data.frame(FrecAlmuerzo$Freq/2)
E <- cbind(FrecAlmuerzo, Porcentajes2/100)
E <- rename(E, Probabilidad = 'FrecAlmuerzo.Freq.2')
E
1 - 0.805
nrow(filter(BD,FactorAlimentacion == "Tiempo" ,TipoAlmuerzo=="Comida rápida"))/200
BR<- as.data.frame(table(BD$CalidAlimentacion))
PorceBR<- data.frame(BR$Freq/2)
PO<- cbind(BR, PorceBR/100)
PO<- rename(PO,Probabilidad = 'BR.Freq.2', Frecuencia='Freq')
PO
1-(0.08)
FC<- as.data.frame(table(BD$ComidaChatarra))
PFC<- data.frame(FC$Freq/2)
FCA <- cbind(FC, PFC/100)
FCA <- rename(FCA, Probabilidad = 'FC.Freq.2',Frecuencia='Freq')
FCA
hist (BD$ComidaChatarra ,xlab='Comida chatarra', main = 'Distribucion observada de comida chatarra a la semana', prob = T)
lines(density(BD$ComidaChatarra), lwd = 2, col = 'red')
legend("topleft", c("Distribucion"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:7,dgeom(-1:6,0.29), main = 'Distribucion (Geometrica) teorica')
dgeom(0,0.695)
FNF<- as.data.frame(table(BD$NumFrutas))
PorceNF<- data.frame(FNF$Freq/2)
NF <- cbind(FNF, PorceNF/100)
NF <- rename(NF, Probabilidad = 'FNF.Freq.2',Frecuencia='Freq')
NF
hist(BD$NumFrutas, main='Distribución observada de frutas al día', xlab = 'Número de frutas consumidas', prob = TRUE)
plot(0:7,dnbinom(0:7,3,0.4),xlab='Número de frutas consumidas',main = 'Distribución (Binomial Negativa) teórica')
round(pnbinom(7,3,0.4),2)
FrecCursos <- as.data.frame(table(BD$NumCursos))
PorcentajesCursos <- data.frame(FrecCursos$Freq/2)
Ncursos<- cbind(FrecCursos, PorcentajesCursos/100)
Ncursos <- rename(Ncursos, Probabilidad = 'FrecCursos.Freq.2')
Ncursos
hist(BD$NumCursos, xlab="Cantidad de Cursos", main = "Distribucion observada de cantidad de cursos", prob = T)
lines(density(BD$NumCursos), lwd = 2, col = 'red')
legend("topleft", c("Distribucion"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:8,dbinom(0:8,30,0.18),main = "Distribucion (Binomial) teorica",xlab='Cantidad de cursos')
pbinom(50,200,0.18)
Caf<- as.data.frame(table(BD$TazasCafe))
PorceCaf<- data.frame(Caf$Freq/2)
NCafe <- cbind(Caf, PorceCaf/100)
NCafe <- rename(NCafe, Probabilidad = 'Caf.Freq.2',Frecuencia='Freq')
NCafe
mean(BD$TazasCafe, na.rm = T)
hist(BD$TazasCafe, main='Distribución observada de tazas de café a la semana', xlab = 'Tazas de café', prob = TRUE)
lines(density(BD$TazasCafe), lwd = 2, col = 'red')
legend("topright", c("Curva Observada"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:23,dpois(0:23, lambda = mean(BD$TazasCafe)), main = 'Distribución (Poisson) teórica')
1 - ppois(9, lambda = mean(BD$TazasCafe)) + dpois(9, lambda = mean(BD$TazasCafe))
round((nrow(filter(BD, TazasCafe > 7, NumCursos<4 ))/200)/ppois(7, mean(BD$TazasCafe), lower.tail = FALSE),2)
FrecPeso <- as.data.frame(table(Peso=factor(cut(BD$Peso, breaks=10))))
FrecPeso[["Porcentajes"]] <-with(FrecPeso, Freq/sum(FrecPeso$Freq))
FrecPeso
round(mean(BD$Peso, na.rm=T),2)
round(var(BD$Peso, na.rm=T),2)
hist(BD$Peso,breaks=10, freq=FALSE, main="Histograma de peso", xlab="Peso (kg)", col="green")
lines(density(BD$Peso, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(BD$Peso,na.rm=TRUE), sd(BD$Peso,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topright", c("curva observada", "curva (normal) teórica"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
FrecAltura <- as.data.frame(table(Altura=factor(cut(BD$Altura, breaks=10))))
FrecAltura[["Porcentajes"]] <-with(FrecAltura, Freq/sum(FrecAltura$Freq))
FrecAltura
round(mean(BD$Altura, na.rm=T),2)
round(var(BD$Altura, na.rm=T),2)
hist(BD$Altura,breaks=10, freq=FALSE, main="Histograma de altura", xlab="Altura (m)", col="green")
lines(density(BD$Altura, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(BD$Altura,na.rm=TRUE), sd(BD$Altura,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topright", c("curva observada", "curva (normal) teórica"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
((nrow(filter(BD,Peso > 64 ,Altura<=1.7))/200)-(nrow(filter(BD,Peso > 64 ,Altura<=1.620))/200))/(pnorm(1.7, 1.655, 0.00770736) - pnorm(1.62, 1.655, 0.00770736))
nrow(filter(BD, Peso > 90, ComidaChatarra > 4))/200
dbinom(50,200,0.005)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(readr) #Apertura de librería readr
library(dplyr) #Apertura de librería dplyr
BD <- read_csv("Proyecto.csv", col_types = "ccnnnccccccnnnnc") # Lectura del archivo
BD <- BD[,2:16] # Eliminación de la columna generada por google forms
BD <- rename(BD, Carrera = '¿Qué carrera estudias?', NumCursos = '¿Cuántos cursos estas llevando en este ciclo?', Peso = 'Peso en kilogramos.', Altura = 'Altura en centímetros', CalidAlimentacion = '¿Cómo consideras que estas llevando tu alimentación?', FactorAlimentacion = '¿Qué razones influyen al momento de alimentarte?', Desayuno = '¿Qué alimento es primordial en su desayuno habitual?', HoraAlmuerzo = '¿Cuál es la hora en la que sueles almorzar normalmente? (Ingrese una hora entera en el formato de 24 horas) Por ejemplo, si colocas "14", significará las 2:00pm', TipoAlmuerzo = 'Normalmente, ¿Qué sueles almorzar?.', LugarAlmuerzo='¿Dónde almuerzas?', NumFrutas = '¿Cuántas frutas consumes al día?', LitAgua= '¿Cuántos litros de agua consumes al día?', TazasCafe = '¿Cuántas tazas de café consumes a la semana?', ComidaChatarra = 'Aproximadamente, ¿Cuántos días a la semana comes comida chatarra?', Problema = 'En el caso de haber padecido algún problema alimenticio, nos apoyaría que nos digas cuál es. Cabe recalcar que esta encuesta es totalmente anónima, en pocas palabras, no registramos correos ni nombres.') #Renombrado de las variables
# Limpieza de la variable Peso tras el uso de boxplot
BD$Peso[BD$Peso > 300] <- NA
# Limpieza de la variable Altura tras el uso de boxplot
BD$Altura[BD$Altura < 100] <- NA
# Limpieza de la variable HoraAlmuerzo tras el uso de table
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="1"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="1415"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="2"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="4"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="6"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="7"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="8"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="9"]<-NA
BD$HoraAlmuerzo[BD$HoraAlmuerzo=="13.00"]<-"13"
# Limpieza de la variable Problema tras el uso de tabla
BD$Problema[BD$Problema=="anemia"]<-"Anemia"
BD$Altura = BD$Altura/100
BD$Problema[BD$Problema=="Anorexia nerviosa."]<-"Anorexia nerviosa"
BD$Problema[BD$Problema=="Ansiedad por comer"]<-"Ansiedad"
BD$Problema[BD$Problema=="Bulimia nerviosa."]<-"Bulimia nerviosa"
BD$Problema[BD$Problema=="gastritis"]<-"Gastritis"
BD$Problema[BD$Problema=="gastritis"]<-"Gastritis"
BD$Problema[BD$Problema=="nada"]<-"Ninguna"
BD$Problema[BD$Problema=="Ningúna"]<-"Ninguna"
BD$Problema[BD$Problema=="Ninguno"]<-"Ninguna"
BD$Problema[BD$Problema=="No"]<-"Ninguna"
BD$Problema[BD$Problema=="No padezco o he padecido de ninguna enfermedad."]<-"Ninguna"
BD$Problema[BD$Problema=="Nose, solo me duele y ya"]<-"Ninguna"
BD$Problema[BD$Problema=="Trastorno de rumiación."]<-"Trastorno de rumiación"
BD$Problema[BD$Problema=="Transtorno de rumiación"]<-"Trastorno de rumiación"
BD$Problema[BD$Problema=="Tuve diabetes , no  si te sirva v:"]<-"Diabetes"
BD$Problema[BD$Problema=="Transtorno por atracon y bulimia"]<-"Trastorno por atracón"
BD$Problema[BD$Problema=="Trastorno alimentario compulsivo."]<-"Trastorno alimentario compulsivo"
BD$Problema[BD$Problema=="Trastorno por evitación de alimento."]<-"Trastorno por evitación de alimentos"
Carreras <- select(BD,1)
barplot(table(Carreras$Carrera),main="Encuestados según carrera", ylab = "Frecuencias", las = 2, col = 'skyblue')
range(BD$Peso, na.rm = TRUE)
range(BD$Altura, na.rm = TRUE)
sd(BD$Peso, na.rm = TRUE)
sd(BD$Altura, na.rm = TRUE)
plot(BD$Peso)
plot(BD$Altura)
plot(BD$Altura~BD$Peso)
Peso <- select(BD, 3)
Altura <- select(BD, 4)
#which(!complete.cases(BD$Peso))
#which(!complete.cases(BD$Altura))
Altura[167,1] <- NA
Peso[23, 1] <- NA
Peso[181, 1] <- NA
pesoyaltura <- data.frame(Peso, Altura)
pesoyaltura <-pesoyaltura[complete.cases(pesoyaltura), ]
cor(pesoyaltura$Peso, pesoyaltura$Altura)
resultados <- lm(pesoyaltura$Peso~pesoyaltura$Altura,data = pesoyaltura)
resultados
plot(pesoyaltura$Altura, pesoyaltura$Peso, main = "Peso vs. Altura", xlab = "Altura", ylab="Peso")
abline(resultados, col = "red")
# Dado que el IMC ideal es de 21.8, usamos la fórmula anterior para calcular el peso ideal de los estudiantes según su altura teniendo en cuenta dicho valor de IMC.
PesoIdealSegunIMC <- (21.8 * BD$Altura *  BD$Altura)
plot(BD$Peso, PesoIdealSegunIMC, xlab="Peso real (kg)", ylab = "Peso ideal según estatura (kg)", main = "Comparación entre el peso real y peso ideal")
abline (0,1, col="red")
barplot(table(BD$CalidAlimentacion),main="Calidad de alimentación",col="lightblue", ylab = "Frecuencias")
Desayunos <- select(BD,7)
barplot(table(Desayunos$Desayuno),main="Alimento primordial del desayuno",ylab = "Frecuencias", col = 'skyblue', las = 2)
barplot(table(BD$HoraAlmuerzo), main="Hora de almuerzo", ylab = "Frecuencia", xlab = "Hora", col = 'skyblue')
TipoAlmuerzoo <- select(BD,9)
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida casera"]<- "Casera"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida de la cafetería"]<- "Cafetería"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida de los exteriores (restaurantes)"]<- "Restaurante"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Comida rápida"]<- "Rápida"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Restaurante"]<- "Rest"
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Rest"]<- "Rest      "
TipoAlmuerzoo$TipoAlmuerzo[TipoAlmuerzoo$TipoAlmuerzo=="Rest      "]<- "Rest             "
mosaicplot(table(BD$FactorAlimentacion,TipoAlmuerzoo$TipoAlmuerzo), main='Factores que condicionan los tipos de almuerzo',col=c("yellow","blue","red", "green"))
table(BD$LugarAlmuerzo)
summary(BD$NumFrutas)
boxplot(BD$NumFrutas, main = "Cantidad de fruta al día", ylab = "Frecuencias", xlab = "Cantidades de frutas", col = "skyblue")
boxplot(BD$LitAgua, col = "sky blue", main = "Relación de litros de agua", ylab = "Litros")
smoothScatter(BD$NumCursos,BD$TazasCafe, main = "Relación entre la cantidad de cursos y tazas de cafe",xlab="Número de cursos", ylab = "Tazas de cafe al día")
summary(BD$ComidaChatarra)
table(BD$Problema)
FFA<- as.data.frame(table(BD$FactorAlimentacion))
PorceFA<- data.frame(FFA$Freq/2)
FDA <- cbind(FFA, PorceFA/100)
FDA <- rename(FDA, Probabilidad = 'FFA.Freq.2',Frecuencia='Freq')
FDA
sum(0.425, 0.21)
FrecAlmuerzo <- as.data.frame(table(BD$TipoAlmuerzo))
Porcentajes2 <- data.frame(FrecAlmuerzo$Freq/2)
E <- cbind(FrecAlmuerzo, Porcentajes2/100)
E <- rename(E, Probabilidad = 'FrecAlmuerzo.Freq.2')
E
1 - 0.805
nrow(filter(BD,FactorAlimentacion == "Tiempo" ,TipoAlmuerzo=="Comida rápida"))/200
BR<- as.data.frame(table(BD$CalidAlimentacion))
PorceBR<- data.frame(BR$Freq/2)
PO<- cbind(BR, PorceBR/100)
PO<- rename(PO,Probabilidad = 'BR.Freq.2', Frecuencia='Freq')
PO
1-(0.08)
FC<- as.data.frame(table(BD$ComidaChatarra))
PFC<- data.frame(FC$Freq/2)
FCA <- cbind(FC, PFC/100)
FCA <- rename(FCA, Probabilidad = 'FC.Freq.2',Frecuencia='Freq')
FCA
hist (BD$ComidaChatarra ,xlab='Comida chatarra', main = 'Distribucion observada de comida chatarra a la semana', prob = T)
lines(density(BD$ComidaChatarra), lwd = 2, col = 'red')
legend("topleft", c("Distribucion"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:7,dgeom(-1:6,0.29), main = 'Distribucion (Geometrica) teorica')
dgeom(0,0.695)
FNF<- as.data.frame(table(BD$NumFrutas))
PorceNF<- data.frame(FNF$Freq/2)
NF <- cbind(FNF, PorceNF/100)
NF <- rename(NF, Probabilidad = 'FNF.Freq.2',Frecuencia='Freq')
NF
hist(BD$NumFrutas, main='Distribución observada de frutas al día', xlab = 'Número de frutas consumidas', prob = TRUE)
plot(0:7,dnbinom(0:7,3,0.4),xlab='Número de frutas consumidas',main = 'Distribución (Binomial Negativa) teórica')
round(pnbinom(7,3,0.4),2)
FrecCursos <- as.data.frame(table(BD$NumCursos))
PorcentajesCursos <- data.frame(FrecCursos$Freq/2)
Ncursos<- cbind(FrecCursos, PorcentajesCursos/100)
Ncursos <- rename(Ncursos, Probabilidad = 'FrecCursos.Freq.2')
Ncursos
hist(BD$NumCursos, xlab="Cantidad de Cursos", main = "Distribucion observada de cantidad de cursos", prob = T)
lines(density(BD$NumCursos), lwd = 2, col = 'red')
legend("topleft", c("Distribucion"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:8,dbinom(0:8,30,0.18),main = "Distribucion (Binomial) teorica",xlab='Cantidad de cursos')
pbinom(50,200,0.18)
Caf<- as.data.frame(table(BD$TazasCafe))
PorceCaf<- data.frame(Caf$Freq/2)
NCafe <- cbind(Caf, PorceCaf/100)
NCafe <- rename(NCafe, Probabilidad = 'Caf.Freq.2',Frecuencia='Freq')
NCafe
mean(BD$TazasCafe, na.rm = T)
hist(BD$TazasCafe, main='Distribución observada de tazas de café a la semana', xlab = 'Tazas de café', prob = TRUE)
lines(density(BD$TazasCafe), lwd = 2, col = 'red')
legend("topright", c("Curva Observada"),
lty = 1, lwd = 2, col = c("red"), bty = "n",
cex = 0.8)
plot(0:23,dpois(0:23, lambda = mean(BD$TazasCafe)), main = 'Distribución (Poisson) teórica')
1 - ppois(9, lambda = mean(BD$TazasCafe)) + dpois(9, lambda = mean(BD$TazasCafe))
round((nrow(filter(BD, TazasCafe > 7, NumCursos<4 ))/200)/ppois(7, mean(BD$TazasCafe), lower.tail = FALSE),2)
FrecPeso <- as.data.frame(table(Peso=factor(cut(BD$Peso, breaks=10))))
FrecPeso[["Porcentajes"]] <-with(FrecPeso, Freq/sum(FrecPeso$Freq))
FrecPeso
round(mean(BD$Peso, na.rm=T),2)
round(var(BD$Peso, na.rm=T),2)
hist(BD$Peso,breaks=10, freq=FALSE, main="Histograma de peso", xlab="Peso (kg)", col="green")
lines(density(BD$Peso, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(BD$Peso,na.rm=TRUE), sd(BD$Peso,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topright", c("curva observada", "curva (normal) teórica"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
FrecAltura <- as.data.frame(table(Altura=factor(cut(BD$Altura, breaks=10))))
FrecAltura[["Porcentajes"]] <-with(FrecAltura, Freq/sum(FrecAltura$Freq))
FrecAltura
round(mean(BD$Altura, na.rm=T),2)
round(var(BD$Altura, na.rm=T),2)
hist(BD$Altura,breaks=10, freq=FALSE, main="Histograma de altura", xlab="Altura (m)", col="green")
lines(density(BD$Altura, na.rm=TRUE),col="red",lwd=3)
curve(dnorm(x, mean(BD$Altura,na.rm=TRUE), sd(BD$Altura,na.rm=TRUE)), lwd = 2, col = "blue", add = T)
legend("topright", c("curva observada", "curva (normal) teórica"),
lty = 1, lwd = 2, col = c("red", "blue"), bty = "n",
cex = 0.8)
((nrow(filter(BD,Peso > 64 ,Altura<=1.7))/200)-(nrow(filter(BD,Peso > 64 ,Altura<=1.620))/200))/(pnorm(1.7, 1.655, 0.00770736) - pnorm(1.62, 1.655, 0.00770736))
nrow(filter(BD, Peso > 90, ComidaChatarra > 4))/200
dbinom(50,200,0.005)
