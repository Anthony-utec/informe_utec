DFN$Precio_2020[DFN$Precio_2020 == "Netflix es la que tengo grupal, pero Disney plus y Movistar play es individual 300"] <- 300
DFN$Precio_2020[DFN$Precio_2020 == "10 so"] <- 10
DFN$Precio_2020[DFN$Precio_2020 == "40 soles"] <- 40
DFN$Precio_2020[DFN$Precio_2020 == "Entre Netflix y Spotify, 17 soles"] <- 17
DFN$Precio_2020[DFN$Precio_2020 == "No se paga por esos servicios"] <- NA
DFN$Precio_2020[DFN$Precio_2020 == "59.9"] <- 60
DFN$Precio_2020[DFN$Precio_2020 == "30soles"] <- 30
DFN$Precio_2020<- as.numeric(DFN$Precio_2020)
DFN$Time_service19[DFN$Time_service19 == "NU"] <- NA
DFN$Time_service19[DFN$Time_service19 == 1] <- 60
DFN$Time_service19[DFN$Time_service19 == 2] <- 120
DFN$Time_service19[DFN$Time_service19 == 3] <- 180
DFN$Time_service19[DFN$Time_service19 == 4] <- 240
DFN$Time_service19[DFN$Time_service19 == 5] <- 300
DFN$Time_service19[DFN$Time_service19 == 6] <- 360
DFN$Time_service19[DFN$Time_service19 == 7] <- 420
DFN$Time_service19[DFN$Time_service19 == 8] <- 480
DFN$Time_service19[DFN$Time_service19 == "9+"] <- 540
DFN$Time_service19<- as.numeric(DFN$Time_service19)
table(DFN$Time_service19)
DFN$Time_service20[DFN$Time_service20 == "NU"] <- NA
DFN$Time_service20[DFN$Time_service20 == 1] <- 60
DFN$Time_service20[DFN$Time_service20 == 2] <- 120
DFN$Time_service20[DFN$Time_service20 == 3] <- 180
DFN$Time_service20[DFN$Time_service20 == 4] <- 240
DFN$Time_service20[DFN$Time_service20 == 5] <- 300
DFN$Time_service20[DFN$Time_service20 == 6] <- 360
DFN$Time_service20[DFN$Time_service20 == 7] <- 420
DFN$Time_service20[DFN$Time_service20 == 8] <- 480
DFN$Time_service20[DFN$Time_service20 == "9+"] <- 540
DFN$Time_service20<- as.numeric(DFN$Time_service20)
DFN$Contenido[DFN$Contenido == "MÚSICA SALSA"] <- "Música"
DFN$Contenido[DFN$Contenido == "Animes, series, documentales,peliculas, transmisiones y podscas"] <- NA
DFN$Contenido[DFN$Contenido == "cualquier cosa"] <- NA
DFN$Contenido[DFN$Contenido == "Dibujitos o entretenimiento de juegos"] <- NA
DFN$Contenido[DFN$Contenido == "Series y películas"] <- NA
DFN$Contenido[DFN$Contenido == "Series y Películas"] <- NA
DFN$Contenido[DFN$Contenido == "Streams"] <- "Stream"
DFN$Contenido[DFN$Contenido == "Streams de Twich"] <- "Stream"
DFN$Contenido[DFN$Contenido == "Terror"] <- NA
DFN$Contenido[DFN$Contenido == "todos los anteriores"] <- NA
DFN$Contenido[DFN$Contenido == "Videojuegos"] <- "Stream"
DFN$Contenido[DFN$Contenido == "videos de entretenimiento"] <- NA
DFN$Contenido[DFN$Contenido == "Videos random"] <- NA
DFN$`Marca temporal` <- NULL
DFN$Identidad <- NULL
DFN$SyP_fav <- NULL
DF1 <- read_csv("Plataforma - Hoja 1.csv")
RIC <- function(x){
return(as.numeric(quantile(x,0.75,na.rm=TRUE)-quantile(x,0.25,na.rm=TRUE)))
}
cv <- function(x){
return(sd(x,na.rm=TRUE)/mean(x,na.rm=TRUE)*100)
}
r<- function(x){
resul <- round(x,2)
return(resul)
}
table(is.na(DFN))
names(DFN)
table(DFN$Sexo)
r(prop.table(table(DFN$Sexo))*100)
table(DFN$Device)
r(prop.table(table(DFN$Device))*100)
table(DFN$Plataforma19)
r(prop.table(table(DFN$Plataforma19))*100)
table(DFN$Plataforma2020)
r(prop.table(table(DFN$Plataforma2020))*100)
colSums(is.na(DFN[6:24]))
#De menos a más datos incompletos
colSums(is.na(DFN[7]))
colSums(is.na(DFN[6]))
colSums(is.na(DFN[20]))
colSums(is.na(DFN[10]))
colSums(is.na(DFN[18]))
colSums(is.na(DFN[31:49]))
#De menos a más datos incompletos
colSums(is.na(DFN[32]))
colSums(is.na(DFN[31]))
colSums(is.na(DFN[35]))
colSums(is.na(DFN[45]))
colSums(is.na(DFN[43]))
# Precio 2019 y Edad
cor(DFN$Precio_2019,DFN$Edad, use = "complete.obs")
cov(DFN$Precio_2019,DFN$Edad, use = "complete.obs")
# Precio 2020 y Edad
cor(DFN$Precio_2020,DFN$Edad, use = "complete.obs")
cov(DFN$Precio_2020,DFN$Edad, use = "complete.obs")
# Time service 2019 y Edad
cor(DFN$Time_service19,DFN$Edad, use = "complete.obs")
cov(DFN$Time_service19,DFN$Edad, use = "complete.obs")
# Time service 2020 y Edad
cor(DFN$Time_service20,DFN$Edad, use = "complete.obs")
cov(DFN$Time_service20,DFN$Edad, use = "complete.obs")
# Cine a stream y Edad
cor(DFN$Cine_a_stream, DFN$Edad, use = "complete.obs")
boxplot(DFN$Edad, horizontal = T,main="Diagrama de caja de la edad de nuestra población",col = c("orange"))  # con horizontal = T coloca el boxplot de manera horizontal. El defecto es vertical
barplot(table(DFN$Device), main="Preferencia de dispositivos", col=c("red","green","yellow"),ylim = c(0,80),xlab = "Dispositivo", ylab = "Número de personas")
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
DFN %>% select(Sexo,"Netflix_2019":"Amazon_p_2019") %>%
pivot_longer("Netflix_2019":"Amazon_p_2019",
names_to="Tipo de Plataforma 2019",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2019`,y=`Tiempo`)) + geom_bar(stat = "identity")+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Netflix_2019":"Amazon_p_2019") %>%
pivot_longer("Netflix_2019":"Amazon_p_2019",
names_to="Tipo de Plataforma 2019",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2019`,y=`Tiempo`)) + geom_boxplot()+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Twitch_2019":"Discord_2019") %>%
pivot_longer("Twitch_2019":"Discord_2019",
names_to="Tipo de Plataforma 2019",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2019`,y=`Tiempo` )) + geom_bar(stat = "identity")+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Twitch_2019":"Discord_2019") %>%
pivot_longer("Twitch_2019":"Discord_2019",
names_to="Tipo de Plataforma 2019",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2019`,y=`Tiempo` )) + geom_boxplot()+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Crunchyroll_2019":"AmericaTVgo_2019") %>%
pivot_longer("Crunchyroll_2019":"AmericaTVgo_2019",
names_to="Tipo de Plataforma 2019",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2019`,y=`Tiempo`)) + geom_bar(stat = "identity")+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Crunchyroll_2019":"AmericaTVgo_2019") %>%
pivot_longer("Crunchyroll_2019":"AmericaTVgo_2019",
names_to="Tipo de Plataforma 2019",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2019`,y=`Tiempo`)) + geom_boxplot()+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Netflix_2020":"Amazon_p_2020") %>%
pivot_longer("Netflix_2020":"Amazon_p_2020",
names_to="Tipo de Plataforma 2020",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2020`,y=`Tiempo`)) + geom_bar(stat = "identity")+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Netflix_2020":"Amazon_p_2020") %>%
pivot_longer("Netflix_2020":"Amazon_p_2020",
names_to="Tipo de Plataforma 2020",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2020`,y=`Tiempo`)) + geom_boxplot()+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Twitch_2020":"Discord_2020") %>%
pivot_longer("Twitch_2020":"Discord_2020",
names_to="Tipo de Plataforma 2020",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2020`,y=`Tiempo` )) + geom_bar(stat = "identity")+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Twitch_2020":"Discord_2020") %>%
pivot_longer("Twitch_2020":"Discord_2020",
names_to="Tipo de Plataforma 2020",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2020`,y=`Tiempo` )) + geom_boxplot()+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Crunchyroll_2020":"AmericaTVgo_2020") %>%
pivot_longer("Crunchyroll_2020":"AmericaTVgo_2020",
names_to="Tipo de Plataforma 2020",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2020`,y=`Tiempo`)) + geom_bar(stat = "identity")+facet_wrap(~Sexo,nrow=2)
DFN %>% select(Sexo,"Crunchyroll_2020":"AmericaTVgo_2020") %>%
pivot_longer("Crunchyroll_2020":"AmericaTVgo_2020",
names_to="Tipo de Plataforma 2020",
values_to="Tiempo") %>%
ggplot(.,aes(x=`Tipo de Plataforma 2020`,y=`Tiempo`)) + geom_boxplot()+facet_wrap(~Sexo,nrow=2)
op <- par(mfrow = c(2,3))
net<-table(DFN$Youtube_2019)
hist<-barplot(net,main="Usuarios de Youtube en el 2019",xlab="Tiempo empleado",ylab="Número de personas",col=c("lightgreen"),ylim = c(0, 30),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net1<-table(DFN$Netflix_2019)
hist1<-barplot(net1,main="Usuarios de Netflix en el 2019",xlab="Tiempo empleado",ylab="Número de personas",col=c("lightgreen"),ylim = c(0, 50),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net2<-table(DFN$Spotify_2019)
hist2<-barplot(net2,main="Usuarios de Spotify en el 2019",xlab="Tiempo empleado",ylab="Número de personas",col=c("lightgreen"),ylim = c(0, 25),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net3<-table(DFN$Zoom_2019)
hist3<-barplot(net3,main="Usuarios de Zoom en el 2019",xlab="Tiempo empleado",ylab="Número de personas",col=c("lightgreen"),ylim = c(0, 17),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net4<-table(DFN$Discord_2019 )
hist4<-barplot(net4,main="Usuarios de Discord en el 2019",xlab="Tiempo empleado",ylab="Número de personas",col=c("lightgreen"),ylim = c(0, 30))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
mean(DFN$Youtube_2019, na.rm = T)
mean(DFN$Netflix_2019, na.rm = T)
op <- par(mfrow = c(2,3))
net5<-table(DFN$Youtube_2020)
hist5<-barplot(net5,main="Usuarios de Youtube en el 2020",xlab="Tiempo empleado",ylab="Número de personas",col=c("blue"),ylim = c(0, 35),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net6<-table(DFN$Netflix_2020)
hist6<-barplot(net6,main="Usuarios de Netflix en el 2020",xlab="Tiempo empleado",ylab="Número de personas",col=c("blue"),ylim = c(0, 35),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net7<-table(DFN$Zoom_2020)
hist7<-barplot(net7,main="Usuarios de Zoom en el 2020",xlab="Tiempo empleado",ylab="Número de personas",col=c("blue"),ylim = c(0, 25),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net8<-table(DFN$Spotify_2020)
hist8<-barplot(net8,main="Usuarios de Spotify en el 2020",xlab="Tiempo empleado",ylab="Número de personas",col=c("blue"),ylim = c(0, 25),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
net9<-table(DFN$Discord_2020)
hist9<-barplot(net9,main="Usuarios de Discord en el 2020",xlab="Tiempo empleado",ylab="Número de personas",col=c("blue"),ylim = c(0, 25),las=2)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
mean(DFN$Youtube_2020, na.rm = T)
mean(DFN$Netflix_2020, na.rm = T)
p19u <- table(DFN$Zoom_2019)
P_19U <- DFN$Zoom_2019
hist(P_19U, freq = T,main="Zoom 2019",  col=c("yellow"), xlab="Minutos",ylab="Número de personas",ylim=c(0,40))
mean(DFN$Zoom_2019, na.rm = T)
mean(DFN$Zoom_2020, na.rm = T)
p20u <- table(DFN$Zoom_2020)
P_20U <- DFN$Zoom_2020
hist(P_20U, freq = T,main="Zoom 2020",  col=c("yellow"), xlab="Minutos",ylab="Número de personas",ylim=c(0,30))
op <- par(mfrow = c(1,2))
plot(DFN$Zoom_2019~DFN$Edad,main = "Zoom 2019" ,xlab = "Edad", ylab = "Tiempo")
plot(DFN$Zoom_2020~DFN$Edad,main = "Zoom 2020" ,xlab = "Edad", ylab = "Tiempo")
precio19 <- table(DFN$Precio_2019)
hist(DFN$Precio_2019, main = "Histograma de Precio 2019", ylab = "Número de personas", col = "lightblue", xlim= c(0,120), xlab = "Precio 2019")
precio20 <- table(DFN$Precio_2020)
hist(DFN$Precio_2020, main = "Histograma de Precio 2020", ylab = "Número de personas", col = "lightgreen", xlim= c(0,100), xlab = "Precio 2020")
op <- par(mfrow = c(1,2))
plot(DFN$Precio_2019~DFN$Edad, xlab = "Edad", ylab = "Soles",main="Precio 2019")
plot(DFN$Precio_2020~DFN$Edad,xlab = "Edad", ylab = "Soles",main="Precio 2020")
op <- par(mfrow = c(1,2))
pag19<-table(DFN$Plataforma19)
barplot(pag19, main="Formas de pago en el 2019", col=c("skyblue","yellow"),ylim = c(0, 110))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
pag20<-table(DFN$Plataforma2020)
barplot(pag20, main="Formas de pago en el 2020", col=c("skyblue","yellow"),ylim = c(0, 110))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
op <- par(mfrow = c(1,2))
boxplot(DFN$Precio_2019~ DFN$Plataforma19,col = c("green","red"),cex.main = 0.8,
main = "Precio - Forma de pago 2019", horizontal = F,ylab="Precio", xlab="Forma de pago")
boxplot(DFN$Precio_2020~ DFN$Plataforma2020, col = c("green","red"),cex.main = 0.8,
main = "Precio - Forma de pago 2020", horizontal = F,ylab="Precio", xlab="Forma de pago")
time19<-table(DFN$Time_service19)
barplot(time19 , main="Tiempo en promedio por día en el 2019", col=c("skyblue"),ylim = c(0, 30))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
x <- DFN$Time_service19
hist(x, freq = T,main="Tiempo en promedio por día en el 2019",  col=c("yellow"), xlab="Minutos",ylab="Número de personas",ylim=c(0,30))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
time20<-table(DFN$Time_service20)
barplot(time20 , main="Tiempo en promedio por día en el 2020", col=c("skyblue"),ylim = c(0, 30), xlab="Minutos")
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
x <- DFN$Time_service20
hist(x, freq = T,main="Tiempo en promedio por día en el 2020",  col=c("yellow"), xlab="Minutos ",ylab="Número de personas",ylim=c(0,30))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
op <- par(mfrow = c(1,2))
boxplot(DFN$Time_service19, main="Minutos en una plataforma en 2019",cex.main=0.9,col=c("blue"),ylab="Minutos")
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
boxplot(DFN$Time_service20,main="Minutos en una plataforma en 2020",cex.main=0.9,col=c("red"), ylab="Minutos")
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
ggplot(DFN, aes(Contenido, fill=Contenido)) +
geom_bar() +
labs(title="Diagrama de barras",
x= "Contendio",
y=NULL) +
geom_text(stat='count',aes(label=..count..), vjust=-0.5, size=3)
barplot(DF1$`2019`[1:5]~DF1$PLATAFORMAS[1:5], main = "Cantidad de personas 2019",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Movistar Play","Netflix","Youtube","Youtube Premium","Zoom"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 160))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2020`[1:5]~DF1$PLATAFORMAS[1:5],main = "Cantidad de personas 2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Movistar Play","Netflix","Youtube","Youtube Premium","Zoom"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 100))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$AOD[1:5]~DF1$PLATAFORMAS[1:5],main = "Crecimiento de personas entre 2019-2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Movistar Play","Netflix","Youtube","Youtube Premium","Zoom"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(-100, 55))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2019`[6:9]~DF1$PLATAFORMAS[6:9], main = "Cantidad de personas 2019",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Amazon Prime Video","Disney Plus","HBO","Twitch"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 50))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2020`[6:9]~DF1$PLATAFORMAS[6:9],main = "Cantidad de personas 2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Amazon Prime Video","Disney Plus","HBO","Twitch"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 70))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$AOD[6:9]~DF1$PLATAFORMAS[6:9],main = "Crecimiento de personas entre 2019-2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Amazon Prime Video","Disney Plus","HBO","Twitch"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 50))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2019`[10:13]~DF1$PLATAFORMAS[10:13], main = "Cantidad de personas 2019",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Claro Video","Discord","Facebook Gaming","Star Plus"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 70))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2020`[10:13]~DF1$PLATAFORMAS[10:13],main = "Cantidad de personas 2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Claro Video","Discord","Facebook Gaming","Star Plus"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 70))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2019`[14:17]~DF1$PLATAFORMAS[14:17], main = "Cantidad de personas 2019",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Crunchyroll","Fox Sport","Hulu","Spotify"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 120))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2020`[14:17]~DF1$PLATAFORMAS[14:17],main = "Cantidad de personas 2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Crunchyroll","Fox Sport","Hulu","Spotify"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 50))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$AOD[14:17]~DF1$PLATAFORMAS[14:17],main = "Crecimiento de personas entre 2019-2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Crunchyroll","Fox Sport","Hulu","Spotify"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(-80, 30))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2019`[18:19]~DF1$PLATAFORMAS[18:19], main = "Cantidad de personas 2019",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("America TV Go","Direct TV Go"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 25))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$`2020`[18:19]~DF1$PLATAFORMAS[18:19],main = "Cantidad de personas 2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("America TV Go","Direct TV Go"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 15))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(DF1$AOD[18:19]~DF1$PLATAFORMAS[18:19],main = "Crecimiento de personas entre 2019-2020",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("America TV Go","Direct TV Go"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(-20, 10))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(table(DFN$Cine_a_stream),main = "Influencia del cines cerrados",
col = "blue",xlab = "Puntuación", ylab = "Número de personas",border = "black",ylim = c(0, 50))
barplot(table(DFN$Traslado_plat),main = "Influencia la actualización del contenido",
col = "red",xlab = "Puntuación", ylab = "Número de personas",border = "black")
op <- par(mfrow = c(1,2))
hist(P_19U, freq = T,main="Zoom 2019",  col=c("yellow","skyblue"), xlab="Minutos",ylab="Número de personas",ylim=c(0,40))
hist(P_20U, freq = T,main="Zoom 2020",  col=c("yellow","skyblue"), xlab="Minutos",ylab="Número de personas",ylim=c(0,30))
op <- par(mfrow = c(1,2))
plot(DFN$Precio_2019~DFN$Edad, xlab = "Edad", ylab = "Soles",main="Precio 2019")
plot(DFN$Precio_2020~DFN$Edad,xlab = "Edad", ylab = "Soles",main="Precio 2020")
op <- par(mfrow = c(1,2))
boxplot(DFN$Time_service19, main="Minutos en una plataforma en 2019",cex.main=0.9,col=c("blue"))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
boxplot(DFN$Time_service20,main="Minutos en una plataforma en 2020",cex.main=0.9,col=c("red"))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
op <- par(mfrow = c(1,2))
plot(DFN$Time_service19~DFN$Edad, xlab = "Edad", ylab = "Min",main="Time 2019")
plot(DFN$Time_service20~DFN$Edad,xlab = "Edad", ylab = "Min",main="Time 2020")
pairs(~DFN$Time_service19 + DFN$Precio_2019 + DF$Edad , col=4)
pairs(~DFN$Time_service20 + DFN$Precio_2020 + DF$Edad , col=2)
op <- par(mfrow = c(1,2))
pag19<-table(DFN$Plataforma19)
barplot(pag19, main="Formas de pago en el 2019", col=c("skyblue","yellow"),ylim = c(0, 110))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
pag20<-table(DFN$Plataforma2020)
barplot(pag20, main="Formas de pago en el 2020", col=c("skyblue","yellow"),ylim = c(0, 110))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
barplot(table(DFN$Cine_a_stream),main = "Influencia del cines cerrados",
col = "blue",xlab = "Puntuación", ylab = "Número de personas",border = "black",ylim = c(0, 50))
op <- par(mfrow = c(1,2))
boxplot(DFN$Time_service19, main="Minutos en una plataforma en 2019",cex.main=0.9,col=c("blue"))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
boxplot(DFN$Time_service20,main="Minutos en una plataforma en 2020",cex.main=0.9,col=c("red"))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
DF <- read_csv("base_limpia.csv")
escala <- sample(c("Adolescentes"),157 ,replace = T)
DF <- mutate(DF,escala)
summary(DF)
DF$escala[DF$Edad>12 & DF$Edad<=18]<-"Adolescentes"
DF$escala[DF$Edad>18 & DF$Edad<=25]<-"Jovenes"
DF$escala[DF$Edad>25 & DF$Edad<=40]<-"Adultos jóvenes"
DF$escala[DF$Edad>40 & DF$Edad<=55]<-"Adultos"
boxplot(DF$Time_service19~DF$escala)
barplot(DF1$`2019`[6:9]~DF1$PLATAFORMAS[6:9], main = "Cantidad de personas 2019",
col = rainbow(6),xlab = "Plataforma", ylab = "Número de personas",border = "black",
legend.text = c("Amazon Prime Video","Disney Plus","HBO","Twitch"),
args.legend = list(title = "Plataforma",horiz = T, x = "top",  cex = 0.55),ylim = c(0, 50))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
x <- DFN$Cine_a_stream
op <- par(mfrow = c(1,2))
# Creamos un histograma
hist(x, freq = FALSE,main="Influencia la actualización del contenido",cex.main=0.8, col=c("red"), xlab="Puntuación",ylab="Frecuencia")
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
# Calculamos la densidad
dx <- density(x)
# Añadimos la línea de densidad
lines(dx, lwd = 2, col = "red")
# Curva de densidad sin histograma
plot(dx, lwd = 2, col = "red",
main = "Densidad")
# Añadimos los datos con riudo en el eje X
rug(jitter(x))
x <- DFN$Traslado_plat
op <- par(mfrow = c(1,2))
# Creamos un histograma
hist(x, freq = FALSE,main="Influencia la actualización del contenido",cex.main=0.8, col=c("yellow"), xlab="Minutos ",ylab="Frecuencia")
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
# Calculamos la densidad
dx <- density(x)
# Añadimos la línea de densidad
lines(dx, lwd = 2, col = "red")
# Curva de densidad sin histograma
plot(dx, lwd = 2, col = "red",
main = "Densidad")
# Añadimos los datos con riudo en el eje X
rug(jitter(x))
# Plataforma 19
table(DFN$Plataforma19)
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 90/156)                  # Draw N random values
hist(y_rbern,                                    # Plot of randomly drawn density
breaks = 2,
main = "Plataforma19 que salga grupal  " , ylim = c(0,100))
# Plataforma 20
table(DFN$Plataforma2020)
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 99/156)                  # Draw N random values
hist(y_rbern,                                    # Plot of randomly drawn density
breaks = 2,
main = "Plataforma2020 que salga grupal " , ylim = c(0,100))
# Device
table(DFN$Device)
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 77/156)                  # Draw N random values
hist(y_rbern,                                    # Plot of randomly drawn density
breaks = 2,
main = "Device: Probabilidad que salga celular" , ylim = c(0,100))
table(DFN$Cine_a_stream)
plot(0:9,dbinom(1:10, size = 10, prob =82/156 ))
table(DFN$Traslado_plat)
plot(0:9,dbinom(1:10, size = 10, prob =61/156 ))
intervalo <- function(variable){
z <- qnorm(0.95+(1-0.95)/2)
s <- sd(variable)
mu <- mean(variable)
n <- length(variable)
cat("(",mu-z*s/sqrt(n),",",mu+z*s/sqrt(n),")")
}
intervalo(DFN$Time_service19)
intervalo(DFN$Time_service20)
intervalo(DFN$Edad)
summary(DFN$Time_service19)
summary(DFN$Time_service20)
op <- par(mfrow = c(1,2))
boxplot(DFN$Time_service19, main="Minutos en una plataforma ANTES",cex.main=0.9,col=c("blue"))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
boxplot(DFN$Time_service20,main="Minutos en una plataforma DURANTE",cex.main=0.9,col=c("red"))
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
dif1 <- DFN$Time_service20 - DFN$Time_service19
mediaH <- mean(dif1)
desvH <- sd(dif1)
t.test(dif1, alternative = "two.sided", mu = 0, conf.level = 0.95)
diferenciaDF <- select(DFN, Time_service19, Time_service20)
boxplot(diferenciaDF,main="Tiempo usado por los estudiantes  en las plataformas en el 2020-19", xlab="Tiempo en plataformas ")
t.test(dif1, mu = 50, conf.level = 0.95)
DF <- read_csv("base_limpia.csv")
escala <- sample(c("Adolescentes"),157 ,replace = T)
DF <- mutate(DF,escala)
summary(DF)
DF$escala[DF$Edad>12 & DF$Edad<=18]<-"Adolescentes"
DF$escala[DF$Edad>18 & DF$Edad<=25]<-"Jovenes"
DF$escala[DF$Edad>25 & DF$Edad<=40]<-"Adultos jóvenes"
DF$escala[DF$Edad>40 & DF$Edad<=55]<-"Adultos"
boxplot(DF$Time_service19~DF$escala, xlab = "Rangos de edad", ylab = "Tiempo en la plataforma", main = "Boxplot de rango de edades vs tiempo usado en la plataforma de streaming")
hist(DF$Time_service19, col = "lightgreen", main= "Histograma de Inversion de los estudiantes", xlab="Cantidad en soles", ylab = "Frecuencia", freq = FALSE)
curve(dexp(x, 1/mean(DF$Time_service19,na.rm = TRUE)), # Función dexp a evaluar
0, 60, 163, # Límites de x y nÂº de valores a evaluar
col = "red",
las = 1, # Etiquetas alineadas horizontalmente
ann = FALSE, # Sin títulos en los ejes
xaxp = c(0, 60, 10),  # Marcas del eje x
ylim = c(0,0.1), # Límites del eje
yaxs = "i", add = TRUE) # Estilo del eje y, ajustado a los límites
points(DF$Time_service19, dexp(DF$Time_service19, 1/mean(DF$Time_service19,na.rm = TRUE)), ylab = "f(x)", pch = 20,  lwd = 1, col = "green4")
DF$Time_service19[DF$escala=="Jovenes"]
mean(DF$Time_service19[DF$escala=="Jovenes"])
mean(DF$Time_service19)
qnorm(0.05, lower.tail=F)
dif2 <- DF$Time_service19[DF$escala=="Jovenes"]
mediaH1 <- mean(dif2)
desvH1 <- sd(dif2)
t.test(dif2, alternative = "two.sided", mu = 180, conf.level = 0.95)
DFNum <- select(DF, Edad, Time_service19, Time_service19, Youtube_2019, Youtube_p_2019, Movistar_play_2020,Movistar_play_2019, Zoom_2019, HBO_2019)
d<- cor(DFNum, use="pairwise.complete.obs")
library(corrplot)
plot(DFNum)
corrplot(d, method = "number")
plot(DF$Zoom_2020,DF$Netflix_2020, xlab = "Tiempo en zoom 2020", ylab = "Tiempo en Netflix 2020", main = "Diagrama de puntos de Tiempo en Zoom vs Tiempo en Netflix")
cor(DF$Netflix_2020,DF$Zoom_2020, use="pairwise.complete.obs")
modelo1 <- lm(DF$Netflix_2020~DF$Zoom_2020)
summary(modelo1)
plot(DF$Zoom_2020,DF$Netflix_2020,xlab= "Tiempo en Zoom",ylab= "Tiempo en Netflix")
modelo1 <- lm(DF$Netflix_2020~DF$Youtube_2020)
abline(coef=coef(modelo1), col="red")
#Se halla la correlación time_service19 - time_service20
cor(DFN$Time_service19, DFN$Time_service20)
#Se halla la correlación Precio_2019 - Precio_2020
plot(DFN$Precio_2019, DFN$Precio_2020)
cor.test(DFN$Precio_2020,DFN$Precio_2019)
#lm2<-lm(DFN$Precio_2020~DFN$Precio_2019)
lm2 <- lm(DFN$Precio_2020 ~ DFN$Precio_2019)
summary(lm2)
plot(DFN$Precio_2019, DFN$Precio_2020) + abline(lm2, col="red")
df2 <- DFN[which(DFN$Edad < 25),]
plot( df2$Edad,df2$Time_service20, xlab = "Edad de los entrevistados", ylab = "tiempo de vista")
cor.test(df2$Time_service20,df2$Edad)
modelo2 <- lm(df2$Time_service20~df2$Edad)
summary(modelo2)
layout(matrix(c(1,1,2,3),2,2,byrow=T))
plot(modelo2$resid~df2$Edad[order(df2$Edad)],
main="Residuales del modelo 2",
xlab="Edad", ylab="Residuales")
abline(h=0,lty=2)
#Histogram of Residuals
hist(modelo2$resid, main="Histogram of Residuals",
ylab="Residuals")
#Q-Q Plot
qqnorm(modelo2$resid)
qqline(modelo2$resid)
plot( df2$Edad,df2$Time_service20, xlab = "Edad de los entrevistados", ylab = "tiempo de vista")
abline(coef=coef(modelo2), col="red")
