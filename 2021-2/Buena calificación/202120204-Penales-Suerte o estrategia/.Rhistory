#Apellido
mosaicplot(table(DF_A$Apellido_A,DF_J$Resultado_P),col = "darkgoldenrod1")
#Copas
mosaicplot(table(DF_A$Copa,DF_J$Resultado_P),col = "gold1")
library(readr)
library(dplyr)
library(modeest)
knitr::include_graphics("penales_1.png")
knitr::include_graphics("factibilidad.jpg")
knitr::include_graphics("diagrama_gantt.png")
DF_A <- read_csv("BasedeDatos_Arquero.csv")
DF_J <- read_csv("BasedeDatos_Jugador.csv")
names(DF_A)
names(DF_J)
#Jugadores
summary(DF_J$Estatura_J)
median(DF_J$Estatura_J)# Calcula la mediana de la variable Estatura_J
round(mean(DF_J$Estatura_J), digits = 1)       # Calcula la media (o promedio) en Jugadores
mlv(DF_J$Pierna, method = "mfv") #Calcular la moda para el lado con el que patea el jugador
cv <- function(x){
return(sd(x,na.rm=TRUE)/mean(x,na.rm=TRUE)*100)
}
sd(DF_J$Estatura_J,na.rm=TRUE)# Desviación Estándar
cv(DF_J$Estatura_J)#Coeficiente de Variación
range(DF_J$Estatura_J,na.rm=TRUE)#Rango de Estaturas
IQR(DF_J$Estatura_J, na.rm=TRUE) #Rango intercuartil
range(DF_J$Edad_J,na.rm=TRUE)#Rango de Edades
IQR(DF_J$Edad_J, na.rm=TRUE) #Rango intercuartil
#Arqueros
summary(DF_A$Estatura_A)
median(DF_A$Estatura_A)# Calcula la mediana de la variable Estatura_A
round(mean(DF_A$Estatura_A), digits = 1)# Calcula la media (o promedio) en Arqueros
mlv(DF_A$Apellido_A, method = "mfv") #Calcular la moda para el Arquero q mas a defendido un penal
sd(DF_A$Estatura_A,na.rm=TRUE)# Desviación Estándar
cv(DF_A$Estatura_A)#Coeficiente de Variación
cov(DF_A$Estatura_A,DF_A$Peso_A)#Covarianza
View(DF_A)
View(DF_J)
clear
library(readr)
library(dplyr)
library(modeest)
knitr::include_graphics("penales_1.png")
knitr::include_graphics("factibilidad.jpg")
knitr::include_graphics("diagrama_gantt.png")
DF_A <- read_csv("BasedeDatos_Arquero.csv")
DF_J <- read_csv("BasedeDatos_Jugador.csv")
names(DF_A)
names(DF_J)
#Jugadores
summary(DF_J$Estatura_J)
median(DF_J$Estatura_J)# Calcula la mediana de la variable Estatura_J
round(mean(DF_J$Estatura_J), digits = 1)       # Calcula la media (o promedio) en Jugadores
mlv(DF_J$Pierna, method = "mfv") #Calcular la moda para el lado con el que patea el jugador
cv <- function(x){
return(sd(x,na.rm=TRUE)/mean(x,na.rm=TRUE)*100)
}
sd(DF_J$Estatura_J,na.rm=TRUE)# Desviación Estándar
cv(DF_J$Estatura_J)#Coeficiente de Variación
range(DF_J$Estatura_J,na.rm=TRUE)#Rango de Estaturas
IQR(DF_J$Estatura_J, na.rm=TRUE) #Rango intercuartil
range(DF_J$Edad_J,na.rm=TRUE)#Rango de Edades
IQR(DF_J$Edad_J, na.rm=TRUE) #Rango intercuartil
#Arqueros
summary(DF_A$Estatura_A)
median(DF_A$Estatura_A)# Calcula la mediana de la variable Estatura_A
round(mean(DF_A$Estatura_A), digits = 1)# Calcula la media (o promedio) en Arqueros
mlv(DF_A$Apellido_A, method = "mfv") #Calcular la moda para el Arquero q mas a defendido un penal
sd(DF_A$Estatura_A,na.rm=TRUE)# Desviación Estándar
cv(DF_A$Estatura_A)#Coeficiente de Variación
cov(DF_A$Estatura_A,DF_A$Peso_A)#Covarianza
View(DF_J)
library(readr)
library(dplyr)
library(modeest)
knitr::include_graphics("penales_1.png")
knitr::include_graphics("factibilidad.jpg")
knitr::include_graphics("diagrama_gantt.png")
DF_A <- read_csv("BasedeDatos_Arquero.csv")
DF_J <- read_csv("BasedeDatos_Jugador.csv")
names(DF_A)
names(DF_J)
#Jugadores
summary(DF_J$Estatura_J)
median(DF_J$Estatura_J)# Calcula la mediana de la variable Estatura_J
round(mean(DF_J$Estatura_J), digits = 1)       # Calcula la media (o promedio) en Jugadores
mlv(DF_J$Pierna, method = "mfv") #Calcular la moda para el lado con el que patea el jugador
cv <- function(x){
return(sd(x,na.rm=TRUE)/mean(x,na.rm=TRUE)*100)
}
sd(DF_J$Estatura_J,na.rm=TRUE)# Desviación Estándar
cv(DF_J$Estatura_J)#Coeficiente de Variación
range(DF_J$Estatura_J,na.rm=TRUE)#Rango de Estaturas
IQR(DF_J$Estatura_J, na.rm=TRUE) #Rango intercuartil
range(DF_J$Edad_J,na.rm=TRUE)#Rango de Edades
IQR(DF_J$Edad_J, na.rm=TRUE) #Rango intercuartil
#Arqueros
summary(DF_A$Estatura_A)
median(DF_A$Estatura_A)# Calcula la mediana de la variable Estatura_A
round(mean(DF_A$Estatura_A), digits = 1)# Calcula la media (o promedio) en Arqueros
mlv(DF_A$Apellido_A, method = "mfv") #Calcular la moda para el Arquero q mas a defendido un penal
sd(DF_A$Estatura_A,na.rm=TRUE)# Desviación Estándar
cv(DF_A$Estatura_A)#Coeficiente de Variación
cov(DF_A$Estatura_A,DF_A$Peso_A)#Covarianza
cor(DF_A$Estatura_A,DF_A$Peso_A)#Correlación
range(DF_A$Estatura_A,na.rm=TRUE)#Rango de Estatura
range(DF_A$Edad_A,na.rm=TRUE)#Rango de Edad
IQR(DF_A$Edad_A, na.rm=TRUE) #Rango intercuartil de Edad
boxplot(DF_J$Estatura_J, horizontal = F, col = "green", main = "Diagrama de Cajas: Estatura de Jugadores")# Diagrama vertical respecto a las Estaturas de los jugadores
hist(DF_J$Estatura_J, col = "lightgreen", main = "Frecuencia de Estatura de los Jugadores")
hist(DF_J$Edad_J, col = "chartreuse1", main = "Frecuencia de Edades de los Jugadores")
boxplot(DF_J$Estatura_J ~ DF_J$Edad_J, las = 3, cex.ais =0.6, col = "springgreen", main = "Boxplot: Edad vs Estatura") # categorización de la variable Edad
boxplot(DF_A$Estatura_A, horizontal = T, col = "yellow2", main = "Boxplot: Diagrama de Cajas de Estatura de Arqueros")
hist(DF_A$Estatura_A, col = "lightyellow", main = "Frecuencia de Estatura de los Arqueros")
hist(DF_A$Edad_A, col = "khaki1", main = "Frecuencia de Edades de los Arqueros")
hist(DF_A$Peso_A, col = "yellow", main = "Frecuencia de Peso de los Arqueros")
boxplot(DF_A$Estatura_A ~ DF_A$Edad_A, las = 3, cex.ais =0.6, col = "yellow1", main="Boxplot: Edad vs Estatura") # categorización de la variable Edad
boxplot(DF_A$Estatura_A ~ DF_A$Peso_A, las = 3, cex.ais =0.6, col = "yellow3", main="Boxplot: Peso vs Estatura") # categorización de la variable Peso
#Pierna con la patea
mosaicplot(table(DF_J$Pierna,DF_J$Resultado_P),col = "lightblue", main="Boxplot: Pierna vs Resultado")
#Paises
mosaicplot(table(DF_J$P.Equipo_P,DF_J$Resultado_P),col = "darkcyan", main="Boxplot: Pierna vs Resultado")
#Copas
mosaicplot(table(DF_A$Copa,DF_A$Resultado_P),col = "gold1", main="Boxplot: Copa vs Resultado")
table(DF_A$Resultado_P)
plot(0:11,dbinom(0:11, size=10, prob=111/156),main= "Análisis del modelo Binomial de la variable Resultado_P",type = 'h', xlab = "Probabilidad")
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 111/156)                  # Draw N random values
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 111/156)                  # Draw N random values
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 111/156)                  # Draw N random values
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 111/156)                  # Draw N random values
library(timevis)
library(readr)
library(dplyr)
library (knitr)
library(ggplot2)
library(corrplot)
library(RColorBrewer)
library(BSDA)
library(Rlab)
plot(DF_J$Edad_J, DF_J$Tiempo_J)
plot(DF_J$Edad_J, DF_J$Tiempo_J)
abline(lm(DF_J$Tiempo_J~DF_J$Edad_J ))
plot(DF_J$Edad_J, DF_J$Tiempo_J)
abline(lm(DF_J$Tiempo_J~DF_J$Edad_J ),col= "blue")
plot(DF_J$Edad_J, DF_J$Tiempo_J)
modelo1 <- lm(DF_J$Tiempo_J~DF_J$Edad_J)
abline(modelo1),col= "blue")
plot(DF_J$Edad_J, DF_J$Tiempo_J)
modelo1 <- lm(DF_J$Tiempo_J~DF_J$Edad_J)
abline(modelo1,col= "blue")
modelo1 <- lm(DF_J$Tiempo_J~DF_J$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_J)
abline(modelo1,col= "blue")
modelo1 <- lm(DF_J$Tiempo_J~DF_J$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_J)
abline(modelo1,col= "blue")
summary(modelo1)
plot(modelo1)
reg <- function(x, y, ...) {
points(x,y, ...)
abline(lm(y~x), lwd=2)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
text(0.5, 0.5, txt, cex = 1.1, font = 4)
}
pairs(~DF_J$Edad_J + DF_J$Tiempo_Prev + DF_J$Tiempo_J , col=2, labels=c("Edad del jugador", "Tiempo previo", "Tiempo de juego"), main="Goles", lower.panel = panel.cor, upper.panel = reg)
f1<-lm( DF_J$Edad_J ~ DF_J$Tiempo_Prev )
f1
f2<-lm(DF_J$Edad_J ~ DF_J$Tiempo_J)
f2
f3<-lm(DF_J$Tiempo_J ~ DF_J$Tiempo_Prev)
f3
modelo1 <- lm(DF_J$Tiempo_J~DF_J$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_J, xlab = "Edad",ylab = "Tiempo jugado",main = "Edad vs Tiempo jugado")
abline(modelo1,col= "blue")
plot(modelo1)
modelo2 <- lm(DF_J$Tiempo_Prev~DF_J$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_Prev, xlab = "Edad",ylab = "Tiempo previo",main = "Edad vs Tiempo previo jugado")
abline(modelo1,col= "blue")
modelo2 <- lm(DF_J$Tiempo_Prev~DF_J$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_Prev, xlab = "Edad",ylab = "Tiempo previo",main = "Edad vs Tiempo previo jugado")
abline(modelo2,col= "blue")
plot(modelo2)
summary(modelo2)
summary(modelo2)
modelo3 <- lm(Gols$Coordenada_X~Gols$Edad_J)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Gols <- DF_J %>% filter(Resultado_P == "Gol")
library(timevis)
library(readr)
library(dplyr)
library (knitr)
library(ggplot2)
library(corrplot)
library(RColorBrewer)
library(BSDA)
library(Rlab)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Tiempo_J)
GTsd=sd(Gols$Tiempo_J)
zsum.test(mean.x=Tmean,sigma.x=GTsd, n.x=156, conf.level=0.95)
modelo3 <- lm(Gols$Coordenada_X~Gols$Edad_J)
modelo3 <- lm(Gols$Coordenada_X~Gols$Edad_J)
table(Gols$Coordenada_X)
complete.cases(Gols$Coordenada_X)
sum(complete.cases(Gols$Coordenada_X))
sum(complete.cases(Gols$Coordenada_X))
nrow(Gols)
modelo3 <- lm(Gols$Coordenada_X~Gols$Edad_J)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Estatura_J)
AHsd=sd(Gols$Estatura_J)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Coordenada_Y)
AHsd=sd(Gols$Coordenada_Y)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Coordenada_X)
AHsd=sd(Gols$Coordenada_X)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Coordenada_X)
AHsd=sd(Gols$Coordenada_X)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Coordenada_X)
AHsd=sd(Gols$Coordenada_X)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Coordenada_X)
AHsd=sd(Gols$Coordenada_X)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$`Angulo V`)
AHsd=sd(Gols$`Angulo V`)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$`Angulo H`)
AHsd=sd(Gols$`Angulo H`)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
library(timevis)
library(readr)
library(dplyr)
library (knitr)
library(ggplot2)
library(corrplot)
library(RColorBrewer)
library(BSDA)
library(Rlab)
knitr::include_graphics("penales_1.png")
knitr::include_graphics("factibilidad.jpg")
knitr::include_graphics("diagrama_gantt.png")
DF_A <- read_csv("BasedeDatos_Arquero.csv")
DF_J <- read_csv("BasedeDatos_Jugador.csv")
names(DF_A)
names(DF_J)
boxplot(DF_J$Estatura_J, horizontal = F, col = "green", main = "Diagrama de Cajas: Estatura de Jugadores")# Diagrama vertical respecto a las Estaturas de los jugadores
hist(DF_J$Estatura_J, col = "lightgreen", main = "Frecuencia de Estatura de los Jugadores")
boxplot(DF_J$Edad_J, horizontal = F, col = "green", main = "Diagrama de Cajas: Edades de los Jugadores")
hist(DF_J$Edad_J, col = "chartreuse1", main = "Frecuencia de Edades de los Jugadores")
hist(DF_J$Edad_J,main="Histograma de Edades de los Jugadores", col="thistle3", xlab = "Edades", freq = FALSE)
curve(dnorm(x, mean(DF_J$Edad_J), sd = sd(DF_J$Edad_J)),
col = "slateblue4",
lwd= 2,
las = 1, # Etiquetas alineadas horizontalmente
ann = FALSE, # Sin títulos en los ejes
xaxp = c(-15, 15, 5),  # Marcas del eje x
ylim = c(0,0.00020), # Límites del eje
yaxs = "i", add=TRUE) # Estilo del eje y, ajustado a los límites
boxplot(DF_A$Estatura_A, horizontal = T, col = "yellow2", main = "Boxplot: Diagrama de Cajas de Estatura de Arqueros")
hist(DF_A$Estatura_A, col = "lightyellow", main = "Frecuencia de Estatura de los Arqueros")
hist(DF_A$Edad_A, col = "khaki1", main = "Frecuencia de Edades de los Arqueros")
hist(DF_A$Edad_A,main="Histograma de Edades de los Arqueros", col="lightgreen", xlab = "Edad", freq = FALSE)
curve(dnorm(x, mean(DF_A$Edad_A), sd = sd(DF_A$Edad_A)),
col = "slateblue4",
lwd= 2,
las = 1, # Etiquetas alineadas horizontalmente
ann = FALSE, # Sin títulos en los ejes
xaxp = c(-15, 15, 5),  # Marcas del eje x
ylim = c(0,0.00020), # Límites del eje
yaxs = "i", add=TRUE) # Estilo del eje y, ajustado a los límites
hist(DF_A$Peso_A, col = "yellow", main = "Frecuencia de Peso de los Arqueros")
boxplot(DF_A$Estatura_A ~ DF_A$Peso_A, las = 3, cex.ais =0.6, col = "yellow3", main="Boxplot: Peso vs Estatura de Arqueros") # categorización de la variable Peso
#Pierna con la patea
mosaicplot(table(DF_J$Pierna,DF_J$Resultado_P),col = "lightblue", main="Mosaico:  Pierna vs Resultado")
#Copas
mosaicplot(table(DF_A$Copa,DF_A$Resultado_P),col = "gold1", main="Mosaico: Copa vs Resultado")
mosaicplot(table(DF_A$Año_C, DF_A$Resultado_P), main="Mosaico: Resultado vs Año")
cor(DF_A$Estatura_A,DF_A$Peso_A, use="complete.obs")
round(cor(DF_A$Estatura_A,DF_A$Peso_A, use="complete.obs"), digits = 2)
plot(DF_A$Peso_A,DF_A$Estatura_A, pch=20, col="green", main="Diagrama de Dispersión: Altura vs Peso de los Arqueros")
abline(lm(DF_A$Estatura_A ~ DF_A$Peso_A),col="red")
leyen=c("Verde=Gol", "Rojo = No gol")
hist(DF_J$Tiempo_Prev, col = ifelse(DF_J$Resultado_P == "Gol","green", "red"), main = "Histograma de tiempo previo e incidencia de Gol", nclass = 20)
legend("topright", legend = paste(leyen), cex = 0.71)
leyen=c("Verde=Gol", "Naranja = No gol")
plot(main="Grafica de Dispersión: Tiempo Jugado vs Edad de los Jugadores",DF_J$Edad_J,DF_J$Tiempo_J, pch = 20, col = ifelse(DF_J$Resultado_P == "Gol","green", "lightsalmon3"))
abline(v = 30, col = "red")
abline(v = 25, col = "red")
abline(v = 28, col = "blue")
abline(h = 120, col = "red")
abline(h = 10, col = "red")
legend("topright", legend = paste(leyen), cex = 0.71)
leyen=c("Verde=Gol", "Naranja = No gol")
plot(DF_J$Coordenada_X, DF_J$Coordenada_Y, pch = 20, col = ifelse(DF_J$Resultado_P == "Gol","green", "lightsalmon3"), main = "Grafica de Dispersión de cordenadas e incidencia de Gol")
abline(h=2.44, col = "red")
abline(v=7.32, col = "blue")
legend("topright", legend = paste(leyen), cex = 0.71)
abline(h=1.22, col ="grey")
abline(v=7.32/2, col ="grey")
abline(v=0, col ="blue")
table(DF_A$Resultado_P)
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 111/156)                  # Draw N random values
y_rbern
hist(y_rbern,                                   # Plot of randomly drawn density
breaks = 2
,main= "Análisis del modelo Bernoulli de la variable Resultado_P", xlab = "Probabilidad")
table(DF_A$Resultado_P)
plot(0:11,dbinom(0:11, size=10, prob=111/156),main= "Análisis del modelo Binomial de la variable Resultado_P",type = 'h', xlab = "Numero de Penales")
set.seed(156)                                  # Set seed for reproducibility
N <- 156
y_rbern <- rbern(N, prob = 119/156)                  # Draw N random values
y_rbern
hist(y_rbern,                                    # Plot of randomly drawn density
breaks = 2,
main = "Análisis del modelo Bernoulli de la variable Pierna",
xlab = "Probabilidad",
)
table(DF_J$Pierna)
plot(0:10,dgeom(0:10, prob=29/156),main= "Modelo geométrico de los penales tapados por primera vez",type = 'h',xlab = "Nro del penal", ylab = "Porcentaje")
plot(0:10,dgeom(0:10, prob=111/156),main= "Modelo geométrico de los penales metidos por primera vez",type = 'h',xlab = "Nro del penal", ylab = "Porcentaje")
plot(0:10,dgeom(0:10,58/156),type = 'h',main = "Penales tirados por primera vez por un delantero",xlab = "Nro del penal", ylab = "Porcentaje")
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Tiempo_Prev)
GTPsd=sd(Gols$Tiempo_Prev)
zsum.test(mean.x=Tmean,sigma.x=GTPsd, n.x=156, conf.level=0.95)
n <- nrow(Gols)
val <- qnorm(0.05)
intervaloA <- Tmean - (val * (GTPsd/sqrt(n)))
intervaloB <-  Tmean + (val * (GTPsd/sqrt(n)))
intervaloA
intervaloB
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Tiempo_J)
GTsd=sd(Gols$Tiempo_J)
zsum.test(mean.x=Tmean,sigma.x=GTsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$`Angulo H`)
AHsd=sd(Gols$`Angulo H`)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$`Angulo V`)
AHsd=sd(Gols$`Angulo V`)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Coordenada_X)
AHsd=sd(Gols$Coordenada_X)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Coordenada_Y)
AHsd=sd(Gols$Coordenada_Y)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Estatura_J)
AHsd=sd(Gols$Estatura_J)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
colorArea <- function(from, to, density, ..., col="red", dens=NULL){
y_seq <- seq(from, to, length.out=500)
d <- c(0, density(y_seq, ...), 0)
polygon(c(from, y_seq, to), d, col=col, density=dens)
}
tc <- qt(0.05, df = 155)
mu <- 95
n<- nrow(Gols)
s <- sd(Gols$Tiempo_J)
x <- mean(Gols$Tiempo_J)
T <- (x-mu)/(s/sqrt(n))
Xs <- seq(-4, 4, by = 0.1)
plot(Xs, dnorm(Xs), type = "l", col="green", xlab = "", ylab = "")
abline(v = tc, lty = 2, col = "red",lwd =2)
abline(h = 0, lty = 2, col = "gray")
abline(v = T,lty = 1 , col = "blue")
colorArea(from=tc, to=-4, dnorm)
pc <- qt(0.05, df =155, lower.tail = F)
mu <- 5
n<- nrow(Gols)
s <- sd(Gols$Tiempo_Prev)
x <- mean(Gols$Tiempo_Prev)
T <- (x-mu)/(s/sqrt(n))
Xs <- seq(-4, 4, by = 0.1)
plot(Xs, dnorm(Xs), type = "l", col="green", xlab = "", ylab = "")
abline(v = pc, lty = 2, col = "red",lwd =2)
abline(h = 0, lty = 2, col = "gray")
abline(v = T,lty = 1 , col = "blue")
colorArea(from=pc, to=4, dnorm)
tc <- qt(0.05,df = 155)
mu <- 178
n<- nrow(Gols)
s <- sd(Gols$Estatura_J)
x <- mean(Gols$Estatura_J)
T <- (x-mu)/(s/sqrt(n))
Xs <- seq(-4, 4, by = 0.1)
plot(Xs, dnorm(Xs), type = "l", col="green", xlab = "", ylab = "")
abline(v = tc, lty = 2, col = "red",lwd =2)
abline(h = 0, lty = 2, col = "gray")
abline(v = T,lty = 1 , col = "blue")
colorArea(from=-4, to=tc, dnorm)
tc <- qt(0.05,df = 155)
mu <- 4
n<- nrow(Gols)
s <- sd(Gols$Coordenada_X)
x <- mean(Gols$Coordenada_X)
T <- (x-mu)/(s/sqrt(n))
Xs <- seq(-4, 4, by = 0.1)
plot(Xs, dnorm(Xs), type = "l", col="green", xlab = "", ylab = "")
abline(v = tc, lty = 2, col = "red",lwd =2)
abline(h = 0, lty = 2, col = "gray")
abline(v = T,lty = 1 , col = "blue")
colorArea(from=-4, to=tc, dnorm)
reg <- function(x, y, ...) {
points(x,y, ...)
abline(lm(y~x), lwd=2)
}
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
text(0.5, 0.5, txt, cex = 1.1, font = 4)
}
pairs(~DF_J$Edad_J + DF_J$Tiempo_Prev + DF_J$Tiempo_J , col=2, labels=c("Edad del jugador", "Tiempo previo", "Tiempo de juego"), main="Goles", lower.panel = panel.cor, upper.panel = reg)
f1<-lm( DF_J$Edad_J ~ DF_J$Tiempo_Prev )
f1
f2<-lm(DF_J$Edad_J ~ DF_J$Tiempo_J)
f2
f3<-lm(DF_J$Tiempo_J ~ DF_J$Tiempo_Prev)
f3
modelo1 <- lm(DF_J$Tiempo_J~DF_J$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_J, xlab = "Edad",ylab = "Tiempo jugado",main = "Edad vs Tiempo jugado")
abline(modelo1,col= "blue")
plot(modelo1)
summary(modelo1)
modelo2 <- lm(DF_J$Tiempo_Prev~DF_J$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_Prev, xlab = "Edad",ylab = "Tiempo previo",main = "Edad vs Tiempo previo jugado")
abline(modelo2,col= "blue")
plot(modelo2)
summary(modelo2)
modelo3 <- lm(Gols$Coordenada_X~Gols$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_Prev, xlab = "Edad",ylab = "Tiempo previo",main = "Edad vs Tiempo previo jugado")
abline(modelo2,col= "blue")
sum(complete.cases(Gols$Coordenada_X))
plot(modelo2)
summary(modelo2)
modelo3 <- lm(Gols$Coordenada_X~Gols$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_Prev, xlab = "Edad",ylab = "Tiempo previo",main = "Edad vs Tiempo previo jugado")
abline(modelo2,col= "blue")
modelo3 <- lm(Gols$Coordenada_X~Gols$Edad_J)
plot(Gols$Edad_J, Gols$Coordenada_X, xlab = "Edad",ylab = "Coordenada X",main = "Edad vs Coordenada X de la pelota")
abline(modelo3,col= "blue")
plot(modelo3)
modelo1 <- lm(Gols$Tiempo_J~Gols$Edad_J)
plot(DF_J$Edad_J, DF_J$Tiempo_J, xlab = "Edad",ylab = "Tiempo jugado",main = "Edad vs Tiempo jugado")
abline(modelo1,col= "blue")
modelo1 <- lm(Gols$Tiempo_J~Gols$Edad_J)
plot(Gols$Edad_J, Gols$Tiempo_J, xlab = "Edad",ylab = "Tiempo jugado",main = "Edad vs Tiempo jugado")
abline(modelo1,col= "blue")
plot(modelo1)
summary(modelo1)
modelo2 <- lm(Gols$Tiempo_Prev~Gols$Edad_J)
plot(Gols$Edad_J, Gols$Tiempo_Prev, xlab = "Edad",ylab = "Tiempo previo",main = "Edad vs Tiempo previo jugado")
abline(modelo2,col= "blue")
plot(modelo2)
summary(modelo2)
Gols <- DF_J %>% filter(Resultado_P == "Gol")
GOlsA <- DF_A %>% filter(Resultado_P == "Gol")
Tmean=mean(Gols$Estatura_J)
AHsd=sd(Gols$Estatura_J)
zsum.test(mean.x=Tmean,sigma.x=AHsd, n.x=156, conf.level=0.95)
View(GOlsA)
modelo3 <- lm(GolsA$Coordenada_Y~GolsA$Estatura_A)
modelo3 <- lm(GolsA$Coordenada_Y~GolsA$Estatura_A)
modelo3 <- lm(GOlsA$Coordenada_Y~GOlsA$Estatura_A)
GOlsA$Estatura_A
GOlsA$Coordenada_Y
modelo3 <- lm(Gols$Coordenada_Y~GOlsA$Estatura_A)
plot(GOlsA$Estatura_A,Gols$Coordenada_Y, xlab = "Estatura del Arquero",ylab = "Coordenada Y",main = "Estatura del arquero vs Coordenada Y de la pelota")
abline(modelo3,col= "blue")
plot(modelo3)
summary(modelo3)
modelo2 <- lm(Gols$Tiempo_Prev~Gols$Edad_J)
plot(Gols$Edad_J, Gols$Tiempo_Prev, xlab = "Edad",ylab = "Tiempo previo",main = "Edad vs Tiempo previo a patear el penal")
abline(modelo2,col= "blue")
knitr::include_graphics("modelo1_2.png")
