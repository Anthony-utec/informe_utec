scale_x_continuous(breaks=seq(0, 12, 2)) +
theme_pubclean()
# Gráfica Día
g_day <- ggplot(IGP_datos, aes(day(IGP_datos$Fecha))) +
geom_histogram(fill="#A4F4B8", colour="Black", bins=31) + #"#008B8B"
xlab("Día") +
ylab("Frecuencia") +
ggtitle("Histograma - Día") +
scale_x_continuous(breaks=seq(0, 31, 5)) +
theme_pubclean()
# Gráfica Hora
g_hour <- ggplot(IGP_datos, aes(hour(IGP_datos$Hora))) +
geom_histogram(fill="#FFD580", colour="black", bins=24) +
xlab("Hora (0 - 24)") +
ylab("Frecuencia") +
ggtitle("Histograma - Hora") +
scale_x_continuous(breaks=seq(0, 23, 4)) +
theme_pubclean()
grid.arrange(g_month, g_day, g_hour, ncol=3)
aux_df_anos <- IGP_datos %>% group_by(year(IGP_datos$Fecha)) %>% summarise(counts = n())
colnames(aux_df_anos) <- c("Año", "Frecuencia")
g_anos_points <- ggplot(aux_df_anos, aes(x=Año, y=Frecuencia)) +
geom_point() +
geom_smooth(method="lm", colour="#6c78bc") +
scale_x_continuous(breaks=seq(1960, 2021, 10)) +
ggtitle("Gráfico de dispersión de sismos desde 1960") +
theme_pubclean()
formula = y ~ x
g_anos_points +
stat_cor(method="pearson", label.x=1963.5, label.y=765) +
stat_poly_eq(aes(label = ..eq.label..), label.x=0.1, label.y=0.7, formula = formula, parse = TRUE)
# Gráfica Años
g_year <- ggplot(IGP_datos, aes(year(IGP_datos$Fecha))) +
geom_histogram(fill="#6c78bc", colour="black", bins=25) +
geom_vline(aes(xintercept=mean(year(IGP_datos$Fecha)), color="Media"), linetype=2, size=0.5)+
geom_vline(aes(xintercept=median(year(IGP_datos$Fecha)), color="Mediana"), linetype=2, size=0.5)+
xlab("Año") +
ylab("Frecuencia") +
ggtitle("Histograma de variable Año") +
scale_y_continuous(breaks=seq(0, 2500, by=500)) +
scale_x_continuous(breaks=seq(min(year(IGP_datos$Fecha)), max(year(IGP_datos$Fecha)), by=10)) +
theme_pubclean()
g_year$labels$colour = ""
g_year
#Summarise categorical variable
desc_categ <- count(IGP_datos, Rango_Profundidad)
desc_categ$Percent <- round(desc_categ$n / sum(desc_categ$n), 3)
desc_categ %<>% rename(Frequency = n)
desc_categ %<>% adorn_totals("row")
desc_categ %>% kable(caption="Resumen de variable categórica Rango_Profundidad") %>% kable_paper("hover")
# histograma rango de profundidad
aux_df_rprof <- IGP_datos %>%
group_by(Rango_Profundidad) %>%
summarise(Counts=n())
g_rprofundidad <- ggplot(aux_df_rprof, aes(x=Rango_Profundidad, y=Counts)) +
geom_bar(fill="#C4A848", stat="identity") +
geom_text(aes(label=Counts), vjust= -0.3) +
xlab("Rango de profundidad") +
ylab("Frecuencia") +
ggtitle("Gráfico de barras de variable Rango de Profundidad") +
scale_y_continuous(breaks=seq(0, 15e3, 2500)) +
theme_pubclean()
g_rprofundidad
#Gráfico de barras de Magnitud
g_magnitud <- ggplot(Clase_Magnitud, aes(x=Var1, y=Freq)) +
geom_bar(fill="#0073C2FF", stat="identity") +
geom_text(aes(label=Freq), vjust= -0.3) +
xlab("Magnitud") +
ylab("Frecuencia") +
ggtitle("Gráfico de barras de variable Magnitud") +
theme_pubclean()
g_magnitud
g_box_mag <- ggplot(IGP_datos, aes(x="", y=Magnitud)) +
geom_boxplot(outlier.shape = NA) +
#geom_jitter(width = 0.2, alpha=0.1, colour="#69c561") +
xlab("") +
ggtitle("Boxplot de variable Magnitud") +
theme_pubclean()
g_box_mag_jit <- g_box_mag + geom_jitter(width = 0.2, alpha=0.1, colour="#69c561") + ggtitle("")
g_box_prof <- ggplot(IGP_datos, aes(x="", y=Profundidad)) +
geom_boxplot(outlier.shape = NA) +
#geom_jitter(width = 0.2, alpha=0.1, colour="#b38989") +
xlab("") +
ggtitle("Boxplot de variable Profundidad") +
theme_pubclean()
g_box_prof_jit <- g_box_prof + geom_jitter(width = 0.2, alpha=0.1, colour="#b38989") + ggtitle("")
grid.arrange(g_box_mag, g_box_mag_jit, g_box_prof, g_box_prof_jit, ncol=2, nrow=2)
# Años vs Magnitud
x2 <- year(IGP_datos$Fecha)
y2 <- IGP_datos$Magnitud
ggplot(IGP_datos,aes(x=x2, y=y2)) +
geom_point(alpha=0.09, colour="Brown") +
ggtitle("Gráfica de Magnitud vs Años") +
ylab("Magnitud (M)") +
xlab("Años") +
scale_x_continuous(breaks=seq(1960, 2020, 10)) +
theme_pubclean()
# Años vs Profundidad
y1 <- IGP_datos$Profundidad
x1 <- year(IGP_datos$Fecha)
aux_IGP_datos <- data.frame(x1, y1, Clase_Magnitud=cut(IGP_datos$Magnitud, 0:12))
p1 <- ggplot(aux_IGP_datos, aes(x=x1, y=y1)) +
geom_point(alpha=0.5, aes(colour=Clase_Magnitud)) +
ggtitle("Gráfica de Años vs Profundidad") +
scale_x_continuous(breaks=seq(1960, 2021, 10)) +
ylab("Profundidad (km)") +
xlab("Años")
p1$labels$colour = "Magnitud"
aux <- IGP_datos %>% filter(Magnitud > 8)
aux_2 <- IGP_datos %>% filter(Magnitud > 7 & Magnitud <= 8)
p1 <- p1 + geom_point(data=aux, aes(x=year(aux$Fecha), y=Profundidad), colour="violet", size=3)
p1 + theme_pubclean() + geom_point(data=aux_2, aes(x=year(aux_2$Fecha), y=Profundidad), colour="#b19cd9", size=2.5)
g_mag_long <- ggplot(IGP_datos, aes(y=Magnitud, x=Longitud)) +
geom_point(aes(colour=Rango_Profundidad), alpha=0.3) +
ggtitle("Gráfico de dispersión de Magnitud vs Longitud")
g_mag_long$labels$colour = "Rango de Profundidad"
g_mag_long + theme_pubclean()
# Profundidad vs Magnitud
x <- IGP_datos$Profundidad
y <- IGP_datos$Magnitud
fudgeit <- function(){
xm <- get('xm', envir = parent.frame(1))
ym <- get('ym', envir = parent.frame(1))
z  <- get('dens', envir = parent.frame(1))
colramp <- get('colramp', parent.frame(1))
fields::image.plot(z, col = colramp(256), legend.only=T, add =F)
}
smoothScatter(x, y, transformation = function(x) x ^ 0.4,xlim=c(0,700),
colramp = colorRampPalette(c("#000099", "#00FEFF", "#45FE4F",
"#FCFF00", "#FF9400", "#FF3100")),
xlab="Profundidad (km)",
ylab="Magnitud",
main="Mapa de calor (frecuencia relativa) de Profundidad vs Magnitud",
postPlotHook = fudgeit)
GR<- ggplot(IGP_datos, aes(IGP_datos$Magnitud, IGP_datos$Profundidad))+xlab("Magnitud")+ylab("Profundidad")+ geom_point() +  geom_smooth(method = "lm", colour="Red")
GR +
stat_cor(method="pearson", label.x=2.5, label.y=600) +
stat_poly_eq(aes(label = ..eq.label..), label.x=0.05, label.y=0.7, formula = formula, parse = TRUE)
# Los datos se guardan como un "tibble" en IGP_datos
IGP_datos <- read_excel(
"IGP_datos_sismicos.xlsx",
col_names = c("Fecha", "Hora", "Latitud", "Longitud",
"Profundidad", "Magnitud")
)
# Se omite la primera fila
IGP_datos <- IGP_datos[-c(1),]
# Corrección de tipo de variable
IGP_datos$Magnitud %<>% as.double
IGP_datos$Latitud %<>% as.double
IGP_datos$Longitud %<>% as.double
IGP_datos$Profundidad %<>% as.integer
IGP_datos$Fecha %<>% format_dates %<>% anytime
IGP_datos$Hora %<>% hms
#Adición de columna de nivel de profundidad
#(h<60 km), intermedios (61<h<350 km) y profundos (h>351 km).
IGP_datos$Rango_Profundidad <- with(IGP_datos,
factor(
ifelse(Profundidad <= 60, "Superficial",
ifelse(Profundidad <= 350 & Profundidad >= 61, "Intermedio", "Profundo")), levels=c("Superficial", "Intermedio", "Profundo")))
#Adición de columnas categóricas
Clase_Magnitud <- as.data.frame(table(cut(IGP_datos$Magnitud, 0:10))) %>% filter(Freq != 0)
colSums(is.na(IGP_datos)) %>% kable(
caption="Tabla de valores faltantes (NA/NaN) de cada variable") %>%
kable_paper("hover")
IGP_datos %>% head %>%
kbl(caption="Primeras observaciones de la base de datos del IGP") %>%
kable_paper("hover", full_width = F)
IGP_datos %>% select(Profundidad, Magnitud, Longitud, Latitud) %>%
descr(
stats=c("mean", "sd", "min", "q1", "med", "q3", "max", "mad", "iqr", "cv", "skewness", "kurtosis")
) %>%
kable(caption="Descriptores estadísticos de cada variable") %>%
kable_paper("hover")
new_data <- data.frame(Año=year(IGP_datos$Fecha),
Mes=month(IGP_datos$Fecha),
Hora=hour(IGP_datos$Hora),
Dia=day(IGP_datos$Fecha))
description <- data.frame(dlookr::describe(new_data))[c(-6, -11, -12, -13, -14, -16, -17, -19, -20, -22, -23, -24, -25)]
description$CV <- (description$sd)/description$mean
description %>% kable(caption="Descriptores estadísticos de Año, Mes, Hora y Día") %>% kable_paper("hover")
Muestreo = sample(1:22410,100,replace=F)
Muestreo
Muestra1 = IGP_datos[Muestreo,]
Muestra1
GR= ggplot(IGP_datos, aes(IGP_datos$Longitud, IGP_datos$Magnitud))+xlab("Longitud")+ylab("Magnitud")
GR + geom_point() +  geom_smooth(method = "lm", colour="Red")
g_mag_lat_x <- ggplot(IGP_datos,aes(x=Latitud, y=Magnitud)) + geom_point(alpha=0.04) + ggtitle("Gráfica de Magnitud vs Latitud") + ylab("Magnitud (M)") + xlab("Latitud (°)") + theme_pubclean()
g_mag_long_x <- ggplot(IGP_datos,aes(x=Longitud, y=Magnitud)) + geom_point(alpha=0.04) + ggtitle("Gráfica de Magnitud vs Longitud") + ylab("Magnitud (M)") + xlab("Longitud (°)") + theme_pubclean()
grid.arrange(g_mag_lat_x, g_mag_long_x, ncol=2)
formula = y ~ x
GR<- ggplot(IGP_datos, aes(IGP_datos$Longitud, IGP_datos$Profundidad))+xlab("Longitud")+ylab("Profundidad")+ geom_point() +  geom_smooth(method = "lm", colour="Red")
GR +
stat_cor(method="pearson", label.x=-80, label.y=600) +
stat_poly_eq(aes(label = ..eq.label..), label.x=0.23, label.y=0.7, formula = formula, parse = TRUE)
GR<- ggplot(IGP_datos, aes(IGP_datos$Longitud, IGP_datos$Magnitud))+xlab("Longitud")+ylab("Magmitud")+ geom_point() +  geom_smooth(method = "lm", colour="Red")
GR +
stat_cor(method="pearson", label.x=-85, label.y=8) +
stat_poly_eq(aes(label = ..eq.label..), label.x=0.05, label.y=0.8, formula = formula, parse = TRUE)
{r}
#se filtran solo datos de sismos a partir y después del 2018
aux_df_anos <- IGP_datos %>% group_by(year(IGP_datos$Fecha))
mas <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`>=2018)
menos <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`<2018)
#varianza de magnitud
vmas<- var(mas$Magnitud)
vmenos<-var(menos$Magnitud)
#tamaño de muestra
n<-nrow(mas)
#valor crítico
val<-((n-1)*vmas)/vmenos
val
#estadístico
q<-qchisq(1-0.05,n-1)
q
#se filtran solo datos de sismos de magnitud media y baja
mag <- IGP_datos %>% filter(IGP_datos$Magnitud<=4)
#media de profundidad
mmag<-mean(mag$Profundidad)
#tamaño de muestra
n2<-nrow(mas)
#desviación estandar de profundidad
smag<-sd(mag$Profundidad)
#valor crítico
val2<-(mmag-50)/(smag/sqrt(n2))
val2
#estadístico
q2<-qt(0.05,n2-1)
q2
#se filtran solo datos de sismos de zona este y oeste
este <- IGP_datos %>% filter(IGP_datos$Longitud>=-77)
oeste <- IGP_datos %>% filter(IGP_datos$Longitud < (-77))
#varianza de magnitud
veste<-var(este$Magnitud)
voeste<-var(oeste$Magnitud)
#tamaño de muestra
n3<-nrow(este)
#desviación estandar de magnitud
seste<-sd(este$Magnitud)
#valor crítico
val3<-((n3-1)*veste)/voeste
val3
#unilateral
q3<-qt(1-0.1,n3-1)
q3
#se filtran solo datos de sismos de zona este y oeste
este <- IGP_datos %>% filter(IGP_datos$Longitud>=-77)
oeste <- IGP_datos %>% filter(IGP_datos$Longitud < (-77))
#varianza de magnitud
veste<-var(este$Magnitud)
voeste<-var(oeste$Magnitud)
#tamaño de muestra
n3<-nrow(este)
#desviación estandar de magnitud
seste<-sd(este$Magnitud)
#valor crítico
val3<-((n3-1)*veste)/voeste
val3
#unilateral
q3<-qt(1-0.1,n3-1)
q3
#se filtran solo datos de sismos de magnitud media y baja
mag <- IGP_datos %>% filter(IGP_datos$Magnitud<=4)
#media de profundidad
mmag<-mean(mag$Profundidad)
#tamaño de muestra
n2<-nrow(mas)
#desviación estandar de profundidad
smag<-sd(mag$Profundidad)
#valor crítico
val2<-(mmag-50)/(smag/sqrt(n2))
val2
#estadístico
q2<-qt(0.05,n2-1)
q2
#se filtran solo datos de sismos a partir y después del 2018
aux_df_anos <- IGP_datos %>% group_by(year(IGP_datos$Fecha))
mas <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`>=2018)
menos <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`<2018)
#varianza de magnitud
vmas<- var(mas$Magnitud)
vmenos<-var(menos$Magnitud)
#tamaño de muestra
n<-nrow(mas)
#valor crítico
val<-((n-1)*vmas)/vmenos
val
#estadístico
q<-qchisq(1-0.05,n-1)
q
#se filtran solo datos de sismos de zona este y oeste
este <- IGP_datos %>% filter(IGP_datos$Longitud>=-77)
oeste <- IGP_datos %>% filter(IGP_datos$Longitud < (-77))
#varianza de magnitud
veste<-var(este$Magnitud)
voeste<-var(oeste$Magnitud)
#tamaño de muestra
n3<-nrow(este)
#desviación estandar de magnitud
seste<-sd(este$Magnitud)
#valor crítico
val3<-((n3-1)*veste)/voeste
val3
#unilateral
q3<-qt(1-0.1,n3-1)
q3
#se filtran solo datos de sismos a partir y después del 2018
aux_df_anos <- IGP_datos %>% group_by(year(IGP_datos$Fecha))
mas <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`>=2018)
menos <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`<2018)
#varianza de magnitud
vmas<- var(mas$Magnitud)
vmenos<-var(menos$Magnitud)
#tamaño de muestra
n<-nrow(mas)
#valor crítico
val<-((n-1)*vmas)/vmenos
val
#estadístico
q<-qchisq(1-0.05,n-1)
q
#se filtran solo datos de sismos de magnitud media y baja
mag <- IGP_datos %>% filter(IGP_datos$Magnitud<=4)
#media de profundidad
mmag<-mean(mag$Profundidad)
#tamaño de muestra
n2<-nrow(mas)
#desviación estandar de profundidad
smag<-sd(mag$Profundidad)
#valor crítico
val2<-(mmag-50)/(smag/sqrt(n2))
val2
#estadístico
q2<-qt(0.05,n2-1)
q2
#se filtran solo datos de sismos de magnitud media y baja
mag <- IGP_datos %>% filter(IGP_datos$Magnitud<=4)
#media de profundidad
mmag<-mean(mag$Profundidad)
#tamaño de muestra
n2<-nrow(mas)
#desviación estandar de profundidad
smag<-sd(mag$Profundidad)
#valor crítico
val2<-(mmag-50)/(smag/sqrt(n2))
val2
#estadístico
q2<-qt(0.05,n2-1)
q2
#se filtran solo datos de sismos de zona este y oeste
este <- IGP_datos %>% filter(IGP_datos$Longitud>=-77)
oeste <- IGP_datos %>% filter(IGP_datos$Longitud < (-77))
#varianza de magnitud
veste<-var(este$Magnitud)
voeste<-var(oeste$Magnitud)
#tamaño de muestra
n3<-nrow(este)
#desviación estandar de magnitud
seste<-sd(este$Magnitud)
#valor crítico
val3<-((n3-1)*veste)/voeste
val3
#unilateral
q3<-qt(1-0.1,n3-1)
q3
#se filtran solo datos de sismos a partir y después del 2018
aux_df_anos <- IGP_datos %>% group_by(year(IGP_datos$Fecha))
mas <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`>=2018)
menos <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`<2018)
#varianza de magnitud
vmas<- var(mas$Magnitud)
vmenos<-var(menos$Magnitud)
#tamaño de muestra
n<-nrow(mas)
#valor crítico
val<-((n-1)*vmas)/vmenos
val
#estadístico
q<-qchisq(1-0.05,n-1)
q
aux_df_anos <- IGP_datos %>% group_by(year(IGP_datos$Fecha)) %>% summarise(counts = n())
colnames(aux_df_anos) <- c("Año", "Frecuencia")
g_anos_points <- ggplot(aux_df_anos, aes(x=Año, y=Frecuencia)) +
geom_point() +
geom_smooth(method="lm", colour="#6c78bc") +
scale_x_continuous(breaks=seq(1960, 2021, 10)) +
ggtitle("Gráfico de dispersión de sismos desde 1960") +
theme_pubclean()
formula = y ~ x
g_anos_points +
stat_cor(method="pearson", label.x=1963.5, label.y=765) +
stat_poly_eq(aes(label = ..eq.label..), label.x=0.1, label.y=0.7, formula = formula, parse = TRUE)
qmplot(lon, lat, data=new_prueba, colour = Magnitud, darken = .6, zoom=7,
margins=T, main=" ", extent = "panel")
aux_3 <- IGP_datos  %>% filter(Rango_Profundidad=="Superficial" & Magnitud > 4.5 & Magnitud <= 5)
library(readxl)
library(tidyverse)
library(magrittr)
library(units)
library(kableExtra)
library(PASWR2)
library(lubridate)
library(anytime)
library(summarytools)
library(dlookr)
library(ggmap)
library(ggplot2)
library(ggpubr)
library(Hmisc)
library(psych)
library(fields)
library(janitor)
library(ggpmisc)
library(gridExtra)
# Cambia a un formato correcto las fechas (DD/MM/AA -> AA/MM/DD) para usar
# el paquete anytime y emplear fechas anteriores a 1970
format_dates <- function(x) {
for(i in 1:length(x)) {
x[i] <- paste(substr(x[i],7,10),substr(x[i], 4, 5),
substr(x[i], 1, 2), sep="/")
}
return(x)
}
# Los datos se guardan como un "tibble" en IGP_datos
IGP_datos <- read_excel(
"IGP_datos_sismicos.xlsx",
col_names = c("Fecha", "Hora", "Latitud", "Longitud",
"Profundidad", "Magnitud")
)
# Se omite la primera fila
IGP_datos <- IGP_datos[-c(1),]
# Corrección de tipo de variable
IGP_datos$Magnitud %<>% as.double
IGP_datos$Latitud %<>% as.double
IGP_datos$Longitud %<>% as.double
IGP_datos$Profundidad %<>% as.integer
IGP_datos$Fecha %<>% format_dates %<>% anytime
IGP_datos$Hora %<>% hms
#Adición de columna de nivel de profundidad
#(h<60 km), intermedios (61<h<350 km) y profundos (h>351 km).
IGP_datos$Rango_Profundidad <- with(IGP_datos,
factor(
ifelse(Profundidad <= 60, "Superficial",
ifelse(Profundidad <= 350 & Profundidad >= 61, "Intermedio", "Profundo")), levels=c("Superficial", "Intermedio", "Profundo")))
qmplot(lon, lat, data=new_prueba, colour = Magnitud, darken = .6, zoom=7,
margins=T, main=" ", extent = "panel")
GR<- ggplot(IGP_datos, aes(IGP_datos$Magnitud, IGP_datos$Profundidad))+xlab("Magnitud")+ylab("Profundidad")+ geom_point() +  geom_smooth(method = "lm", colour="Red")
GR +
stat_cor(method="pearson", label.x=2.5, label.y=600) +
stat_poly_eq(aes(label = ..eq.label..), label.x=0.05, label.y=0.7, formula = formula, parse = TRUE)
#se filtran solo datos de sismos a partir y después del 2018
aux_df_anos <- IGP_datos %>% group_by(year(IGP_datos$Fecha))
mas <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`>=2018)
menos <- aux_df_anos %>% filter(`year(IGP_datos$Fecha)`<2018)
#varianza de magnitud
vmas<- var(mas$Magnitud)
vmenos<-var(menos$Magnitud)
#tamaño de muestra
n<-nrow(mas)
#valor crítico
val<-((n-1)*vmas)/vmenos
val
#estadístico
q<-qchisq(1-0.05,n-1)
q
proporcion_superficial <- 0.603792950
proporcion_intermedia <- 0.390182954
proporcion_profunda <- 0.006024096
error_superficial <- qnorm(0.995)*sqrt((proporcion_superficial)*(1-proporcion_superficial)/22410)
error_intermedia <- qnorm(0.995)*sqrt((proporcion_intermedia)*(1-proporcion_intermedia)/22410)
error_profunda <- qnorm(0.995)*sqrt((proporcion_profunda)*(1-proporcion_profunda)/22410)
#PARA SUPERFICIAL
limite_inferior_superficial <- proporcion_superficial - error_superficial
limite_superior_superficial <- proporcion_superficial + error_superficial
#PARA INTERMEDIA
limite_inferior_intermedia <- proporcion_intermedia - error_intermedia
limite_superior_intermedia <- proporcion_intermedia + error_intermedia
#PARA PROFUNDA
limite_inferior_profunda <- proporcion_profunda - error_profunda
limite_superior_profunda <- proporcion_profunda + error_profunda
#PARA LA MEDIA POBLACIONAL
media_profundidad <- 71.2911647
z_magnitud <- qnorm(0.995)
desviacion_profundidad <- 66.3790048
lim_inferior_profundidad <- media_profundidad - z_magnitud*(desviacion_profundidad/sqrt(22410))
lim_superior_profundidad <- media_profundidad + z_magnitud*(desviacion_profundidad/sqrt(22410))
#PARA LA DESVIACION ESTANDAR POBLACIONAL
t_desviacion_profundidad1 <- qchisq(0.995,22409)
t_desviacion_profundidad2 <- qchisq(0.005,22409)
lim_inferior_desviacion_profundidad <- sqrt(22409*(desviacion_profundidad^2)/t_desviacion_profundidad1)
lim_superior_desviacion_profundidad <- sqrt(22409*(desviacion_profundidad^2)/t_desviacion_profundidad2)
aux_3 <- IGP_datos  %>% filter(Rango_Profundidad=="Superficial" & Magnitud > 4.5 & Magnitud <= 5)
lat_mean <- aux_3 %>% select(Latitud)
long_mean <- aux_3 %>% select(Longitud)
long_mean <- mean(long_mean$Longitud)
lat_mean <- mean(lat_mean$Latitud)
si <- data.frame(Longitud=long_mean, Latitud=lat_mean)
sbbox <- make_bbox(lon=c(-66, -86), lat= c(0, -26), f=.1)
peru <- get_map(location=sbbox, zoom=7, maptype = "terrain")
peru_map=ggmap(peru)
peru_map + geom_point(data=si, mapping=aes(Longitud, Latitud), colour="red", shape=7, size=3)
prueba <- factor(IGP_datos$Magnitud)
new_prueba <- data.frame(Longitud=IGP_datos$Longitud, Latitud=IGP_datos$Latitud, Magnitud=prueba)
mapa <- qmplot(Longitud, Latitud, data=new_prueba, colour = Magnitud, zoom=7,
margins=T,
main=" ",
extent = "panel")
mapa
prueba1 <- filter(IGP_datos, IGP_datos$Magnitud >= 6)
prueba <- factor(prueba1$Magnitud)
new_prueba <- data.frame(lon=prueba1$Longitud, lat=prueba1$Latitud, Magnitud=prueba)
qmplot(lon, lat, data=new_prueba, colour = Magnitud, darken = .6, zoom=7,
margins=T, main=" ", extent = "panel")
