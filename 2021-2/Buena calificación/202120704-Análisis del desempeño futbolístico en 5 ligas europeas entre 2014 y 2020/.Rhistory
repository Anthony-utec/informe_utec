library(readr)
library(tidyverse)
appearances <- read_csv("Data/appearances.csv")
games <- read_csv("Data/games.csv")
leagues <- read_csv("Data/leagues.csv")
shots <- read_csv("Data/shots.csv")
teams <- read_csv("Data/teams.csv")
teamstats <- read_csv("Data/teamstats.csv")
players <-read.csv("Data/players.csv")
n_observaciones <- nrow(appearances) + nrow(games) + nrow (shots) + nrow(teamstats)
n_variables <- ncol(appearances) + ncol(games) + ncol(shots) + ncol(teamstats)
colorArea <- function(from, to, density, ..., col="blue", dens=NULL){
y_seq <- seq(from, to, length.out=500)
d <- c(0, density(y_seq, ...), 0)
polygon(c(from, y_seq, to), d, col=col, density=dens)
}
apariciones_jugadores <- players %>% right_join(appearances,by="playerID") %>% left_join(leagues,by="leagueID") %>% left_join(games %>% select(gameID,season),by="gameID")
apariciones_jugadores %>% rename(ID = playerID, player = name.x, league = name.y, league_notation = understatNotation) ->
n_apariciones
remove(apariciones_jugadores)
apariciones_jugadores <- distinct(n_apariciones)
rm(n_apariciones)
estadisticas_equipos <- teams %>% right_join(teamstats,by= "teamID") %>% right_join (apariciones_jugadores %>% select(league,gameID),by="gameID") %>% rename(team=name) %>% distinct
shots <- shots %>% rename(playerID = shooterID)
disparos <- players %>% inner_join(shots,by="playerID") %>% inner_join(games %>% select(gameID,season),by="gameID") %>% inner_join (apariciones_jugadores %>% select(league,gameID),by="gameID") %>% distinct
disparos <- disparos %>% rename(player=name)
estadisticas_equipos <- estadisticas_equipos %>%select(gameID,team,season,location,goals,shots,shotsOnTarget,fouls,yellowCards,redCards,result,league)
apariciones_jugadores <- apariciones_jugadores %>% select(gameID,player,goals,ownGoals,shots,assists,keyPasses,position,redCard,time,league,season)
disparos <- disparos %>% select(player,gameID,minute,situation,shotType,shotResult,season,league)
rm(appearances,games,shots,teamstats)
n_observaciones <- nrow(disparos) + nrow(apariciones_jugadores) + nrow(estadisticas_equipos)
estadisticas_equipos%>%group_by(team) %>% summarise (total_goals= sum(goals),total_shots = sum(shots),total_shots_OT = sum(shotsOnTarget)) %>% arrange(desc(total_goals))
estadisticas_equipos%>%group_by(league) %>% summarise (total_goals= sum(goals),total_shots_OT = sum(shotsOnTarget),
total_fouls = sum(fouls), total_red_cards = sum(redCards)) %>% arrange(desc(total_goals))
moda <- function(x) {
return(as.numeric(names(which.max(table(x)))))
}
disparos %>% filter(shotResult == "Goal") %>% group_by(season,league) %>% summarise(avg_minute_goal = mean(minute), med_minute = median(minute) , mode_minute = moda(minute), min_minute=(min(minute)),max_min = max(minute),sd_minute = sd(minute))
apariciones_jugadores %>% group_by(player) %>% summarise(goal_avg = mean(goals), goals_median = median (goals), goals_sd = sd(goals), max_goals = max(goals)) %>% arrange(desc(goal_avg)) %>% filter(goal_avg != 1) -> n_goals
n_goals
apariciones_jugadores %>% group_by(player) %>% summarise(assists_avg = mean(assists), assists_median = median (assists), assists_cv = sd(assists)/mean(assists), max_assists = max(assists), total_assists = sum(assists)) %>% arrange(desc(assists_avg)) %>% filter (total_assists>1)-> n_assists
n_assists
estadisticas_equipos %>% filter(result == "W" & location == "h") %>% group_by(team) %>% summarise(league = league, t_wins_h_avg = (table(result))/7 ) %>% arrange(desc(t_wins_h_avg)) %>% distinct
estadisticas_equipos %>% filter(result == "W" & location == "a") %>% group_by(team) %>% summarise(league = league, t_wins_a_avg = (table(result)/7) ) %>% arrange(desc(t_wins_a_avg)) %>% distinct
apariciones_jugadores %>% group_by(player) %>% summarise(shots_avg = mean(shots), shots_median = median (shots), shots_sd = sd(shots), max_shots = max(shots), total_shots = sum(shots)) %>% arrange(desc(shots_avg))-> disparos_numerico
disparos_numerico
disparos %>% group_by(player) %>% summarise(avg_minute_shot = mean(minute), med_minute = median(minute), mode_minute = moda(minute),min_minute = min(minute), max_minute = max(minute), cv_minute=sd(minute)/mean(minute), total_shots = n()) %>% arrange(desc(total_shots)) ->minutos_numerico
minutos_numerico
fouls_df <- estadisticas_equipos %>% group_by(team) %>% summarise(fouls_avg = mean (fouls), fouls_median = median(fouls), fouls_cv = sd(fouls)/mean(fouls), max_fouls = max(fouls), min_fouls = min(fouls), total_fouls = sum(fouls)) %>% arrange(desc(fouls_avg))
fouls_df
yellow_df <- estadisticas_equipos %>% group_by(team) %>% summarise(ycards_avg = mean (yellowCards), ycards_median = median(yellowCards), ycards_cv = sd(yellowCards)/mean(yellowCards), max_ycards = max(yellowCards), total_ycards = sum(yellowCards)) %>% arrange(desc(ycards_avg))
yellow_df
pases_1=apariciones_jugadores%>%
group_by(player)%>%
summarise(total_pases = sum(keyPasses), promedio_pases = (mean(keyPasses)), minimo_pases = min(keyPasses), maximo_pases = max(keyPasses)) %>% arrange(desc(total_pases))-> pases_clave
pases_clave
library(ggplot2)
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Bundesliga") -> alemania
ggplot(alemania,aes(x=season,y=goles_totales)) + geom_bar(color="red",stat = "identity",fill = "red") + ggtitle("Bundesliga ")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Premier League") -> inglaterra
ggplot(inglaterra,aes(x=season,y=goles_totales)) + geom_bar(color="blue",stat = "identity",fill = "blue") + ggtitle("Premier League")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Ligue 1") -> fran
ggplot(fran,aes(x=season,y=goles_totales)) + geom_bar(color="skyblue",stat = "identity",fill = "skyblue") + ggtitle("Ligue 1 ")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Serie A") -> ita
ggplot(ita,aes(x=season,y=goles_totales)) + geom_bar(color="green",stat = "identity",fill = "green") + ggtitle("Serie A")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "La Liga") -> españa
ggplot(españa,aes(x=season,y=goles_totales)) + geom_bar(color="yellow",stat = "identity",fill = "yellow") + ggtitle("La Liga ")  +
theme(plot.title = element_text(hjust = 0.5))
tabla_suma_goles<-estadisticas_equipos%>%
group_by(league,season)%>%
summarise(goles = sum(goals))
ggplot(tabla_suma_goles,aes(x=season,y=goles,fill=league,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge") + ggtitle("Goles por temporada en cada liga")  +
theme(plot.title = element_text(hjust = 0.5))
disparos %>% filter(player == "Lionel Messi" & season == 2020)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2020")
disparos %>% filter(player == "Lionel Messi" & season == 2018)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2018")
disparos %>% filter(player == "Lionel Messi" & season == 2016)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2016")
disparos %>% filter(player == "Lionel Messi" & season == 2014)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2014")
box_plot_equipos<-estadisticas_equipos%>%
group_by(season,team)%>%
summarise(goals_per_year =sum(goals))
box_plot_2014<-box_plot_equipos %>% filter (season == 2014)
box_plot_2015<-box_plot_equipos%>% filter (season == 2015)
box_plot_2016<-box_plot_equipos%>% filter (season == 2016)
box_plot_2017<-box_plot_equipos%>% filter (season == 2017)
box_plot_2018<-box_plot_equipos%>% filter (season == 2018)
box_plot_2019<-box_plot_equipos%>% filter (season == 2019)
box_plot_2020<-box_plot_equipos%>% filter (season == 2020)
#qplot(x=box_plot_2014$goals_per_year,geom="boxplot" ,xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2014")
ggplot(box_plot_2014, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2014")
#qplot(x=box_plot_2015$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2015")
ggplot(box_plot_2015, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2015")
#qplot(x=box_plot_2016$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2016" )
ggplot(box_plot_2016, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2016")
#qplot(x=box_plot_2017$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2017")
ggplot(box_plot_2017, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2017")
#qplot(x=box_plot_2018$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2018" )
ggplot(box_plot_2018, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2018")
#qplot(x=box_plot_2019$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2019")
ggplot(box_plot_2019, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2019")
#qplot(x=box_plot_2020$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2020" )
ggplot(box_plot_2020, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2020")
pie_bundesliga<-estadisticas_equipos%>%
filter(league=="Bundesliga")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_bundesliga,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position="dodge")+coord_flip()+ggtitle("Bundesliga")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_serieA<-estadisticas_equipos%>%
filter(league=="Serie A")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_serieA,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("Serie A")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_Premier<-estadisticas_equipos%>%
filter(league=="Premier League")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_Premier,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("Premier League")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_la_liga<-estadisticas_equipos%>%
filter(league=="La Liga")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_la_liga,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("La liga")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_ligue1<-estadisticas_equipos%>%
filter(league=="Ligue 1")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem,))
ggplot(pie_ligue1,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("Ligue 1")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
boxplot(disparos_numerico$shots_avg, col = "green",horizontal = TRUE, main = "Disparos por partido", xlab= "Promedio de disparos")
abline(v=mean(disparos_numerico$shots_avg ), col = "red",lwd=3, lty=2)
legend("topright", c("Media de los promedios de disparo"), col = "red", lwd=3 , lty=2 )
boxplot(fouls_df$total_fouls,horizontal = TRUE, col = "red", main = "Faltas por equipo en las 7 temporadas", xlab= "Faltas totales")
abline(v=mean(fouls_df$total_fouls), col = "blue", lwd = 3, lty = 2)
legend("topright",c("Media de las faltas"),col = "blue", lwd = 3,lty =2)
boxplot(yellow_df$total_ycards,horizontal = TRUE, col = "yellow", main = "Tarjetas amarillas por equipo en las 7 temporadas", xlab= "Total de tarjetas amarillas")
abline(v=mean(yellow_df$total_ycards,na.rm = TRUE), col = "green", lwd = 3, lty = 2)
legend("topright",c("Media del total de tarjetas amarillas"),col = "green", lwd = 3,lty =2)
boxplot(n_goals$goal_avg, col = "orange",horizontal = TRUE, main = "Goles promedio de jugadores", xlab= "Promedio de goles")
abline(v=mean(n_goals$goal_avg), col = "blue",lwd=3, lty=2)
legend("bottomright", c("Media de los promedios de goles"), col = "blue", lwd=3 , lty=2 )
boxplot(n_assists$assists_avg, col = "yellow",horizontal = TRUE, main = "Asistencias promedio de jugadores", xlab= "Promedio de asistencias")
abline(v=mean(n_assists$assists_avg), col = "blue",lwd=3, lty=2)
legend("bottomright", c("Media de los promedios de asistencias"), col = "blue", lwd=3 , lty=2 )
#1
pases_3=apariciones_jugadores%>%
group_by(position)%>%
summarise(total_pases = sum(keyPasses), promedio_pases = (mean(keyPasses)), minimo_pases = min(keyPasses), maximo_pases = max(keyPasses)) %>% arrange(desc(total_pases))-> pases_posicion
ggplot(pases_posicion,aes(x =reorder(position,total_pases),y=total_pases, main = "Cantidad de pases clave por posición de cada jugador")) + geom_col(position = "dodge") +coord_flip() + ggtitle("Cantidad de pases clave por posición de cada jugador") + (theme(plot.title = element_text(hjust = 0.5))) +  labs(y = "Pases claves totales",x = "Posiciones")
hist(disparos$minute, main = "Minutos en los que se realizan disparos", col = "lightblue",xlab = "Minuto del partido")
abline(v=mean(disparos$minute), col = "red")
abline(v=which.max(table(disparos$minute)), col = "blue")
abline(v=median(disparos$minute), col = "yellow")
legend("topright", c("Media","Moda","Mediana"), col = c("red","blue","yellow"), cex=0.8, pt.cex =0.8, lwd=1, lty=1 )
aux_faltas <- estadisticas_equipos %>% filter(league == "Serie A")
ggplot(aux_faltas,aes(fouls)) +
geom_histogram(color="gray", aes(y=..density..),bins=17) +
geom_density(color="red", fill="red", aes(y=..density..), alpha=0.4) +
ylab("Density") +
xlab("Fouls") +
ggtitle("Gráfico de densidad de Faltas por partido por equipo en la Serie A")
estadisticas_equipos %>% filter(league == "Bundesliga" & result == "W") %>% group_by(team) %>% summarise(V = n()) -> aux_v
ggplot(aux_v, aes(V)) +
geom_histogram(aes(y=..density..), colour="gray", bins=7) +
geom_density(aes(y=..density..), colour="green", fill="lightgreen", alpha=0.4) +
ylab("Density") +
xlab("Victorias por equipos de la Bundesliga") +
ggtitle("Gráfico de densidad de victorias por equipos de la Bundesliga")
# CONFIANZA DEL 90%
alpha = 0.1
disparos_sam <- sample(disparos$minute,1000)
# Intervalo de confianza de media
mean(disparos_sam)-qt(1-0.1/2,999)*sd(disparos_sam)/sqrt(1000)
mean(disparos_sam)+qt(1-0.1/2, 999)*sd(disparos_sam)/sqrt(1000)
# Intervalo de confianza de varianza
(999*sd(disparos_sam)^2)/qchisq(1-0.1/2,999)
(999*sd(disparos_sam)^2)/qchisq(0.15/2,999)
# Intervalo de confianza de desviación estándar
sqrt((999*sd(disparos_sam)^2)/qchisq(1-0.1/2,999))
sqrt((999*sd(disparos_sam)^2)/qchisq(0.1/2,999))
t.test(disparos_sam, alternative = "greater", mu=45, conf.level = .9)
tc_disparo <- (mean(disparos_sam)- 45)/(sd(disparos_sam)/sqrt(1000))
to_disparo <- qt(0.9,999)
curve(dnorm(x), from=-8,to=8, xlim=c(-8,8), col="blue", lwd=4, main="Distribución de disparos f(x) Normal Estándar", ylab="f(x)")
legend("topright",legend=c("Z alfa","Z crítico supuesto", "Región de rechazo"), cex = 0.8, fill = c("red","green","lightblue"))
colorArea(from=to_disparo, to=500, dnorm, col="lightblue")
abline(v=to_disparo, col="red", lwd=3)
abline(v=tc_disparo, col="green", lwd=2)
# Intervalo de confianza de parámetros de media de victorias por equipos
# de la Bundesliga
# Nivel de confianza de 85%, debido a que los datos no se encuentran
# muy dispersos
# alpha = 0.15
# Intervalo de confianza de media
mean(aux_v$V)-qt(1-0.15/2,24)*sd(aux_v$V)/sqrt(25)
mean(aux_v$V)+qt(1-0.15/2, 24)*sd(aux_v$V)/sqrt(25)
# Intervalo de confianza de varianza
(24*sd(aux_v$V)^2)/qchisq(1-0.15/2,24)
(24*sd(aux_v$V)^2)/qchisq(0.15/2,24)
# Intervalo de confianza de desviación estándar
sqrt((24*sd(aux_v$V)^2)/qchisq(1-0.15/2,24))
sqrt((24*sd(aux_v$V)^2)/qchisq(0.15/2,24))
t.test(aux_v$V, alternative = "greater", mu=66.4, conf.level = .85)
tc_v <- (mean(aux_v$V)- 66.4)/(sd(aux_v$V)/sqrt(length(aux_v$V)))
to_v <- qt(0.9,length(aux_v$V)-1)
curve(dnorm(x), from=-8, to=8, xlim=c(-8,8), col="red", lwd=4, main="Distribución de victorias por equipo en la Bundesliga f(x) Normal Estándar", ylab="f(x)")
legend("topright",legend=c("Z alfa","Z crítico supuesto", "Región de rechazo"), cex = 0.8, fill = c("green","blue","yellow"))
colorArea(from=to_v, to=100, dnorm, col="yellow")
abline(v=to_v, col="green", lwd=3)
abline(v=tc_v, col="blue", lwd=2)
# Intervalo de confianza de parámetros de media de faltas por partido por equipo de la serie A
# Nivel de confianza de 90%, debido a que los datos no se encuentran
# muy dispersos
# alpha = 0.1
# Intervalo de confianza de media
mean(aux_faltas$fouls)-qt(1-0.1/2,5319)*sd(aux_faltas$fouls)/sqrt(5320)
mean(aux_faltas$fouls)+qt(1-0.1/2,5319)*sd(aux_faltas$fouls)/sqrt(5320)
# Intervalo de confianza de varianza
(5319*sd(aux_faltas$fouls)^2)/qchisq(1-0.1/2,5319)
(5319*sd(aux_faltas$fouls)^2)/qchisq(0.1/2,5319)
# Intervalo de confianza de desviación estándar
sqrt((5319*sd(aux_faltas$fouls)^2)/qchisq(1-0.1/2,5319))
sqrt((5319*sd(aux_faltas$fouls)^2)/qchisq(0.1/2,5319))
t.test(aux_faltas$fouls, alternative = "greater", mu=14, conf.level = .9)
tc_fouls <- (mean(aux_faltas$fouls)- 14)/(sd(aux_faltas$fouls)/sqrt(length(aux_faltas$fouls)))
to_fouls <- qt(0.9,length(aux_faltas$fouls)-1)
curve(dnorm(x), from=-8, to=8, xlim=c(-8,8), col="yellow", lwd=4, main="Distribución de faltas por partido por equipo  f(x) Normal Estándar", ylab="f(x)")
legend("topright",legend=c("Z alfa","Z crítico supuesto", "Región de rechazo"), cex = 0.8, fill = c("red","blue","green"))
colorArea(from=to_fouls, to=100, dnorm, col="green")
abline(v=to_fouls, col="red", lwd=3)
abline(v=tc_fouls, col="blue", lwd=2)
pases_2=apariciones_jugadores%>%
group_by(player)%>%
summarise(total_goles = sum(goals), total_pases = sum(keyPasses), promedio_pases = round(mean(keyPasses),0), minimo_pases = min(keyPasses), maximo_pases = max(keyPasses)) %>% arrange(desc(total_pases))-> pases_tabla
cor(x=pases_tabla$total_pases, y=pases_tabla$total_goles) -> cor1
ggplot(pases_tabla,aes(total_pases,total_goles))+geom_point()+labs(y="Goles anotados",x="Pases clave")+geom_smooth(method = "lm",color="red") + ggtitle ("Pases claves vs Goles anotados") + (theme(plot.title = element_text(hjust = 0.5)))
lm(pases_tabla$total_goles~pases_tabla$total_pases) -> patrones1
coefficients(patrones1)
total<-estadisticas_equipos%>%
group_by(team)%>%
summarise(total_faltas=sum(fouls),total_amarillas=sum(yellowCards))
ggplot(total,aes(total_faltas,total_amarillas))+geom_point()+labs(x="total faltas",y="total amarillas")+geom_smooth(method = "lm",color="red") + ggtitle ("Total faltas vs Total amarillas") + (theme(plot.title = element_text(hjust = 0.5)))
lm(total$total_amarillas~total$total_faltas) -> patrones2
coefficients(patrones2)
cor(total$total_amarillas,total$total_faltas, use = "complete.obs") -> cor2
apariciones_jugadores %>% group_by(player) %>% summarise(goles = sum(goals), asistencias = sum(assists)) %>% arrange(desc(goles)) -> patrones3
ggplot(patrones3,aes(goles,asistencias))+geom_point()+labs(x="goles",y="asistencias")+geom_smooth(method = "lm",color="red") + ggtitle ("Goles vs Asistencias") + (theme(plot.title = element_text(hjust = 0.5)))
cor(x= patrones3$goles, y=patrones3$asistencias)->cor3
lm(patrones3$asistencias~patrones3$goles) -> patrones4
coefficients(patrones4)
library(readr)
library(tidyverse)
appearances <- read_csv("Data/appearances.csv")
games <- read_csv("Data/games.csv")
leagues <- read_csv("Data/leagues.csv")
shots <- read_csv("Data/shots.csv")
teams <- read_csv("Data/teams.csv")
teamstats <- read_csv("Data/teamstats.csv")
players <-read.csv("Data/players.csv")
n_observaciones <- nrow(appearances) + nrow(games) + nrow (shots) + nrow(teamstats)
n_variables <- ncol(appearances) + ncol(games) + ncol(shots) + ncol(teamstats)
colorArea <- function(from, to, density, ..., col="blue", dens=NULL){
y_seq <- seq(from, to, length.out=500)
d <- c(0, density(y_seq, ...), 0)
polygon(c(from, y_seq, to), d, col=col, density=dens)
}
apariciones_jugadores <- players %>% right_join(appearances,by="playerID") %>% left_join(leagues,by="leagueID") %>% left_join(games %>% select(gameID,season),by="gameID")
apariciones_jugadores %>% rename(ID = playerID, player = name.x, league = name.y, league_notation = understatNotation) ->
n_apariciones
remove(apariciones_jugadores)
apariciones_jugadores <- distinct(n_apariciones)
rm(n_apariciones)
estadisticas_equipos <- teams %>% right_join(teamstats,by= "teamID") %>% right_join (apariciones_jugadores %>% select(league,gameID),by="gameID") %>% rename(team=name) %>% distinct
shots <- shots %>% rename(playerID = shooterID)
disparos <- players %>% inner_join(shots,by="playerID") %>% inner_join(games %>% select(gameID,season),by="gameID") %>% inner_join (apariciones_jugadores %>% select(league,gameID),by="gameID") %>% distinct
disparos <- disparos %>% rename(player=name)
estadisticas_equipos <- estadisticas_equipos %>%select(gameID,team,season,location,goals,shots,shotsOnTarget,fouls,yellowCards,redCards,result,league)
apariciones_jugadores <- apariciones_jugadores %>% select(gameID,player,goals,ownGoals,shots,assists,keyPasses,position,redCard,time,league,season)
disparos <- disparos %>% select(player,gameID,minute,situation,shotType,shotResult,season,league)
rm(appearances,games,shots,teamstats)
n_observaciones <- nrow(disparos) + nrow(apariciones_jugadores) + nrow(estadisticas_equipos)
estadisticas_equipos%>%group_by(team) %>% summarise (total_goals= sum(goals),total_shots = sum(shots),total_shots_OT = sum(shotsOnTarget)) %>% arrange(desc(total_goals))
estadisticas_equipos%>%group_by(league) %>% summarise (total_goals= sum(goals),total_shots_OT = sum(shotsOnTarget),
total_fouls = sum(fouls), total_red_cards = sum(redCards)) %>% arrange(desc(total_goals))
moda <- function(x) {
return(as.numeric(names(which.max(table(x)))))
}
disparos %>% filter(shotResult == "Goal") %>% group_by(season,league) %>% summarise(avg_minute_goal = mean(minute), med_minute = median(minute) , mode_minute = moda(minute), min_minute=(min(minute)),max_min = max(minute),sd_minute = sd(minute))
apariciones_jugadores %>% group_by(player) %>% summarise(goal_avg = mean(goals), goals_median = median (goals), goals_sd = sd(goals), max_goals = max(goals)) %>% arrange(desc(goal_avg)) %>% filter(goal_avg != 1) -> n_goals
n_goals
apariciones_jugadores %>% group_by(player) %>% summarise(assists_avg = mean(assists), assists_median = median (assists), assists_cv = sd(assists)/mean(assists), max_assists = max(assists), total_assists = sum(assists)) %>% arrange(desc(assists_avg)) %>% filter (total_assists>1)-> n_assists
n_assists
estadisticas_equipos %>% filter(result == "W" & location == "h") %>% group_by(team) %>% summarise(league = league, t_wins_h_avg = (table(result))/7 ) %>% arrange(desc(t_wins_h_avg)) %>% distinct
estadisticas_equipos %>% filter(result == "W" & location == "a") %>% group_by(team) %>% summarise(league = league, t_wins_a_avg = (table(result)/7) ) %>% arrange(desc(t_wins_a_avg)) %>% distinct
apariciones_jugadores %>% group_by(player) %>% summarise(shots_avg = mean(shots), shots_median = median (shots), shots_sd = sd(shots), max_shots = max(shots), total_shots = sum(shots)) %>% arrange(desc(shots_avg))-> disparos_numerico
disparos_numerico
disparos %>% group_by(player) %>% summarise(avg_minute_shot = mean(minute), med_minute = median(minute), mode_minute = moda(minute),min_minute = min(minute), max_minute = max(minute), cv_minute=sd(minute)/mean(minute), total_shots = n()) %>% arrange(desc(total_shots)) ->minutos_numerico
minutos_numerico
fouls_df <- estadisticas_equipos %>% group_by(team) %>% summarise(fouls_avg = mean (fouls), fouls_median = median(fouls), fouls_cv = sd(fouls)/mean(fouls), max_fouls = max(fouls), min_fouls = min(fouls), total_fouls = sum(fouls)) %>% arrange(desc(fouls_avg))
fouls_df
yellow_df <- estadisticas_equipos %>% group_by(team) %>% summarise(ycards_avg = mean (yellowCards), ycards_median = median(yellowCards), ycards_cv = sd(yellowCards)/mean(yellowCards), max_ycards = max(yellowCards), total_ycards = sum(yellowCards)) %>% arrange(desc(ycards_avg))
yellow_df
pases_1=apariciones_jugadores%>%
group_by(player)%>%
summarise(total_pases = sum(keyPasses), promedio_pases = (mean(keyPasses)), minimo_pases = min(keyPasses), maximo_pases = max(keyPasses)) %>% arrange(desc(total_pases))-> pases_clave
pases_clave
library(ggplot2)
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Bundesliga") -> alemania
ggplot(alemania,aes(x=season,y=goles_totales)) + geom_bar(color="red",stat = "identity",fill = "red") + ggtitle("Bundesliga ")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Premier League") -> inglaterra
ggplot(inglaterra,aes(x=season,y=goles_totales)) + geom_bar(color="blue",stat = "identity",fill = "blue") + ggtitle("Premier League")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Ligue 1") -> fran
ggplot(fran,aes(x=season,y=goles_totales)) + geom_bar(color="skyblue",stat = "identity",fill = "skyblue") + ggtitle("Ligue 1 ")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "Serie A") -> ita
ggplot(ita,aes(x=season,y=goles_totales)) + geom_bar(color="green",stat = "identity",fill = "green") + ggtitle("Serie A")  +
theme(plot.title = element_text(hjust = 0.5))
estadisticas_equipos %>% group_by(season,league) %>% summarise(goles_totales = sum(goals)) %>% filter(league == "La Liga") -> españa
ggplot(españa,aes(x=season,y=goles_totales)) + geom_bar(color="yellow",stat = "identity",fill = "yellow") + ggtitle("La Liga ")  +
theme(plot.title = element_text(hjust = 0.5))
tabla_suma_goles<-estadisticas_equipos%>%
group_by(league,season)%>%
summarise(goles = sum(goals))
ggplot(tabla_suma_goles,aes(x=season,y=goles,fill=league,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge") + ggtitle("Goles por temporada en cada liga")  +
theme(plot.title = element_text(hjust = 0.5))
disparos %>% filter(player == "Lionel Messi" & season == 2020)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2020")
disparos %>% filter(player == "Lionel Messi" & season == 2018)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2018")
disparos %>% filter(player == "Lionel Messi" & season == 2016)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2016")
disparos %>% filter(player == "Lionel Messi" & season == 2014)-> minutos
hist(minutos$minute, col = "gray", xlab = "Minuto del partido", main = "Frecuencia de disparos de Messi en 2014")
box_plot_equipos<-estadisticas_equipos%>%
group_by(season,team)%>%
summarise(goals_per_year =sum(goals))
box_plot_2014<-box_plot_equipos %>% filter (season == 2014)
box_plot_2015<-box_plot_equipos%>% filter (season == 2015)
box_plot_2016<-box_plot_equipos%>% filter (season == 2016)
box_plot_2017<-box_plot_equipos%>% filter (season == 2017)
box_plot_2018<-box_plot_equipos%>% filter (season == 2018)
box_plot_2019<-box_plot_equipos%>% filter (season == 2019)
box_plot_2020<-box_plot_equipos%>% filter (season == 2020)
#qplot(x=box_plot_2014$goals_per_year,geom="boxplot" ,xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2014")
ggplot(box_plot_2014, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2014")
#qplot(x=box_plot_2015$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2015")
ggplot(box_plot_2015, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2015")
#qplot(x=box_plot_2016$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2016" )
ggplot(box_plot_2016, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2016")
#qplot(x=box_plot_2017$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2017")
ggplot(box_plot_2017, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2017")
#qplot(x=box_plot_2018$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2018" )
ggplot(box_plot_2018, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2018")
#qplot(x=box_plot_2019$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2019")
ggplot(box_plot_2019, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2019")
#qplot(x=box_plot_2020$goals_per_year,geom="boxplot",xlab="Goles en la temporada",main = "Boxplot de los goles totales por equipo en las 5 ligas el 2020" )
ggplot(box_plot_2020, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2020")xx
ggplot(box_plot_2020, aes(x=goals_per_year,y="")) +
stat_boxplot(geom="errorbar") +
geom_boxplot(fill="lightgreen", outlier.alpha = 0.3) +
xlab("Goles en la temporada") +
ylab("") +
ggtitle("Boxplot de los goles totales por equipo en las 5 ligas el 2020")
pie_bundesliga<-estadisticas_equipos%>%
filter(league=="Bundesliga")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_bundesliga,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position="dodge")+coord_flip()+ggtitle("Bundesliga")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_serieA<-estadisticas_equipos%>%
filter(league=="Serie A")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_serieA,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("Serie A")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_Premier<-estadisticas_equipos%>%
filter(league=="Premier League")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_Premier,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("Premier League")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_la_liga<-estadisticas_equipos%>%
filter(league=="La Liga")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_la_liga,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("La liga")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
pie_ligue1<-estadisticas_equipos%>%
filter(league=="Ligue 1")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem,))
pie_ligue1<-estadisticas_equipos%>%
filter(league=="Ligue 1")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem,))
pie_bundesliga<-estadisticas_equipos%>%
filter(league=="Bundesliga")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
pie_ligue1<-estadisticas_equipos%>%
filter(league=="Ligue 1")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem,))
pie_ligue1<-estadisticas_equipos%>%
filter(league=="Ligue 1")%>%
group_by(team)%>%
summarise(goles_tem=sum(goals))%>%
arrange(desc(goles_tem))
ggplot(pie_ligue1,aes(x=reorder(team,goles_tem),y=goles_tem,main = "Goles por temporada entre 2014-2020"))+geom_col(position = "dodge")+coord_flip()+ggtitle("Ligue 1")+(theme(plot.title = element_text(hjust = 0.5))) +  labs(x = "Equipos",y = "Goles totales")
