vacunados_completo = max(people_fully_vaccinated, na.rm = T),
total_vacunaciones = max(total_vaccinations, na.rm=T),
nuevas_vacunaciones = sum(new_vaccinations, na.rm = T),
ratio_positivo = max(positive_rate, na.rm = T)) -> PENST
PENST = PENST[1:nrow(PENST),]
PENST
VAC_PEN = PENST[12:nrow(PENST),]
VAC_PEN
Rmundo = group_by(original, location)
Rmundo %>% summarise(
continente = unique(continent),
total_casos = max(total_cases,na.rm=T),
total_muertes = max(total_deaths, na.rm=T),
vacunados = max(people_vaccinated, na.rm=T),
vacunados_completo = max(people_fully_vaccinated, na.rm = T),
total_vacunaciones = max(total_vaccinations, na.rm=T),
pobreza_extrema = max(extreme_poverty, na.rm = T),
lavado_manos = max(handwashing_facilities, na.rm = T),
esperanza_vida = max(life_expectancy, na.rm = T),
poblacion = max(population, na.rm = T)) -> Rmundo
Rmundo = Rmundo[!is.na(Rmundo$continente),]
Rmundo$ratio = Rmundo$total_muertes / Rmundo$poblacion
Rmundo$ratio_vacunados = pmin(0.99,Rmundo$vacunados / Rmundo$poblacion)
Rmundo$ratio_completos = pmin(0.99,Rmundo$vacunados_completo / Rmundo$poblacion)
Rmundo$contagio_muerte = Rmundo$total_muertes / Rmundo$total_casos
head(Rmundo)
Rmundo[(Rmundo$continente == 'North America') | (Rmundo$continente == 'South America'),]$continente = 'America'
Rmundo[(Rmundo$continente == 'Europe'),]$continente = 'Europa'
table(Rmundo$continente)
mean(PENST$nuevos_casos, rm.na = T)
median(PENST$nuevos_casos, rm.na = T)
diff(range(PENST$nuevos_casos, rm.na = T))
sd(PENST$nuevos_casos)
ggplot(data=PENST, aes(x=factor(0),y = nuevos_casos))+
geom_boxplot(width=0.3,color = "#F94144", size=0.3)+labs(x = "", y = "",
title = "Perú: Caja de bigotes de nuevos casos")+
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
summary(PENST$nuevas_muertes)
sd(PENST$nuevas_muertes)
ggplot(data=PENST, aes(x=factor(0),y = nuevas_muertes))+
geom_boxplot(width=0.3,color = "#F94144", size=0.3)+labs(x = "", y = "",
title = "Perú: Caja de bigotes de nuevas muertes")+
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
summary(PENST$nuevas_vacunaciones)
sd(PENST$nuevas_vacunaciones)
ggplot(data=PENST, aes(x=factor(0),y = nuevas_vacunaciones))+
geom_boxplot(width=0.3,color = "#F94144", size=0.3)+labs(x = "", y = "",
title = "Perú: Caja de bigotes de nuevos vacunados")+
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(Rmundo[Rmundo$total_casos>0,], aes(area = total_casos, fill = continente, subgroup = continente)) +
geom_treemap()+
scale_fill_manual(values = c("#7A2021", "#FB8C8E", "#F94144", "#7A4545", "#C73436"))+
ggtitle("Proporción de cantidad de contagios por continente")+
geom_treemap_subgroup_text(place = "centre", alpha = 0.7, colour =
"white", min.size = 0)
ggplot(Rmundo[Rmundo$vacunados>0,], aes(area = vacunados, fill = continente, subgroup = continente)) +
geom_treemap()+
scale_fill_manual(values = c("#7A2021", "#FB8C8E", "#F94144", "#7A4545", "#C73436"))+
ggtitle("Proporción de cantidad de personas vacunadas por continente")+
geom_treemap_subgroup_text(place = "centre", alpha = 0.7, colour =
"white", min.size = 0)
Rmundo %>%
mutate(location = fct_reorder(location, total_muertes)) %>% top_n(total_muertes, n = 10) %>%
mutate(highlight_flag = ifelse(location == 'Peru', T, F)) %>%
ggplot( aes(x=location, y=total_muertes, label = format(total_muertes, big.mark=" "))) +
geom_bar( stat="identity" , aes(fill=highlight_flag), alpha=.8, width=.7) +
geom_text(size=4 , position = position_stack(vjust = 0.5), color="white") +
labs(title = "Paises con mayor cantidad de fallecidos por COVID-19") +
coord_flip() +
xlab("") +
theme_bw() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
Rmundo %>%
mutate(location = fct_reorder(location, contagio_muerte)) %>% top_n(contagio_muerte, n = 10) %>%
mutate(highlight_flag = ifelse(location == 'Peru', T, F)) %>%
ggplot( aes(x=location, y=contagio_muerte, label=paste(round(contagio_muerte*100, 2), "%"))) +
geom_bar( stat="identity" , aes(fill=highlight_flag), alpha=.9, width=.7) +
geom_text(size=4 , position = position_stack(vjust = 0.5), color="white") +
labs(title = "Paises con mayor tasa de fallecidos por infectado - COVID-19", y = "Ratio % de fallecidos entre infectados por Covid-19") +
coord_flip() +
xlab("") +
theme_bw() +
theme(legend.position = "none",
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
Rmundo %>%
mutate(location = fct_reorder(location, ratio_vacunados)) %>% top_n(ratio_vacunados, n = 10) %>%
ggplot( aes(x=location, y=ratio_vacunados, label=paste(round(ratio_vacunados*100, 2), "%"))) +
geom_bar(stat="identity", fill="#F94144", alpha=0.4, width=.7) +
geom_text(size=4 , position = position_stack(vjust = 0.5), color="black") +
ggtitle("Paises con mayor porcenaje de población vacunada")+
coord_flip() +
xlab("") +
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
Rmundo[Rmundo$location == "Peru",]$ratio_vacunados
Rmundo %>%
mutate(location = fct_reorder(location, vacunados)) %>% top_n(vacunados, n = 10) %>%
ggplot( aes(x=location, y=vacunados, label = paste(format(vacunados, big.mark=" "), " "))) +
ggtitle("Paises con mayor cantidad de aplicación de vacunas")+
geom_bar(stat="identity", fill="#F94144", alpha=0.35, width=.8) +
geom_text(size=4 , position = position_dodge(width = 1), color="black", hjust="inward") +
coord_flip() +
ylab("Cantidad de vacunas aplicadas") +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data=PENST, aes(x= mes, y= nuevos_casos, group=1)) +
geom_bar(stat="identity", fill="#F94144", alpha=0.7)+
labs(x = "Meses", y = "Casos nuevos",
title = "Perú: Contagios nuevos mensuales") +
geom_line(linetype=2, size=0.4)+
geom_vline(xintercept = 9, color="steelblue")+
annotate("text", x = 5, y = 260020, hjust = 0.5, label = "Primera ola", size=4, color="black")+
annotate("text", x = 14, y = 270020, hjust = 0.5, label = "Segunda ola", size=4, color="black")+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(data=PENST, aes(x= mes, y= nuevas_muertes, group=1)) +
geom_bar(stat="identity", fill="#F94144", alpha=0.7)+
labs(x = "Meses", y = "Muertes nuevas",
title = "Perú: Muertes nuevas mensuales") +
geom_line(linetype=2, size=0.4)+
geom_vline(xintercept = 9, color="steelblue")+
annotate("text", x = 5, y = 20502, hjust = 0.5, label = "Primera ola", size=4, color="black")+
annotate("text", x = 14, y = 26002, hjust = 0.5, label = "Segunda ola", size=4, color="black")+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(PENST, aes(mes, total_casos, group=1)) +
geom_line(size=0.2)+
geom_point(size=2, color="#F94144")+
labs(x = "Meses", y = "Contagios",
title = "Perú: Evolución de la cantidad total de contagios") +
geom_vline(xintercept = 9, color="steelblue", alpha = 0.5)+
annotate("text", x = 5, y = 2000002, hjust = 0.4, alpha = 0.5, label = "Primera ola", size=4, color="black")+
annotate("text", x = 10, y = 2000002, hjust = 0, alpha = 0.4, label = "Segunda ola", size=4, color="black")+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(PENST, aes(mes, total_muertes, group=1)) +
geom_line(size=0.2)+
geom_point(size=2, color="#F94144")+
labs(x = "Meses", y = "Fallecimientos",
title = "Perú: Evolución de la cantidad total de fallecimientos") +
annotate("text", x = 5, y = 180002, hjust = 0.5, alpha = 0.4, label = "Primera ola", size=4, color="black")+
annotate("text", x = 10, y = 180002, hjust = 0, alpha = 0.4, label = "Segunda ola", size=4, color="black")+
geom_vline(xintercept = 9, color="steelblue", alpha = 0.5)+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(PENST[9:nrow(PENST),], aes(mes, (total_muertes-min(total_muertes))/(max(total_muertes) - min(total_muertes)), group=1)) +
geom_smooth(method="glm", formula = y~x, method.args = list(family = "quasibinomial"), color= "steelblue", size = 1, linetype = 5)+
geom_point(size=1.5, color="#F94144")+
labs(x = "Meses", y = "Fallecimientos",
title = "Perú: Segunda ola - Ajuste a función logística")+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot(VAC_PEN, aes(mes, vacunados, group=1)) +
geom_line(size=0.2)+
geom_point(size=2, color="#277DA1")+
labs(x = "Meses", y = "Vacunados",
title = "Perú: Evolución de la cantidad de vacunados")+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(data=VAC_PEN, aes(x= mes, y= nuevas_muertes, group=1)) +
geom_bar(stat="identity", fill="#F94144", alpha=0.7)+
geom_line(linetype=2, size=0.4)+
labs(x = "Meses", y = "Muertes nuevas",
title = "Perú: Muertes nuevas mensuales desde la campaña de vacunación") +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(data=STM1, aes(x= mes, y= nuevas_vacunaciones, group=1)) +
geom_bar(stat="identity", fill="#F94144")+
geom_line(linetype=2, size=0.4)+
labs(x = "Meses", y = "Cantidad de vacunados",
title = "Mundo: Vacunados por Covid-19 mensuales") +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(STM, aes(x = nuevos_casos, y = nuevas_muertes)) +
labs(x = "Nuevos casos", y = "Muertes nuevas",
title = "Mundo: Relación entre muerte y contagios") +
geom_point(color="#F94144", size=2) + geom_smooth(method = "lm", formula = y ~ x, se = F, size = 0.5, linetype = 2, color="black")
print(paste("Correlación: ",round(cor(STM$nuevas_muertes, STM$nuevos_casos),2)))
ggplot(PENST, aes(x = nuevos_casos, y = nuevas_muertes)) +
labs(x = "Nuevos casos", y = "Muertes nuevas",
title = "Perú: Relación entre muerte y contagios") +
geom_point(color="#F94144",size=2) + geom_smooth(method = "lm", formula = y ~ x, se = F, size = 0.5, linetype = 2, color="black")
print(paste("Correlación: ",round(cor(PENST$nuevas_muertes, PENST$nuevos_casos),2)))
ggplot(STM1, aes(x = nuevas_muertes, y = nuevas_vacunaciones)) +
labs(x = "Muertes nuevas", y = "Nuevas vacunaciones",
title = "Mundo: Relación entre muerte y cantidad de vacunados") +
geom_point(color="#F94144", size=2) + geom_smooth(method = "lm", formula = y ~ x, se = F, size = 0.5, linetype = 2,color="black")
print(paste("Correlación: ",round(cor(STM1$nuevas_muertes, STM1$nuevas_vacunaciones),2)))
ggplot(VAC_PEN, aes(x = nuevas_muertes, y = nuevas_vacunaciones)) +
labs(x = "Muertes nuevas", y = "Nuevas vacunaciones",
title = "Perú: Relación entre muerte y cantidad de vacunados") +
geom_point(color="#F94144", size=2) + geom_smooth(method = "lm", formula = y ~ x, se = F, size = 0.5, linetype = 2,color="black")
print(paste("Correlación: ",round(cor(VAC_PEN$nuevas_muertes, VAC_PEN$nuevas_vacunaciones),2)))
ggplot(data=STM, aes(x= mes, y= nuevas_muertes, group=1)) +
geom_bar(stat="identity", fill="#F94144", alpha=0.7)+
geom_line(linetype=2, size=0.4)+
labs(x = "Meses", y = "Cantidad de fallecidos",
title = "Mundo: Fallecidos por Covid-19 mensuales") +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
mayor <- max(STM$nuevas_muertes)
i <- which(STM$nuevas_muertes==mayor)
fecha <- STM[i,1]
print(paste("Mayor cantidad de muertos por Covid-19 en el mundo ocurrió el",fecha,"afectando a:",mayor,"personas"))
ggplot(STM, aes(mes, total_muertes, group=1)) +
geom_line(size=0.2)+
geom_point(size=2, color="#F94144")+
labs(x = "Meses", y = "Total de fallecidos",
title = "Mundo: Evolución de la cantidad de fallecidos por Covid-19") +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(data=STM, aes(x= mes, y= hospitalizados, group=1)) +
geom_bar(stat="identity", fill="#F94144")+
geom_line(linetype=2, size=0.4)+
labs(x = "Meses", y = "Cantidad de hospitalizados",
title = "Mundo: Hospitalizados mensuales") +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
mayor <- max(STM$hospitalizados)
i <- which(STM$hospitalizados==mayor)
fecha <- STM[i,1]
print(paste("Mayor cantidad de hospitalizados por Covid-19 en el mundo ocurrió el",fecha,"afectando a:",mayor,"personas"))
ggplot(STM, aes(y = nuevas_muertes, x = hospitalizados)) +
labs(y = "Cantidad de fallecidos", x = "Cantidad de Hospitalizados",
title = "Relación: Cantidad de hospitalizados vs Cantidad de fallecidos") +
geom_point(aes(col = "red"), size=2) +
geom_smooth(method = "lm", formula = y ~ x, se = F, size = 0.5, linetype = 2,color="black")
print(paste("Correlación: ",round(cor(STM$nuevas_muertes, STM$hospitalizados),2)))
ggplot(VAC_PEN, aes(x = vacunados, y = nuevas_muertes)) +
labs(x = "Vacunados", y = "Nuevas Muertes",
title = "Perú: Relación entre nuevas muertes y cantidad de vacunados") +
geom_point(color = "red", size=3) + geom_smooth(method = "lm", formula = y ~ x + I(x^2),se = F, size = 0.5, linetype = 2, color="black")
ggplot(Rmundo[Rmundo$pobreza_extrema>0,], aes(x=continente, y=pobreza_extrema, fill=continente)) +
geom_boxplot(alpha=0.5) +
scale_fill_manual(values = c("#7A2021", "#FB8C8E", "#F94144", "#7A4545", "#C73436"))+
labs(x = "Continentes", y = "Índice de pobreza extrema",
title = "Índice de pobreza extrema por continente") +
theme(legend.position="none")
ggplot(Rmundo[Rmundo$lavado_manos>0,], aes(x=continente, y=lavado_manos, fill=continente)) +
geom_boxplot(alpha=0.5) +
scale_fill_manual(values = c("#7A2021", "#FB8C8E", "#F94144", "#7A4545", "#C73436"))+
labs(x = "Continentes", y = "Porcentaje de acceso",
title = "% de acceso a Instalaciones de lavado de manos por continente") +
theme(legend.position="none")
ggplot(Rmundo[(Rmundo$pobreza_extrema>0) & (Rmundo$lavado_manos > 0),],
aes(x = pobreza_extrema, y = lavado_manos)) +
labs(x = "Índice de probreza extrema", y = "Acceso a lavado de manos",
title = "") +
geom_point(aes(color = continente))+
scale_color_manual(values = c("#7A2021", "#FB8C8E", "#F94144", "#7A4545", "#C73436"))
ggplot(Rmundo[(Rmundo$ratio_vacunados>0) & (Rmundo$pobreza_extrema>0),], aes(x = pobreza_extrema, y = ratio_vacunados)) +
labs(x = "Índice de probreza extrema", y = "% población de vacunados",
title = "%de población vacunada por índice de pobreza de los paises") +
geom_point(aes(color = continente))+
scale_color_manual(values = c("#7A2021", "#FB8C8E", "#F94144", "#7A4545", "#C73436"))
max(PENST$vacunados_completo, na.rm=T)/33000000
dgeom(10-1,0.55)
round(100*mean(PENST$ratio_positivo[PENST$mes!="2021-11"], na.rm=T),2)
dbinom(7,7,0.83)
round(100*mean(max(PENST$total_muertes)/max(PENST$total_casos)),2)
dbinom(14,14,0.91)
print("Mínimo")
min(PENST$nuevos_casos)
print("Máximo")
max(PENST$nuevos_casos)
µ = 100000
n= length(VAC_PEN$nuevos_casos)
media.muestral = mean(VAC_PEN$nuevos_casos)
sd.muestral=sd(VAC_PEN$nuevos_casos)
α = 0.05
a=0.1
t <- (media.muestral-µ)/(sd.muestral/sqrt(n)) #Calculo del estadístico
print("Media muestral")
media.muestral
print("Desviación Estándar muestral")
sd.muestral
print("Tamaño de la muestra")
n
print("t-estadístico")
t
print("Valor-p")
pvalor = pt(t, n - 1, lower.tail = T)
pvalor
print("Punto crítico α = 0.05")
qt(0.05,n-1)
print("Punto crítico α = 0.1")
qt(0.1,n-1)
print("Intervalo de confianza")
IC1<-media.muestral+qt(0.025,n-1)*(sd.muestral/n)
IC2<-media.muestral-qt(0.025,n-1)*(sd.muestral/n)
IC1
IC2
hist(PENST$nuevos_casos, col="#DD5959", ylab="Frecuencia", xlab="Nuevos casos", main="Histograma de intervalos")
abline(v=IC1, col="red")
abline(v=IC2, col="red")
abline(v=media.muestral, col="#FF5C5C")
abline(v=µ, col="#FF3333")
legend(x = "topright", legend = c("Intervalos de confianza", "Media muestral", "Media propuesta"), fill = c("red", "#FF5C5C","#FF3333"),
title = "Loan")
curve(dnorm(x, mean=0, sd=1 , log=F), from=-3, to=3, xlim=c(-3, 3), col="#DD5959", lwd=4, ylab="",xlab="", main="Gráfico de distribución normal estándar")
polygon(c(qt(0.05,n-1), seq(qt(0.05,n-1),qt(0.1,n-1), 0.01),qt(0.1,n-1)), c(0,dt(seq(qt(0.05,n-1),qt(0.1,n-1),0.01),df=n-1),0), col="#FF3333")
polygon(c(-3, seq(-3,qt(0.05,n-1), 0.01),qt(0.05,n-1)), c(0,dt(seq(-3,qt(0.05,n-1),0.01),df=n-1),0), col="#FF5C5C")
polygon(c(qt(0.1,n-1), seq(qt(0.1,n-1),3, 0.01),3), c(0,dt(seq(qt(0.1,n-1),3,0.01),df=n-1),0), col="#DD5959")
abline(v=qt(0.05, n-1), col="#FF5C5C") ## Punto Critico
abline(v=t,col="red")
legend(x = "topright", legend = c("Punto crítico 95%","Punto crítico 90%" , "t-estadístico"), fill = c("#FF5C5C", "#FF3333","#DD5959"),
title = "Leyenda")
abline(v=qt(0.1, n-1), col="#FF3333")
curve(dnorm(x, mean=media.muestral, sd=sd.muestral , log=F), from=-100000, to=450000, col="#DD5959", lwd=4, ylab="",xlab="", main="Gráfico de distribución normal con datos de la variable")
abline(v=qnorm(0.05,media.muestral,sd.muestral),col="#FF5C5C")
abline(v=qnorm(0.1,media.muestral,sd.muestral),col="#FF3333")
abline(v=100000,col="#DD5959")
legend(x = "topright", legend = c("Punto crítico 95%","Punto crítico 90%" , "Media propuesta"), fill = c("#FF5C5C", "#FF3333","#DD5959"),
title = "Leyenda")
print("Total de vacunaciones")
VAC_PEN$total_vacunaciones
α = 0.05
p = 0.90
n = 300
x = 280
z <- ((x/n)-p) / (sqrt(p*(1-p))/sqrt(n)) #Calculo del estadístico z
print("Z-crítico")
z
print("Punto crítico 95%")
qnorm(0.05)
print("Punto crítico 90%")
qnorm(0.01)
print("Valor-P")
pnorm(q=z, mean=0, sd=1, lower.tail=T)  # Para obtener el valor-P
curve(dnorm(x, mean=0, sd=1 , log=F), from=-3, to=3, xlim=c(-3, 3), col="#DD5959", lwd=4, ylab="",xlab="", main="Gráfico de distribución normal")
polygon(c(qnorm(0.01), seq(qnorm(0.01),qnorm(0.05), 0.01),qnorm(0.05)), c(0,dt(seq(qnorm(0.01),qnorm(0.05),0.01),df=n-1),0), col="#FF3333")
polygon(c(-3, seq(-3,qnorm(0.01), 0.01),qnorm(0.01)), c(0,dt(seq(-3,qnorm(0.01),0.01),df=n-1),0), col="#FF5C5C")
polygon(c(qnorm(0.05), seq(qnorm(0.05),3, 0.01),3), c(0,dt(seq(qnorm(0.05),3,0.01),df=n-1),0), col="#DD5959")
abline(v=qnorm(0.05), col="#FF3333") ## Punto Critico
abline(v=qnorm(0.01), col="#FF5C5C")
abline(v=z, col="red")
legend(x = "topright", legend = c("Punto crítico 99%","Punto crítico 95%" , "t-estadístico"), fill = c("#FF5C5C", "#FF3333","#DD5959"),
title = "Leyenda")
print("Intervalos de confianza")
p+qnorm(0.975)*(sqrt((p*(1-p))/n))
p-qnorm(0.975)*(sqrt((p*(1-p))/n))
print("Mínimo")
min(VAC_PEN$nuevas_vacunaciones)
print("Máximo")
max(VAC_PEN$nuevas_vacunaciones)
µ = 3500000
n= length(VAC_PEN$nuevas_vacunaciones)
media.muestral = mean(VAC_PEN$nuevas_vacunaciones)
sd.muestral=sd(VAC_PEN$nuevas_vacunaciones)
α = 0.05
t <- (media.muestral-µ)*sqrt(n)/sd.muestral
print("Media Muestral")
media.muestral
print("Desviación Estándar muestral")
sd.muestral
print("Tamaño de la muestra")
n
print("t-estadístico")
t
print("Valor-p")
pvalor = pt(t, n - 1, lower.tail = T) ##P-valor para 2 colas
pvalor
print("Punto critico α = 0.05")
qt(0.05,n-1)
print("Punto critico α = 0.1")
qt(0.1,n-1)
print("Intervalo de confianza")
IC1<-media.muestral+qt(0.025,n-1)*(sd.muestral/n)
IC2<-media.muestral-qt(0.025,n-1)*(sd.muestral/n)
IC1
IC2
hist(VAC_PEN$nuevas_vacunaciones, col="#DD5959", ylab="Frecuencia", xlab="Nuevos casos", main="Histograma de intervalos")
abline(v=IC1, col="red")
abline(v=IC2, col="red")
abline(v=media.muestral, col="#FF5C5C")
abline(v=µ, col="#FF3333")
legend(x = "topright", legend = c("Intervalos de confianza", "Media muestral", "Media propuesta"), fill = c("red", "#FF5C5C","#FF3333"),
title = "leyenda")
curve(dnorm(x, mean=0, sd=1 , log=F), from=-3, to=3, xlim=c(-3, 3), col="#DD5959", lwd=4, ylab="",xlab="", main="Gráfico de distribución normal estándar")
polygon(c(qt(0.05,n-1), seq(qt(0.05,n-1),qt(0.1,n-1), 0.01),qt(0.1,n-1)), c(0,dt(seq(qt(0.05,n-1),qt(0.1,n-1),0.01),df=n-1),0), col="#FF5C5C")
polygon(c(-3, seq(-3,qt(0.05,n-1), 0.01),qt(0.05,n-1)), c(0,dt(seq(-3,qt(0.05,n-1),0.01),df=n-1),0), col="#FF3333")
polygon(c(qt(0.1,n-1), seq(qt(0.1,n-1),3, 0.01),3), c(0,dt(seq(qt(0.1,n-1),3,0.01),df=n-1),0), col="#DD5959")
abline(v=qt(0.05, n-1), col="#FF3333") ## Punto Critico
abline(v=t,col="red")
legend(x = "topright", legend = c("Punto crítico 95%","Punto crítico 90%" , "t-estadístico"), fill = c("#FF3333", "#DDA759","#FF5C5C"),
title = "Leyenda")
abline(v=qt(0.1, n-1), col="#FF5C5C")
curve(dnorm(x, mean=media.muestral, sd=sd.muestral , log=F), from=-5500000, to=15000000, col="#DD5959", lwd=4, ylab="",xlab="", main="Gráfico de distribución normal con valores de la variable")
abline(v=qnorm(0.05,media.muestral,sd.muestral),col="#FF5C5C")
abline(v=qnorm(0.1,media.muestral,sd.muestral),col="#FF3333")
abline(v=3500000,col="#DD5959")
legend(x = "topright", legend = c("Punto crítico 95%","Punto crítico 90%" , "Media propuesta"), fill = c("#FF5C5C", "#FF3333","#DD5959"),
title = "Leyenda")
ggplot(STM,aes(nuevos_casos,nuevas_muertes))+
geom_point(color="red", size=2)+ geom_smooth(method = "lm", formula = y ~ x,size=0.5, linetype=2, colour = "black")+
labs(x = "Nuevos casos", y = "Muertes nuevas",
title = "Mundo: Relación entre muerte y contagios")
print(paste("Correlación: ",round(cor(STM$nuevas_muertes, STM$nuevos_casos),2)))
caso1 <- round(median(STM$nuevos_casos[(16:22)], na.rm = T),0)
caso2 <- round(mean(STM$nuevos_casos[(17:22)], na.rm = T),0)
caso3 <- round(median(STM$nuevos_casos[(18:22)], na.rm = T),0)
caso4 <- round(mean(STM$nuevos_casos[(19:22)], na.rm = T),0)
print(paste("Proyección 1:",caso1, "| Muertes: ",round((1.351e-02*caso1+3.104e+05),0)))
print(paste("Proyección 2:",caso2, "| Muertes: ",round((1.351e-02*caso2+3.104e+05),0)))
print(paste("Proyección 3:",caso3, "| Muertes: ",round((1.351e-02*caso3+3.104e+05),0)))
print(paste("Proyección 4:",caso4, "| Muertes: ",round((1.351e-02*caso4+3.104e+05),0)))
ggplot(PENST,aes(nuevos_casos,nuevas_muertes))+
geom_point(color="red", size=2)+ geom_smooth(method = "lm", formula = y ~ x,size=0.5, linetype=2, colour = "black")+
labs(x = "Nuevos casos", y = "Muertes nuevas",
title = "Perú: Relación entre muerte y contagios")
print(paste("Correlación: ",round(cor(PENST$nuevas_muertes, PENST$nuevos_casos),2)))
caso1 <- round(median(PENST$nuevos_casos[(16:22)], na.rm = T),0)
caso2 <- round(mean(PENST$nuevos_casos[(17:22)], na.rm = T),0)
caso3 <- round(median(PENST$nuevos_casos[(18:22)], na.rm = T),0)
caso4 <- round(mean(PENST$nuevos_casos[(19:22)], na.rm = T),0)
print(paste("Proyección 1:",caso1, "| Muertes: ",round((1.351e-02*caso1+3.104e+05),0)))
print(paste("Proyección 2:",caso2, "| Muertes: ",round((1.351e-02*caso2+3.104e+05),0)))
print(paste("Proyección 3:",caso3, "| Muertes: ",round((1.351e-02*caso3+3.104e+05),0)))
print(paste("Proyección 4:",caso4, "| Muertes: ",round((1.351e-02*caso4+3.104e+05),0)))
grafico1 = ggplot(STM,aes(hospitalizados,nuevas_muertes))
grafico1 + geom_point(color="red", size=2)+ geom_smooth(method = "lm", formula = y ~ x,size=0.5, linetype=2, colour = "black")+ xlab("Cantidad de hospitalizados") + ylab("Cantidad de nuevas muertes") + ggtitle("Mundo: Hospitalizados vs Nuevas muertes") + theme(plot.title = element_text(hjust = 0.5))
caso1 <- round(median(STM$hospitalizados[(16:22)], na.rm = T),0)
caso2 <- round(mean(STM$hospitalizados[(17:22)], na.rm = T),0)
caso3 <- round(median(STM$hospitalizados[(18:22)], na.rm = T),0)
caso4 <- round(mean(STM$hospitalizados[(19:22)], na.rm = T),0)
print(paste("Proyección 1:",caso1, "| Muertes: ",round((1.477e-01*caso1+4.664e+05),0)))
print(paste("Proyección 2:",caso2, "| Muertes: ",round((1.477e-01*caso2+4.664e+05),0)))
print(paste("Proyección 3:",caso3, "| Muertes: ",round((1.477e-01*caso3+4.664e+05),0)))
print(paste("Proyección 4:",caso4, "| Muertes: ",round((1.477e-01*caso4+4.664e+05),0)))
grafico1 = ggplot(STM1,aes(nuevas_vacunaciones,nuevas_muertes))
grafico1 + geom_point(color="red", size=2)+ geom_smooth(method = "lm", formula = y ~ x,size=0.5, linetype=2, colour = "black") + xlab("Cantidad de nuevos vacunados") + ylab("Cantidad de nuevas muertes") + ggtitle("Mundo: Nuevas vacunaciones vs Nuevas muertes") + theme(plot.title = element_text(hjust = 0.5))
grafico1 = ggplot(VAC_PEN,aes(nuevas_vacunaciones,nuevas_muertes))
grafico1 + geom_point(color="red", size=2)+ geom_smooth(method = "lm", formula = y ~ x,size=0.5, linetype=2, colour = "black") + xlab("Cantidad de nuevos vacunados") + ylab("Cantidad de nuevas muertes") + ggtitle("Perú: Nuevas vacunaciones vs Nuevas muertes") + theme(plot.title = element_text(hjust = 0.5))
library(readr)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(forcats)
library(treemapify)
library(gridExtra)
original <- read_csv("owid-covid-data.csv")
meses = strftime(original$date, "%Y-%m")
original$mes = meses
table(original$mes)
STM = group_by(original, mes)
STM %>% summarise(
total_casos = max(total_cases,na.rm=T),
nuevos_casos = sum(new_cases, na.rm = T),
total_muertes = max(total_deaths, na.rm=T),
nuevas_muertes = sum(new_deaths, na.rm = T),
hospitalizados = sum(hosp_patients, na.rm = T),
vacunados = max(people_vaccinated, na.rm=T),
vacunados_completo = max(people_fully_vaccinated, na.rm = T),
total_vacunaciones = max(total_vaccinations, na.rm=T),
nuevas_vacunaciones = sum(new_vaccinations, na.rm = T),
ratio_positivo = max(positive_rate, na.rm = T)) -> STM
STM = STM[3:nrow(STM)-1,]
STM1 = STM[12:nrow(STM),]
table(STM1$mes)
PENST = group_by(original[original$location=="Peru", ], mes)
PENST %>% summarise(
total_casos = max(total_cases,na.rm=T),
nuevos_casos = sum(new_cases, na.rm = T),
total_muertes = max(total_deaths, na.rm=T),
nuevas_muertes = sum(new_deaths, na.rm = T),
vacunados = max(people_vaccinated, na.rm=T),
vacunados_completo = max(people_fully_vaccinated, na.rm = T),
total_vacunaciones = max(total_vaccinations, na.rm=T),
nuevas_vacunaciones = sum(new_vaccinations, na.rm = T),
ratio_positivo = max(positive_rate, na.rm = T)) -> PENST
PENST = PENST[3:nrow(PENST),]
VAC_PEN = PENST[12:nrow(PENST),]
ggplot(data=PENST, aes(x= mes, y= nuevos_casos, group=1)) +
geom_bar(stat="identity", fill="#F94144", alpha=0.7)+
labs(x = "Meses", y = "Casos nuevos",
title = "Perú: Contagios nuevos mensuales") +
geom_line(linetype=2, size=0.4)+
geom_vline(xintercept = 9, color="steelblue")+
annotate("text", x = 5, y = 260020, hjust = 0.5, label = "Primera ola", size=4, color="black")+
annotate("text", x = 14, y = 270020, hjust = 0.5, label = "Segunda ola", size=4, color="black")+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(PENST, aes(mes, total_muertes, group=1)) +
geom_line(size=0.2)+
geom_point(size=2, color="#F94144")+
labs(x = "Meses", y = "Fallecimientos",
title = "Perú: Evolución de la cantidad total de fallecimientos") +
annotate("text", x = 5, y = 180002, hjust = 0.5, alpha = 0.4, label = "Primera ola", size=4, color="black")+
annotate("text", x = 10, y = 180002, hjust = 0, alpha = 0.4, label = "Segunda ola", size=4, color="black")+
geom_vline(xintercept = 9, color="steelblue", alpha = 0.5)+
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(data=STM1, aes(x= mes, y= nuevas_vacunaciones, group=1)) +
geom_bar(stat="identity", fill="#F94144")+
geom_line(linetype=2, size=0.4)+
labs(x = "Meses", y = "Cantidad de vacunados",
title = "Mundo: Vacunados por Covid-19 mensuales") +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1, size=7))
ggplot(STM, aes(x = nuevos_casos, y = nuevas_muertes)) +
labs(x = "Nuevos casos", y = "Muertes nuevas",
title = "Mundo: Relación entre muerte y contagios") +
geom_point(color="#F94144", size=2) + geom_smooth(method = "lm", formula = y ~ x, se = F, size = 0.5, linetype = 2, color="black")
print(paste("Correlación: ",round(cor(STM$nuevas_muertes, STM$nuevos_casos),2)))
print(paste("Correlación: ",round(cor(STM$nuevas_muertes, STM$nuevos_casos),2)))
print(paste("Correlación: ",round(cor(STM$nuevas_muertes, STM$nuevos_casos),2)))
print(paste("Correlación: ",round(cor(VAC_PEN$nuevas_muertes, VAC_PEN$nuevas_vacunaciones),2)))
install.packages("treemapify")
