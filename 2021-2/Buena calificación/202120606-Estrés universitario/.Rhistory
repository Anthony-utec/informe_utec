library(readr)
library(dplyr)
library(plyr)
library(kableExtra)
library(ggVennDiagram)
library(ggplot2)
PE<-read_csv("Base.csv")
length(names(PE))
head(names(PE),5)
PE[,4:ncol(PE)]-> PE1
length(names(PE1))
names(PE1)[1]<-paste("Ingreso")
names(PE1)[5]<-paste("Independencia")
names(PE1)[6]<-paste("Convivientes")
names(PE1)[7]<-paste("Espacio")
names(PE1)[8]<-paste("Internet")
names(PE1)[9]<-paste("Covid")
names(PE1)[10]<-paste("Estres")
names(PE1)[13]<-paste("NCursos")
names(PE1)[14]<-paste("NHACS")
names(PE1)[15]<-paste("NCiencias")
names(PE1)[16]<-paste("NCarrera")
names(PE1)[17]<-paste("NPI")
names(PE1)[18]<-paste("NGestion")
names(PE1)[19]<-paste("Promedio")
names(PE1)[20]<-paste("Organizaciones")
names(PE1)[21]<-paste("Bika")
names(PE1)[22]<-paste("Trika")
names(PE1)[23]<-paste("HEstudio")
names(PE1)[24]<-paste("HEstudio.mas")
names(PE1)[25]<-paste("HEstudio.menos")
names(PE1)[26]<-paste("Act.relaja")
names(PE1)[27]<-paste("TopApps")
names(PE1)[28]<-paste("HUso")
names(PE1)[29]<-paste("SFisico")
names(PE1)[30]<-paste("SPsico")
names(PE1)[31]<-paste("SComport")
names(PE1)[32]<-paste("Estresor")
names(PE1)[33]<-paste("Estrategia")
names(PE1)
PE1$Ingreso[PE1$Ingreso=="202110623"]<-NA
PE1$Ingreso<-as.character(PE1$Ingreso)
PE1$Organizaciones[PE1$Organizaciones=="O"]<-NA
PE1$Organizaciones[PE1$Organizaciones=="UDS"]<-NA
PE1$Bika[PE1$Bika=="O"]<-NA
PE1$HEstudio.mas[PE1$HEstudio.mas=="Opción 1"]<-NA
PE1$HEstudio.mas<-as.numeric(PE1$HEstudio.mas)
PE1$Promedio<-as.numeric(PE1$Promedio)
PE1<-filter(PE1,PE1$Promedio<=20)
PE1$Estrategia[PE1$Estrategia=="ESTRATEGIAS DE ESTUDIO"]<-"OTRAS ACTIVIDADES"
PE1$Estrategia[PE1$Estrategia=="Jugar DOTA"]<-"OTRAS ACTIVIDADES"
PE1$Estrategia[PE1$Estrategia=="Estar con mi gata"]<-"OTRAS ACTIVIDADES"
PE1$Estrategia[PE1$Estrategia=="POSITIVISMO"]<-"OPTIMISMO"
sapply(PE1, function(x) sum(is.na(x)))
PE2<-PE1[!is.na(PE1$Ingreso),]
PE3<-PE2[!is.na(PE2$Ciclo),]
PE4<-PE3[!is.na(PE3$Carrera),]
PE5<-PE4[!is.na(PE4$NCursos),]
PE6<-PE5[!is.na(PE5$Organizaciones),]
PE6<-PE6[!is.na(PE6$HEstudio.mas),]
length(PE1$Sexo)
length(PE6$Sexo)
DD2<-filter(PE6,PE6$Sexo=="MASCULINO")
DD3<-filter(PE6,PE6$Sexo=="FEMENINO")
length(DD2$Sexo)
length(DD3$Sexo)
paste0(round(100*length(DD3$Sexo)/length(PE6$Sexo),2),"%")
paste0(round(100*length(DD2$Sexo)/length(PE6$Sexo),2),"%")
Tabsexo<-table(PE6$Sexo)
barplot(Tabsexo,main="Personas encuestadas por sexo",xlab="Sexo",ylab="Número de personas",col=c("red","blue"))
summary(PE6$Edad)
boxplot(PE6$Edad,col="red",main="Distribución de edades", ylab="Edad")
columnaM<-DD3$Edad[complete.cases(DD3$Edad)]
summary(columnaM)
columnaH<-DD2$Edad[complete.cases(DD2$Edad)]
summary(columnaH)
boxplot(formula = PE6$Edad ~ PE6$Sexo, data=PE6, col=c("red","blue"),main="Distribución de edades por sexo",ylab="Edad",xlab="Sexo")
tabIngreso<-table(PE6$Ingreso)
barplot(tabIngreso, col = c("greenyellow","green","green1","green2","green3","green4"), main = "Año de ingreso de encuestados",xlab = "Año")
TabIngresoSexo<-table(PE6$Sexo,PE6$Ingreso)
barplot(TabIngresoSexo,col =  c("greenyellow","deepskyblue"),main = "Año de ingreso por sexo",xlab = "Año")
legend("topright",legend = c("Masculino","Femenino"), fill = c("deepskyblue","greenyellow"), bty = "o",
cex = 0.8)
columnaEstres<-table(PE6$Estres)
barplot(columnaEstres, col = c("greenyellow","yellow","orange1","orangered1","red3"),main = "Nivel de estrés en los encuestados", xlab = "Nivel de estrés")
EstresCiclo<-table(PE6$Ciclo,PE6$Estres)
mosaicplot(EstresCiclo,col = c("greenyellow","yellow","orange1","orangered1","red3"),main = "Nivel de estrés según el ciclo",xlab = "Ciclo")
legend("topright",legend = c(1,2,3,4,5), fill = c("greenyellow","yellow","orange1","orangered1","red3"), bty = "o",
cex = 0.65,title = "Nivel de estrés")
PE6$Carrera[PE6$Carrera=="ADMINISTRACION Y NEGOCIOS DIGITALES"]<-"Adm"
PE6$Carrera[PE6$Carrera=="BIOINGENIERIA"]<-"Bio"
PE6$Carrera[PE6$Carrera=="CIENCIA DE LOS DATOS"]<-"CD"
PE6$Carrera[PE6$Carrera=="INGENIERIA AMBIENTAL"]<-"Am"
PE6$Carrera[PE6$Carrera=="INGENIERIA CIVIL"]<-"Civ"
PE6$Carrera[PE6$Carrera=="CIENCIAS DE LA COMPUTACIÓN"]<-"CC"
PE6$Carrera[PE6$Carrera=="INGENIERIA DE LA ENERGIA"]<-"En"
PE6$Carrera[PE6$Carrera=="INGENIERIA ELECTRONICA"]<-"El"
PE6$Carrera[PE6$Carrera=="INGENIERIA INDUSTRIAL"]<-"Ind"
PE6$Carrera[PE6$Carrera=="INGENIERIA MECANICA"]<-"Mc"
PE6$Carrera[PE6$Carrera=="INGENIERIA MECATRONICA"]<-"Mt"
PE6$Carrera[PE6$Carrera=="INGENIERIA QUIMICA"]<-"Qm"
EstresCarrera<-table(PE6$Estres,PE6$Carrera)
barplot(EstresCarrera,col = c("greenyellow","yellow","orange1","orangered1","red3"),main = "Nivel de estrés por carrera", xlab = "Carrera")
legend("topright",legend = c(1,2,3,4,5), fill = c("greenyellow","yellow","orange1","orangered1","red3"), bty = "o",cex = 0.8,title = "Nivel de estrés")
summary(PE6$NCursos)
TabEstresCursos<-table(PE6$Estres,PE6$NCursos)
TabEstresCursos%>%
kbl(caption = "Nivel de estrés según la cantidad de cursos") %>%
kable_classic(full_width = T, html_font = "Cambria")%>%
row_spec(5, bold = T, color = "white", background = "#900C3F") %>%
row_spec(4, bold = T, color = "white", background = "#C70039") %>%
row_spec(3, bold = T, color = "white", background = "#FF5733") %>%
row_spec(2, bold = T, color = "white", background = "#FFC300") %>%
row_spec(1, bold = T, color = "white", background = "#C7E298")
pie(TabEstresCursos[,7],col=c("greenyellow","yellow","orange1","orangered1","red3"),main = "Nivel de estrés en estudiantes con 7 cursos")
legend("topright",legend = c(1,2,3,4,5), fill = c("greenyellow","yellow","orange1","orangered1","red3"), bty = "o",cex = 1,title = "Nivel de estrés")
c1<-c(round(100*TabEstresCursos[5,]/sum(TabEstresCursos[5,]),2))
pie(TabEstresCursos[5,],labels =paste0(c1,"%"),main = "Número de cursos de estudiantes con nivel de estrés alto",col = rainbow(length(TabEstresCursos[5,])))
legend("topright",legend = c(1:9), fill = rainbow(length(TabEstresCursos[5,])), bty = "o",cex = 1,title = "Cursos")
TabEstresEstresores<-table(PE6$Estres,PE6$Estresor)
TabEstresEstresores%>%
kbl(caption = "Nivel de estrés según el estresor") %>%
kable_classic(full_width = T, html_font = "Cambria")%>%
row_spec(5, bold = T, color = "white", background = "#900C3F") %>%
row_spec(4, bold = T, color = "white", background = "#C70039") %>%
row_spec(3, bold = T, color = "white", background = "#FF5733") %>%
row_spec(2, bold = T, color = "white", background = "#FFC300") %>%
row_spec(1, bold = T, color = "white", background = "#C7E298")
c2<-c(round(100*TabEstresEstresores[5,]/sum(TabEstresEstresores[5,]),2))
pie(TabEstresEstresores[5,],labels =paste0(c2,"%"),main = "Principales estresores de estudiantes con nivel de estrés alto",col = rainbow(length(TabEstresEstresores[5,])))
legend("topright",legend = colnames(TabEstresEstresores), fill = rainbow(length(TabEstresEstresores[5,])), bty = "o",cex = 0.5,title = "Cursos")
pairs(PE6$HUso~PE6$HEstudio)
cor(PE6$HEstudio,PE6$HUso)
cov(PE6$HEstudio,PE6$HUso)
colores<-c("greenyellow","yellow","orange1","orangered1","red3")
plot(x=PE6$HEstudio,y=PE6$HUso,col=colores[PE6$Estres],pch=16,xlab = "Horas de estudio",ylab = "Horas de uso del celular",main = "Uso del celular según el tiempo destinado a estudiar")
legend("topleft",legend = c(1,2,3,4,5), fill = c("greenyellow","yellow","orange1","orangered1","red3"), bty = "o",cex = 0.8,title = "Nivel de estrés")
#total de estudiantes
T_est<-sum(table(PE6$NCiencias))
T_est
#total  de estudiantes que llevan los 3 tipos cursos
t_2<-filter(PE6,NHACS!=0 & NCiencias!=0 & NCarrera!=0)
t_3<-select(t_2,NHACS,NCiencias,NCarrera)
nrow(t_3)
#total que llevan solo ciencia NCiencias
t_4<-filter(PE6,NHACS==0 & NCiencias!=0 & NCarrera==0)
t_5<-select(t_4,NHACS,NCiencias,NCarrera)
nrow(t_5)
#total que llevan solo  NCarrera
t_6<-filter(PE6,NHACS==0 & NCiencias==0 & NCarrera!=0)
t_7<-select(t_6,NHACS,NCiencias,NCarrera)
nrow(t_7)
#total que llevan solo NHACS
t_8<-filter(PE6,NHACS!=0 & NCiencias==0 & NCarrera==0)
t_9<-select(t_8,NHACS,NCiencias,NCarrera)
nrow(t_9)
#total que llevan solo  NHACS y ciencia
t_10<-filter(PE6,NHACS!=0 & NCiencias!=0 & NCarrera==0)
t_11<-select(t_10,NHACS,NCiencias,NCarrera)
nrow(t_11)
#total que llevan ninguno
t_12<-filter(PE6,NHACS==0 & NCiencias==0 & NCarrera==0)
t_13<-select(t_12,NHACS,NCiencias,NCarrera)
nrow(t_13)
#total que llevan NHACS y carrera
t_14<-filter(PE6,NHACS!=0 & NCiencias==0 & NCarrera!=0)
t_15<-select(t_14,NHACS,NCiencias,NCarrera)
nrow(t_15)
#total  de estudiantes que llevan  solo ciencia y carrera
t_16<-filter(PE6,NHACS==0 & NCiencias!=0 & NCarrera!=0)
t_17<-select(t_16,NHACS,NCiencias,NCarrera)
nrow(t_17)
P3<-nrow(t_3)/T_est
paste0(round(100*P3,2),"%")
P_no_hac<-(nrow(t_5)+nrow(t_7)+nrow(t_17))/T_est
paste0(round(100*P_no_hac,2),"%")
P_carrera<-(nrow(t_3)+nrow(t_7)+nrow(t_17)+nrow(t_15))/T_est
paste0(round(P_carrera*100,2),"%")
U<-1:152
Carrera<-1:126
HACS<-c(9:106,127:147)
Ciencias<-c(29:126,128:147,148:151)
x<-list(U,Carrera,HACS,Ciencias)
ggVennDiagram(x, color = "black", lwd = 0.8, lty = 1,category.names = c("U","Carrera",
"HACS",
"Ciencias"),label = "count") +
scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +
theme(legend.position = "none")
n<-length(PE6$Estres)
n
p<-length(PE6$Estres[PE6$Estres=="1"|PE6$Estres=="2"])
p
PNEstresado<-p/n
paste0(round(100*PNEstresado,2),"%")
PEstresado<-1-PNEstresado
paste(round(100*PEstresado,2),"%")
paste0(round(100*sum(dbinom(15:17,20,PEstresado)),2),"%")
E=20*PEstresado
E
D1=20*PEstresado*PNEstresado
D1
paste0(round(100*dgeom(20,PNEstresado),2),"%")
E1=PEstresado/PNEstresado
E1
D1=(PEstresado/PNEstresado)/PNEstresado
D1
#k=número de mujeres
k<-nrow(DD3)
k
#MIN=número de mujeres con independencia económica
M<-filter(DD3,DD3$Independencia=="SI")
MIN<-nrow(M)
MIN
#VARIABLE ALEATORIA
#X=5 mujeres con independencia económica
x<-5
#Número de encuestados
N<-nrow(PE6)
#Rango={1,2,3,4,5,6,7,8,9}
dhyper(5,9,59,59)
#ESPERADO
E<-(k*(MIN/N))
E
#VARIANZA
V<-E*(1-(MIN/N))
V
m2<-head(PE6$Promedio,25)
u01<-15
X<-mean(m2)
s<-sd(m2)
n<-25
T1calc<-(X-u01)/(s/sqrt(n))
T1calc
t<-qt(0.05,n-1)
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x <= t], t), c(dnorm(x[x <= t]), 0), col="lightblue")
abline(v=T1calc,col="green",lwd=2)
text(t, .1,round(t,2))
text(T1calc, .1,round(T1calc,2))
l<-qt(1-0.025,n-1)
Linf<-X-(l*s/sqrt(n))
Linf
Lsup<-X+(l*s/sqrt(n))
Lsup
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Intervalo de confianza", lty = 1, lwd = 3, yaxs="i",xaxt="n",yaxt="n") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x <= -l], -l), c(dnorm(x[x <= -l]), 0), col="lightblue")
polygon(c(x[x >= l], l), c(dnorm(x[x >= l]), 0), col="lightblue")
text(l, .1,round(Lsup,2))
text(-l, .1,round(Linf,2))
m<-head(PE6$HEstudio,28)
u02<-40
X2<-mean(m)
s2<-sd(m)
n2<-28
T2calc<-(X2-u02)/(s2/sqrt(n2))
T2calc
t2<-qt(1-0.05,n2-1)
x<-seq(-7,7,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x >= t2], t2), c(dnorm(x[x >= t2]), 0), col="lightblue")
abline(v=T2calc,col="green",lwd=2)
text(t2, .1,round(t2,2))
text(T2calc, .1,round(T2calc,2))
l2<-qt(1-0.025,n2-1)
Linf2<-X2-(l2*s2/sqrt(n2))
Linf2
Lsup2<-X2+(l2*s2/sqrt(n2))
Lsup2
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Intervalo de confianza", lty = 1, lwd = 3, yaxs="i",xaxt="n",yaxt="n") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x <= -l2], -l2), c(dnorm(x[x <= -l2]), 0), col="lightblue")
polygon(c(x[x >= l2], l2), c(dnorm(x[x >= l2]), 0), col="lightblue")
text(l2, .1,round(Lsup2,2))
text(-l2, .1,round(Linf2,2))
NivEstres<-table(PE6$Estres)
(NivEstres[5]+NivEstres[4])/nrow(PE6)
po<-0.65
qo<-1-po
n3<-nrow(PE6)
p<-0.6644737
q<-1-p
Zcalc<-(p-po)/sqrt((po*qo)/n3)
Zcalc
z1<-qnorm(0.05/2)
z2<-qnorm(1-(0.05/2))
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x >= z2], z2), c(dnorm(x[x >= z2]), 0), col="lightblue")
polygon(c(x[x <= z1], z1), c(dnorm(x[x <= z1]), 0), col="lightblue")
abline(v=Zcalc,col="green",lwd=2)
text(z1, .1,round(z1,2))
text(z2, .1,round(z2,2))
text(Zcalc, .1,round(Zcalc,2))
l3<-qnorm(1-0.025)
Linf3<-po-(l3*sqrt(po*qo/n3))
Linf3
Lsup3<-po+(l3*sqrt(po*qo/n3))
Lsup3
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Intervalo de confianza", lty = 1, lwd = 3, yaxs="i",xaxt="n",yaxt="n") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x <= -l3], -l3), c(dnorm(x[x <= -l3]), 0), col="lightblue")
polygon(c(x[x >= l3], l3), c(dnorm(x[x >= l3]), 0), col="lightblue")
text(l3, .1,paste(round(100*Lsup3,2),"%"))
text(-l3, .1,paste(round(100*Linf3,2),"%"))
x1<-seq(-5,5,0.001)
hist <- dnorm(x1, mean=0, sd=1)
plot(x1, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x1[x1 >= z2], z2), c(dnorm(x1[x1 >= z2]), 0), col="lightblue")
polygon(c(x1[x1 <= z1], z1), c(dnorm(x1[x1 <= z1]), 0), col="lightblue")
abline(v=Zcalc,col="green",lwd=2)
text(z1, .1,round(z1,2))
text(z2, .1,round(z2,2))
text(Zcalc, .1,round(Zcalc,2))
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Intervalo de confianza", lty = 1, lwd = 3, yaxs="i",xaxt="n",yaxt="n") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x <= -l3], -l3), c(dnorm(x[x <= -l3]), 0), col="lightblue")
polygon(c(x[x >= l3], l3), c(dnorm(x[x >= l3]), 0), col="lightblue")
text(l3, .1,paste(round(100*Lsup3,2),"%"))
text(-l3, .1,paste(round(100*Linf3,2),"%"))
#install.packages("modeest")
#install.packages("tidyverse")
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(dplyr)
library(plyr)
library(modeest)
library(tidyverse)
library(ggplot2)
library(kableExtra)
library(ggVennDiagram)
PE<-read_csv("Base.csv")
TabEstresEstresores<-table(PE6$Estres,PE6$Estresor)
TabEstresEstresores[,1:3]%>%
kbl(caption = "Nivel de estrés según el estresor") %>%
kable_classic(full_width = F, html_font = "Cambria")%>%
row_spec(5,  color = "white", background = "#900C3F") %>%
row_spec(4,  color = "white", background = "#C70039") %>%
row_spec(3,  color = "white", background = "#FF5733") %>%
row_spec(2,  color = "white", background = "#FFC300") %>%
row_spec(1, , color = "white", background = "#C7E298")
c2<-c(round(100*TabEstresEstresores[5,]/sum(TabEstresEstresores[5,]),2))
pie(TabEstresEstresores[5,],labels =paste0(c2,"%"),main = "Principales estresores de estudiantes con nivel de estrés alto",col = rainbow(length(TabEstresEstresores[5,])))
legend("topright",legend = colnames(TabEstresEstresores), fill = rainbow(length(TabEstresEstresores[5,])), bty = "o",cex = 0.5,title = "Cursos")
View(PE6)
pairs(X1~Y1)
X1<-PE6$NCursos
Y1<-PE6$HEstudio/7
pairs(X1~Y1)
datosreg<-data.frame("Numeros cursos"=x1 ,"hora de estudio por dia"=y1)
datosreg<-data.frame("Numeros cursos"=X1 ,"Horas de estudio por dia"=Y1)
datosreg<-data.frame("Numeros cursos"=X1 ,"Horas de estudio por dia"=Y1)
datosreg
summary(resultados)
resultados<-lm(datosreg$hora.de.estudio.por.dia ~datosreg$Numeros.cursos,data=datosreg)
resultados<-lm(datosreg$Horas.de.estudio.por.dia ~datosreg$Numeros.cursos,data=datosreg)
summary(resultados)
plot(datosreg$Numeros.cursos,datosreg$Horas.de.estudio.por.dia,xlab="Numero cursos ",ylab="horas de estudio por día")
abline(resultados)
residuos<-rstandard(resultados)
valores.ajustados<-fitted(resultados)
plot(valores.ajustados,residuos)
qqnorm(residuos)
qqline(residuos)
cor(X1,Y1)
m<-head(PE6$HUso,25)
u04<-50
X4<-mean(m)
s4<-sd(m)
n4<-25
T4calc<-(X4-u04)/(s4/sqrt(n4))
T4calc
t4<-qt(1-0.05,n4-1)
x<-seq(-7,7,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x >= t4], t4), c(dnorm(x[x >= t4]), 0), col="lightblue")
abline(v=T3calc,col="green",lwd=2)
x<-seq(-7,7,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x >= t4], t4), c(dnorm(x[x >= t4]), 0), col="lightblue")
abline(v=T4calc,col="green",lwd=2)
text(t4, .1,round(t4,2))
text(T4calc, .1,round(T4calc,2))
NivEstres<-table(PE6$Estres)
(NivEstres[5]+NivEstres[4])/nrow(PE6)
m<-head(PE6$HUso,25)
u04<-50
X4<-mean(m)
s4<-sd(m)
n4<-25
T4calc<-(X4-u04)/(s4/sqrt(n4))
T4calc
t4<-qt(1-0.05,n4-1)
x<-seq(-7,7,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x >= t4], t4), c(dnorm(x[x >= t4]), 0), col="lightblue")
abline(v=T4calc,col="green",lwd=2)
text(t4, .1,round(t4,2))
text(T4calc, .1,round(T4calc,2))
l4<-qt(1-0.025,n3-1)
Linf4<-X4-(l4*s4/sqrt(n4))
Linf4
Lsup4<-X4+(l4*s4/sqrt(n4))
Lsup4
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Intervalo de confianza", lty = 1, lwd = 3, yaxs="i",xaxt="n",yaxt="n") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x <= -l4], -l4), c(dnorm(x[x <= -l4]), 0), col="lightblue")
polygon(c(x[x >= l4], l4), c(dnorm(x[x >= l4]), 0), col="lightblue")
text(l4, .1,round(Lsup4,2))
text(-l4, .1,round(Linf4,2))
#install.packages("modeest")
#install.packages("tidyverse")
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(dplyr)
library(plyr)
library(modeest)
library(tidyverse)
library(ggplot2)
library(kableExtra)
library(ggVennDiagram)
PE<-read_csv("Base.csv")
m<-head(PE6$HUso,25)
u04<-50
X4<-mean(m)
s4<-sd(m)
n4<-25
T4calc<-(X4-u04)/(s4/sqrt(n4))
T4calc
t4<-qt(1-0.05,n4-1)
x<-seq(-7,7,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Regiones de rechazo", lty = 1, lwd = 3, yaxs="i") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x >= t4], t4), c(dnorm(x[x >= t4]), 0), col="lightblue")
abline(v=T4calc,col="green",lwd=2)
text(t4, .1,round(t4,2))
text(T4calc, .1,round(T4calc,2))
l4<-qt(1-0.025,n3-1)
Linf4<-X4-(l4*s4/sqrt(n4))
Linf4
Lsup4<-X4+(l4*s4/sqrt(n4))
Lsup4
x<-seq(-5,5,0.001)
hist <- dnorm(x, mean=0, sd=1)
plot(x, hist, type="l",ylab="",xlab="",main="Intervalo de confianza", lty = 1, lwd = 3, yaxs="i",xaxt="n",yaxt="n") # yaxs="i" localiza en el eje el límite del dato
polygon(c(x[x <= -l4], -l4), c(dnorm(x[x <= -l4]), 0), col="lightblue")
polygon(c(x[x >= l4], l4), c(dnorm(x[x >= l4]), 0), col="lightblue")
text(l4, .1,round(Lsup4,2))
text(-l4, .1,round(Linf4,2))
