install.packages("dplyr")
install.packages("ggplot2")
install.packages("readr")
install.packages("corrplot")
install.packages("fitdistrplus")
library(dplyr)
library(readr)
install.packages("readr")
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(readr)
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
library(readr)
library(readr)
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(readr)
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("readr")
install.packages("corrplot")
install.packages("fitdistrplus")
library(readr)
library(dplyr)
library(rlang)
library(rlang)
library(rlang)
library(rlang)
library(rlang)
library(rlang)
remove.packages(rlang)
install.packages("rlang")
library(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
remove.packages(rlang)
library(rlang)
library(dplyr)
remove.packages(rlang)
remove.packages(dplyr)
library(rlang)
library(dplyr)
remove.packages(rlang)
install.packages("rlang")
install.packages("dplyr")
install.packages("rlang")
install.packages(c("broom", "bslib", "callr", "cli", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dtplyr", "evaluate", "farver", "forcats", "gargle", "generics", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "isoband", "jsonlite", "knitr", "lubridate", "markdown", "modelr", "openssl", "pillar", "plyr", "processx", "ps", "purrr", "readxl", "reprex", "rmarkdown", "rstudioapi", "rvest", "sass", "scales", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "viridisLite", "xfun", "yaml"))
install.packages(c("broom", "bslib", "callr", "cli", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dtplyr", "evaluate", "farver", "forcats", "gargle", "generics", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "isoband", "jsonlite", "knitr", "lubridate", "markdown", "modelr", "openssl", "pillar", "plyr", "processx", "ps", "purrr", "readxl", "reprex", "rmarkdown", "rstudioapi", "rvest", "sass", "scales", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "viridisLite", "xfun", "yaml"))
install.packages(c("broom", "bslib", "callr", "cli", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "digest", "dtplyr", "evaluate", "farver", "forcats", "gargle", "generics", "googlesheets4", "gtable", "haven", "hms", "htmltools", "httr", "isoband", "jsonlite", "knitr", "lubridate", "markdown", "modelr", "openssl", "pillar", "plyr", "processx", "ps", "purrr", "readxl", "reprex", "rmarkdown", "rstudioapi", "rvest", "sass", "scales", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "viridisLite", "xfun", "yaml"))
library(dbplyr)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("readr")
library(dplyr)
library(ggplot2)
library(readr)
library(corrplot)
library(fitdistrplus)
tasks <- c("Plantear propuestas de proyecto","P0", "Reconocer variables", "Recolectar datos", "Describir las variables usando descriptores gráficos","P1","Describir variables aleatorias","Identificar relaciones entre las variables","Modelar problemas probabilísticos","P2")
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2022-08-25","2022-08-29","2022-09-02","2022-09-20", "2022-09-27", "2022-10-06","2022-10-20","2022-11-01","2022-11-08","2022-11-16")),
end.date    = as.Date(c("2022-08-29","2022-09-02","2022-09-20", "2022-09-27", "2022-10-06","2022-10-20","2022-11-01","2022-11-08","2022-11-16","2022-11-18")),
Leyenda = c("Completado", "Completado", "Completado", "Completado","Completado","Completado","Falta","Falta","Falta","Falta")
)
ggplot(dfr, aes(x =start.date, xend= end.date, y=name, yend = name, color=Leyenda)) +
geom_segment(size = 6) +
xlab(NULL) + ylab(NULL)
DF <- read_csv("alimentacion_utec.csv")
DF <- read_csv("alimentacion_utec.csv")
View(DF)
names(DF)
library(readr)
library(readr)
BD <- read_csv("BD")
library(readr)
BD <- read_csv("BD")
library(readr)
BD <- read_csv("BD.csv")
View(BD)
View(BD)
View(BD)
View(BD)
DF <- dplyr::rename(DF,Edad = `1. ¿ Cuál es tu edad?`,
Ciclo = `2. ¿Qué ciclo te encuentras cursando?`,
Peso = `3.¿Cuál es tu peso actual?(kg)`,
Genero = `4. ¿Cuál es tu género?`,
Estatura = `5. ¿Cuál es tu estatura (cm)?`,
Gasto_virtual = `6. Cuando tenías clases semipresenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Gasto_presencial = `7. Cuando tenías clases presenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Cantidad_alimentos_virtual = `8.Cuando tenías clases virtuales o semipresenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Cantidad_alimentos_presencial = `9.Actualmente en las clases presenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Comida_rapída = `10. ¿Qué tan seguido consumes comida rápida?`,
Saciedad_hambre = `11. ¿La saciedad de tus alimentos a lo largo del día es suficiente para rendir correctamente en tus estudios académicos?`,
Tiempo_comer = `12. ¿Cuántos minutos demoras en terminar una comida principal?`,
Desayuno_Almuerzo = `13. Tiempo aproximado entre el consumo de tu desayuno y almuerzo en horas.`,
Almuerzo_Cena = `14. Tiempo aproximado entre el consumo de tu almuerzo y cena en horas.`,
Mayor_consumo = `15.¿ Cuál es el alimento con el mayor  consumo semanal ?`,
Tipo_comida = `16. ¿Qué tipo de comida consumes a diario?`)
View(DF)
DF <- dplyr::rename(DF,Edad = `1. ¿ Cuál es tu edad?`,
Ciclo = `2. ¿Qué ciclo te encuentras cursando?`,
Peso = `3.¿Cuál es tu peso actual?(kg)`,
Genero = `4. ¿Cuál es tu género?`,
Estatura = `5. ¿Cuál es tu estatura (cm)?`,
Gasto_virtual = `6. Cuando tenías clases semipresenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana? `,
Gasto_presencial = `7. Cuando tenías clases presenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Cantidad_alimentos_virtual = `8.Cuando tenías clases virtuales o semipresenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Cantidad_alimentos_presencial = `9.Actualmente en las clases presenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Comida_rapída = `10. ¿Qué tan seguido consumes comida rápida?`,
Saciedad_hambre = `11. ¿La saciedad de tus alimentos a lo largo del día es suficiente para rendir correctamente en tus estudios académicos?`,
Tiempo_comer = `12. ¿Cuántos minutos demoras en terminar una comida principal?`,
Desayuno_Almuerzo = `13. Tiempo aproximado entre el consumo de tu desayuno y almuerzo en horas.`,
Almuerzo_Cena = `14. Tiempo aproximado entre el consumo de tu almuerzo y cena en horas.`,
Mayor_consumo = `15.¿ Cuál es el alimento con el mayor  consumo semanal ?`,
Tipo_comida = `16. ¿Qué tipo de comida consumes a diario?`)
DF <- read_csv("alimentacion_utec.csv")
library(dplyr)
library(ggplot2)
library(readr)
library(corrplot)
library(fitdistrplus)
library(lessR)
library(plotrix)
DF <- read_csv("alimentacion_utec.csv")
names(DF)
DF <- dplyr::rename(DF,Edad = `1. ¿ Cuál es tu edad?`,
Ciclo = `2. ¿Qué ciclo te encuentras cursando?`,
Peso = `3.¿Cuál es tu peso actual?(kg)`,
Genero = `4. ¿Cuál es tu género?`,
Estatura = `5. ¿Cuál es tu estatura (cm)?`,
Gasto_virtual = `6. Cuando tenías clases semipresenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Gasto_presencial = `7. Cuando tenías clases presenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Cantidad_alimentos_virtual = `8.Cuando tenías clases virtuales o semipresenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Cantidad_alimentos_presencial = `9.Actualmente en las clases presenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Comida_rapída = `10. ¿Qué tan seguido consumes comida rápida?`,
Saciedad_hambre = `11. ¿La saciedad de tus alimentos a lo largo del día es suficiente para rendir correctamente en tus estudios académicos?`,
Tiempo_comer = `12. ¿Cuántos minutos demoras en terminar una comida principal?`,
Desayuno_Almuerzo = `13. Tiempo aproximado entre el consumo de tu desayuno y almuerzo en horas.`,
Almuerzo_Cena = `14. Tiempo aproximado entre el consumo de tu almuerzo y cena en horas.`,
Mayor_consumo = `15.¿ Cuál es el alimento con el mayor  consumo semanal ?`,
Tipo_comida = `16. ¿Qué tipo de comida consumes a diario?`)
library(dplyr)
library(ggplot2)
library(readr)
library(corrplot)
library(fitdistrplus)
library(lessR)
library(plotrix)
tasks <- c("Plantear propuestas de proyecto","P0", "Reconocer variables", "Recolectar datos", "Describir las variables usando descriptores gráficos","P1","Describir variables aleatorias","Identificar relaciones entre las variables","Modelar problemas probabilísticos","P2")
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2022-08-25","2022-08-29","2022-09-02","2022-09-20", "2022-09-27", "2022-10-06","2022-10-20","2022-11-01","2022-11-08","2022-11-16")),
end.date    = as.Date(c("2022-08-29","2022-09-02","2022-09-20", "2022-09-27", "2022-10-06","2022-10-20","2022-11-01","2022-11-08","2022-11-16","2022-11-18")),
Leyenda = c("Completado", "Completado", "Completado", "Completado","Completado","Completado","Falta","Falta","Falta","Falta")
)
ggplot(dfr, aes(x =start.date, xend= end.date, y=name, yend = name, color=Leyenda)) +
geom_segment(size = 6) +
xlab(NULL) + ylab(NULL)
DF <- read_csv("alimentacion_utec.csv")
names(DF)
DF <- dplyr::rename(DF,Edad = `1. ¿ Cuál es tu edad?`,
Ciclo = `2. ¿Qué ciclo te encuentras cursando?`,
Peso = `3.¿Cuál es tu peso actual?(kg)`,
Genero = `4. ¿Cuál es tu género?`,
Estatura = `5. ¿Cuál es tu estatura (cm)?`,
Gasto_virtual = `6. Cuando tenías clases semipresenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Gasto_presencial = `7. Cuando tenías clases presenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Cantidad_alimentos_virtual = `8.Cuando tenías clases virtuales o semipresenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Cantidad_alimentos_presencial = `9.Actualmente en las clases presenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Comida_rapída = `10. ¿Qué tan seguido consumes comida rápida?`,
Saciedad_hambre = `11. ¿La saciedad de tus alimentos a lo largo del día es suficiente para rendir correctamente en tus estudios académicos?`,
Tiempo_comer = `12. ¿Cuántos minutos demoras en terminar una comida principal?`,
Desayuno_Almuerzo = `13. Tiempo aproximado entre el consumo de tu desayuno y almuerzo en horas.`,
Almuerzo_Cena = `14. Tiempo aproximado entre el consumo de tu almuerzo y cena en horas.`,
Mayor_consumo = `15.¿ Cuál es el alimento con el mayor  consumo semanal ?`,
Tipo_comida = `16. ¿Qué tipo de comida consumes a diario?`)
names(DF)
sum(is.na(DF))
DF  <- head(DF[,2:16])
mode <- function(x) {
return(as.numeric(names(which.max(table(x)))))}
ggplot(DF) +
aes(x = Tipo_comida) +
geom_bar(fill = "#4682B4") +
labs(
x = "Comidas en la Universidad",
y = "Encuestados",
title = "Comidas en la Universidad"
) +
ggthemes::theme_base()
library(dplyr)
library(ggplot2)
library(readr)
library(corrplot)
library(fitdistrplus)
library(lessR)
library(plotrix)
tasks <- c("Plantear propuestas de proyecto","P0", "Reconocer variables", "Recolectar datos", "Describir las variables usando descriptores gráficos","P1","Describir variables aleatorias","Identificar relaciones entre las variables","Modelar problemas probabilísticos","P2")
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2022-08-25","2022-08-29","2022-09-02","2022-09-20", "2022-09-27", "2022-10-06","2022-10-20","2022-11-01","2022-11-08","2022-11-16")),
end.date    = as.Date(c("2022-08-29","2022-09-02","2022-09-20", "2022-09-27", "2022-10-06","2022-10-20","2022-11-01","2022-11-08","2022-11-16","2022-11-18")),
Leyenda = c("Completado", "Completado", "Completado", "Completado","Completado","Completado","Falta","Falta","Falta","Falta")
)
ggplot(dfr, aes(x =start.date, xend= end.date, y=name, yend = name, color=Leyenda)) +
geom_segment(size = 6) +
xlab(NULL) + ylab(NULL)
DF <- read_csv("alimentacion_utec.csv")
names(DF)
DF <- dplyr::rename(DF,Edad = `1. ¿ Cuál es tu edad?`,
Ciclo = `2. ¿Qué ciclo te encuentras cursando?`,
Peso = `3.¿Cuál es tu peso actual?(kg)`,
Genero = `4. ¿Cuál es tu género?`,
Estatura = `5. ¿Cuál es tu estatura (cm)?`,
Gasto_virtual = `6. Cuando tenías clases semipresenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Gasto_presencial = `7. Cuando tenías clases presenciales, aproximadamente, ¿Cuál es el monto que gastabas en comida a la semana?`,
Cantidad_alimentos_virtual = `8.Cuando tenías clases virtuales o semipresenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Cantidad_alimentos_presencial = `9.Actualmente en las clases presenciales, aproximadamente, ¿Cuál era la cantidad de alimentos que consumía a la semana?`,
Comida_rapída = `10. ¿Qué tan seguido consumes comida rápida?`,
Saciedad_hambre = `11. ¿La saciedad de tus alimentos a lo largo del día es suficiente para rendir correctamente en tus estudios académicos?`,
Tiempo_comer = `12. ¿Cuántos minutos demoras en terminar una comida principal?`,
Desayuno_Almuerzo = `13. Tiempo aproximado entre el consumo de tu desayuno y almuerzo en horas.`,
Almuerzo_Cena = `14. Tiempo aproximado entre el consumo de tu almuerzo y cena en horas.`,
Mayor_consumo = `15.¿ Cuál es el alimento con el mayor  consumo semanal ?`,
Tipo_comida = `16. ¿Qué tipo de comida consumes a diario?`)
names(DF)
sum(is.na(DF))
mode <- function(x) {
return(as.numeric(names(which.max(table(x)))))}
ggplot(DF) +
aes(x = Tipo_comida) +
geom_bar(fill = "#4682B4") +
labs(
x = "Comidas en la Universidad",
y = "Encuestados",
title = "Comidas en la Universidad"
) +
ggthemes::theme_base()
table(DF$Tipo_comida)
x<-table(DF$Cantidad_alimentos_presencial)
color=c("white","blue","orange","green","red","yellow","purple","black")
barplot(x,xlab="cantidad de alimentos diarios",ylab="Frecuencia",main="Cantidad diaria de alimentos consumidos(clases presenciales)",col=color)
z<-table(DF$Cantidad_alimentos_virtual)
color=c("white","blue","orange","green")
barplot(z,xlab="cantidad de alimentos diarios",ylab="Frecuencia",main="Cantidad diaria de alimentos consumidos(clases virtuales)",col=color)
k<-(DF$Cantidad_alimentos_presencial)-(DF$Cantidad_alimentos_virtual)
DF$Diferencia_comidas<-k
k<-table(k)
color=c("white","blue","orange","green","red","yellow","purple","black")
barplot(k,xlab="cantidad de alimentos",ylab="Frecuencia",main="Variación entre las comidas consumidas(presencial y virtual)",col=color)
print("Media o Promedio")
round(mean(DF$Estatura),2)
print("Mediana")
round(median(DF$Estatura),2)
print("Sd")
round(sd(DF$Estatura),2)
print("Media o Promedio")
round(mean(DF$`Peso`),2)
print("Mediana")
round(median(DF$`Peso`),2)
print("Sd")
round(sd(DF$`Peso`),2)
DF$IMC<-round((DF$`Peso`)/(DF$Estatura * 10^-2)^2,2)
boxplot(DF$IMC,ylab="IMC")
print("Media o Promedio")
round(mean(DF$IMC),2)
print("Mediana")
round(median(DF$IMC),2)
print("Sd")
round(sd(DF$IMC),2)
hist(DF$Estatura,
col = "yellow",
border = "black",
prob = FALSE,
xlab = "estatura(cm)",
main = "Histograma de la estatura de estudiantes"
)
abline(v = mean(DF$Estatura)  , col ="royalblue", lwd = 2)
abline(v = median(DF$Estatura), col = "red"     , lwd = 2)
legend(x = "topright", c( "Promedio", "Mediana"), col = c( "royalblue", "red"), lwd = c(2, 2))
hist(DF$`Peso`,
col = "orange",
border = "black",
prob = FALSE,
xlab = "Kilogramos(kg)",
main = "Histograma del peso de los alumnos"
)
abline(v = mean(DF$`Peso`)  , col ="royalblue", lwd = 2)
abline(v = median(DF$`Peso`), col = "red"     , lwd = 2)
legend(x = "topright", c( "Promedio", "Mediana"), col = c( "royalblue", "red"), lwd = c(2, 2))
T_comida_r <- table(DF$Comida_rapída)
PieChart(T_comida_r, hole = 0 ,values= "%", data = DF$Comida_rapída, main="Consumo de cómida rápida",
fill = c("brown","blue","red","pink","green") )
T_comida_r <- table(DF$Mayor_consumo)
PieChart(T_comida_r, hole = 0 ,values= "%", data = DF$Comida_rapída, main="Consumo de cómida rápida",
fill = c("brown","blue","red","pink","green","skyblue") )
color = c("red", "green")
barplot(table(DF$Saciedad_hambre), xlab = "Saciedad", ylab = "Frecuencias",main = "Saciedad de los estudiantes con su rutina alimentaria", col = color)
plot(DF$Gasto_presencial~DF$Cantidad_alimentos_presencial,main="Relación entre el gasto y la cantidad de alimentos(presencial)",xlab="Cantidad de alimentos",ylab="Presupuesto diario")
print("Covarianza")
cov(DF$Cantidad_alimentos_presencial,DF$Gasto_presencial)
print("Correlación")
cor(DF$Cantidad_alimentos_presencial,DF$Gasto_presencial)
g = ggplot(DF, aes(DF$Desayuno_almuerzo, fill=DF$Saciedad_hambre) ) +
labs(title = "Grafica de la saciedad del hambre con el tiempo entre el desayuno y almuerzo")+ylab("") +
theme(plot.title = element_text(size = rel(2), colour = "blue"))
g+geom_bar(position="dodge") + scale_fill_manual(values = alpha(c("orange", "blue"), 1)) +
theme(axis.title.x = element_text(face="bold", size=10))
T_comida_r <- table(DF$Mayor_consumo)
PieChart(T_comida_r, hole = 0 ,values= "%", data = DF$Comida_rapída, main="Alimento que más se consume",
fill = c("brown","blue","red","pink","green","skyblue") )
g = ggplot(DF, aes(DF$Desayuno_almuerzo, fill=DF$Saciedad_hambre) ) +
labs(title = "Grafica de la saciedad del hambre con el tiempo entre el desayuno y almuerzo")+ylab("") +
theme(plot.title = element_text(size = rel(2), colour = "blue"))
g+geom_bar(position="dodge") + scale_fill_manual(values = alpha(c("orange", "blue"), 1)) +
theme(axis.title.x = element_text(face="bold", size=10))
glimpse(DF)
g = ggplot(DF, aes(DF$desayuno_almuerzo, fill=DF$saciedad_hambre) ) +
labs(title = "Grafica de la saciedad del hambre con el tiempo entre el desayuno y almuerzo")+ylab("") +
theme(plot.title = element_text(size = rel(2), colour = "blue"))
g+geom_bar(position="dodge") + scale_fill_manual(values = alpha(c("orange", "blue"), 1)) +
theme(axis.title.x = element_text(face="bold", size=10))
g = ggplot2::ggplot(DF, aes(DF$Desayuno_almuerzo, fill=DF$Saciedad_hambre) ) +
labs(title = "Grafica de la saciedad del hambre con el tiempo entre el desayuno y almuerzo")+ylab("") +
theme(plot.title = element_text(size = rel(2), colour = "blue"))
g+geom_bar(position="dodge") + scale_fill_manual(values = alpha(c("orange", "blue"), 1)) +
theme(axis.title.x = element_text(face="bold", size=10))
g = ggplot2::ggplot(DF, aes(DF$Desayuno_almuerzo, fill=DF$Saciedad_hambre) ) +
labs(title = "Grafica de la saciedad del hambre con el tiempo entre el desayuno y almuerzo")+ylab("") +
theme(plot.title = element_text(size = rel(2), colour = "blue"))
g = ggplot2::ggplot(DF, aes(DF$Desayuno_almuerzo, fill=DF$Saciedad_hambre) ) +
labs(title = "Grafica de la saciedad del hambre con el tiempo entre el desayuno y almuerzo")+ylab("") +
theme(plot.title = element_text(size = rel(2), colour = "blue"))
g
g = ggplot2::ggplot(DF, aes(DF$Desayuno_almuerzo, fill=DF$Saciedad_hambre) ) +
labs(title = "Grafica de la saciedad del hambre con el tiempo entre el desayuno y almuerzo")+ylab("") +
theme(plot.title = element_text(size = rel(2), colour = "blue"))
g+geom_bar(position="dodge") + scale_fill_manual(values = alpha(c("orange", "blue"), 1)) +
theme(axis.title.x = element_text(face="bold", size=10))
