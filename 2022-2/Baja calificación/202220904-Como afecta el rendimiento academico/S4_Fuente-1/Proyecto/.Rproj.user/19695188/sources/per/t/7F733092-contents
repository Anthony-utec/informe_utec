---
output:
  html_notebook:
    toc: yes
    toc_float:
      collapsed: no
      smooth_scroll: true
    number_sections: yes
---

<FONT FACE="impact" SIZE=6 COLOR="blue"> Número de grupo:  4 </FONT>

![Figura 1: Extraído de https://es.m.wikipedia.org/wiki/Archivo:UTEC.jpg](UTEC.jpg){width='500px'}

# <b style = 'color : black;'><FONT FACE="roman">Integrantes</FONT></b>
```{r, echo=FALSE}
library(readr)
InteCod <- read_delim("IntegranteCodigo.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(InteCod)
```

```{r, echo=FALSE}
require(knitr)
kable_styling(kable(head(InteCod,4),
                    booktabs = TRUE,
                    digits = 3, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "white", background = "black") %>%
  column_spec(1, bold = T, color = "blue")
```
# <b style = 'color : black;'><FONT FACE="roman">Introduccion</FONT></b>

## Antecedentes
Palacio y Martinez determinaron la relación entre el Rendimiento Académico (RA) con la salud mental en los estudiantes universitarios de la Simón Bolívar. Asimismo, los resultados principales indican que el RA se correlaciona negativamente con el estado de ansiedad. Además, se encontraron promedios académicos significativamente más altos en los estudiantes que no han perdido semestre alguno y que cursan todas las asignaturas proyectadas para el mismo semestre. Con el resto de variables de estudio, no se encontraron diferencias significativas. (Palacio & Martínez, 2007: pág. 113).

Morales, Silva & Vasquez, por otra parte, encontraron que la  salud  mental  influenciada  por  el  Covid impacta negativamente  a  nivel  del  rendimiento académico en los estudiantes. Por la que se concluye que debe darse un mayor apoyo por parte de sus padres, docentes y autoridades universitarias, para disminuir el impacto en la salud y el rendimiento académico de los jóvenes universitarios.(Morales, Silva y Vasquez, 2021: pág.119).

## Relevancia
Es fundamental el estudio de la salud mental porque se puede obtener alguna relación entre el rendimiento académico y su estado mental del alumno de UTEC. De este modo, describir los tipos de trastornos depresivos como la ansiedad, la depresión y el estrés que padecen los estudiantes y perjudica su desarrollo académico. Todo ello, para poder abordar este tema de forma específica y ayudar a aquellos estudiantes que sufren de dicha depresión clínica.

## Planificación

*Instalación de paquetes necesarios:*
```{r}
install.packages("readr")
install.packages("Rtools")
install.packages("DescTools")
install.packages("dplyr")
install.packages("car")
install.packages("remotes")
remotes::install_github("giocomai/ganttrify")
install.packages("ggplot")
install.packages("rriskDistributions")
```

*Abrir librerías:*
```{r}
library(readr)
library("DescTools")
library(car)
library(dplyr)
library(remotes)
library(ganttrify)
library(readr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(tidyverse)
library(boot)
library(rriskDistributions)
```

*Importar data:*


<center>
![Figura 1: ](Imagen gand.png){width='500px'}
</center>


# <b style = 'color : black;'><FONT FACE="roman">Datos</FONT></b>

## Proceso de recolección de datos
Los datos se obtuvieron mediante una encuesta realizada por el grupo y aprobada por la profesora acorde a los objetivos propuestos inicialmente.

Consideramos importante restringir varias respuestas de la encuesta para que la información obtenida sea la adecuada, lo cual se expone en la tabla **variables**. Al iniciar el recojo de información, se lanzó la encuesta que fue compartida entre los contactos cercanos de cada integrante del grupo. Además, se mejoró la encuesta con base en la retroalimentación recibida por los encuestados en aspectos como:  
Si bien es cierto que al inicio del lanzamiento de la encuesta, no obtuvimos más de la mitad de observaciones requeridas, se usó la estrategia de abordar a los alumnos presencialmente (ya que, hasta ese momento, solo se compartía de forma virtual) y darles a cada uno un incentivo (chupetín) al terminar. De esta forma, en solo 2 días obtuvimos el 75% de las observaciones requeridas; asimismo, se optó por superar el límite establecido para obtener resultados más precisos.

## Población, muestra y muestreo
La población de estudio es la comunidad de UTEC y la unidad muestral serán los estudiantes matriculados en el 2022-02. Asimismo, luego de recolectar todas las observaciones, el tamaño de la muestra es de 251 estudiantes. El tipo de muestreo es aleatorio simple (MAS) ,ya que nuestra muestra será escogida al azar. Del mismo modo, la representatividad consta de estudiantes de diferentes ciclos de UTEC lo que nos permitirá realizar un análisis más general

<center>
![Figura 2: Extraído de https://utec.edu.pe/noticias/utec-ofrece-sus-alumnos-orientacion-y-consejeria-universitaria](alumnos.jpg){width='500px'}
</center>

## Variables
A continuación, se expone en una tabla las principales características y todo lo relevante respecto a las variables recolectadas mediante la encuesta.

```{r, echo=FALSE}
install.packages("kableExtra")
```

```{r, echo=FALSE}
library(knitr)
library(kableExtra)
```

```{r,echo=FALSE}
library(readr)
VR <- read_delim("VariablesRepo.csv", delim = ";", 
    escape_double = FALSE, trim_ws = TRUE)
View(VR)
```


```{r,echo=FALSE}
require(knitr)
kable_styling(kable(head(VR,17),
                    booktabs = TRUE,
                    caption = "Tabla 1: Variables. Elaboración propia.",
                    digits = 3, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "white", background = "brown") %>%
  column_spec(1, bold = T, color = "orange")
```

# <b style = 'color : black;'><FONT FACE="roman">Limpieza de datos</FONT></b>

Para limpiar nuestra base de datos, utilizamos:
- Se optó por *eliminar* los datos de prueba, es decir, las observaciones que se rellenaron para probarla efectividad de la encuesta.
- Se optó por *contactar a las personas que rellenaron de forma repetida la encuesta* para verificar con qué datos nos quedábamos finalmente (el reconocimiento se hizo mediante los correos).
- La base de datos original contenía 56 variables, se optó por recodificar y crear variables adicionales que representen a todas las variables que pertenecían a Cuestionario 1, Cuestionario 2, Cuestionario 3 y Cuestionario 4. La base de datos final contiene _ variables.


**Código para importar datos**

## Importacion el dataset
```{r}
library(readxl)
D <- read_excel("D.xlsx")
```

*Cambiar el nombre al archivo*
```{r}
DF <- D
```

*Revisar la data*
Con `ncol`, `nrow` y `dim` podemos tener las dimensiones de la base de datos (filas y columnas)
```{r}
ncol(DF) # leer el número de columnas / variables
nrow(DF) # leer la cantidad de filas / obervaciones
dim(DF) # Devuelve las dimensiones de la base de datos
```
```{r}
summary(DF) # Resumen del tipo de variable de la base de datos
```

*Quitar variables inservibles -> No necesitamos el correo ni la hora de llenado*
```{r}
DF %>% select(-'Timestamp') -> DF
DF %>% select(-'Email Address') -> DF
```


*Usaremos el comando $colnames$ para cambiar el nombre de las columnas*
```{r}
colnames(DF)[1] ="Edad"
colnames(DF)[2] ="Distrito"
colnames(DF)[3] ="Carrera"
colnames(DF)[4] ="Ciclo"
colnames(DF)[5] ="Sexo"
colnames(DF)[6] ="Ocupacion"
colnames(DF)[7] ="Cantidad_de_cursos"
colnames(DF)[8] ="Horas_de_sueño"
colnames(DF)[9] ="Promedio_ponderado"
colnames(DF)[10] ="Horas_de_estudio"
colnames(DF)[11] ="C_P"
colnames(DF)[12] ="C1_P1"
colnames(DF)[13] ="C1_P2"
colnames(DF)[14] ="C1_P3"
colnames(DF)[15] ="C1_P4"
colnames(DF)[16] ="C1_P5"
colnames(DF)[17] ="C1_P6"
colnames(DF)[18] ="C1_P7"
colnames(DF)[19] ="C2_P1"
colnames(DF)[20] ="C2_P2"
colnames(DF)[21] ="C2_P3"
colnames(DF)[22] ="C2_P4"
colnames(DF)[23] ="C2_P5"
colnames(DF)[24] ="C2_P6"
colnames(DF)[25] ="C2_P7"
colnames(DF)[26] ="C2_P8"
colnames(DF)[27] ="C2_P9"
colnames(DF)[28] ="C2_P10"
colnames(DF)[29] ="C2_P11"
colnames(DF)[30] ="C2_P12"
colnames(DF)[31] ="C2_P13"
colnames(DF)[32] ="C2_P14"
colnames(DF)[33] ="C2_P15"
colnames(DF)[34] ="C2_P16"
colnames(DF)[35] ="C2_P17"
colnames(DF)[36] ="C2_P18"
colnames(DF)[37] ="C2_P19"
colnames(DF)[38] ="C2_P20"
colnames(DF)[39] ="Nivel_propio_de_estres"
colnames(DF)[40] ="C3_P1"
colnames(DF)[41] ="C3_P2"
colnames(DF)[42] ="C3_P3"
colnames(DF)[43] ="C3_P4"
colnames(DF)[44] ="C3_P5"
colnames(DF)[45] ="C3_P6"
colnames(DF)[46] ="C3_P7"
colnames(DF)[47] ="C4_P1"
colnames(DF)[48] ="C4_P2"
colnames(DF)[49] ="C4_P3"
colnames(DF)[50] ="C4_P4"
colnames(DF)[51] ="C4_P5"
colnames(DF)[52] ="C4_P6"
colnames(DF)[53] ="C4_P7"
colnames(DF)[54] ="C4_P8"

```

## Datos completos e incompletos
```{r}
sum(is.na(DF)) #is.na() -> este comando detecta los datos incompletos; sum -> sumar
#Sumar la cantidad de datos incompletos
sum(!is.na(DF)) #!is.na() -> es la negación de is.na, es decir, indica los datos completos. 
```

*Eliminar datos de encuesta anterior*

```{r}
DF <- DF[-c(1, 2, 3, 36, 133), ]
```


```{r}
sum(is.na(DF)) #is.na() -> este comando detecta los datos incompletos; sum -> sumar
```


## Estandarizando las variables 
**De una cualitativa a una cuantitativa:**
```{r}
unique(DF$C1_P1) #Permite conocer todas las formas que han respondido para la variable periodo
```
```{r}
DF %>% mutate(C1_P1=
       ifelse(C1_P1 == "(N) Nunca" , "0",
       ifelse(C1_P1 == "(S) Siempre" , "5",
       ifelse(C1_P1 == "(AV) Algunas veces" , "3",
       ifelse(C1_P1 == "(CN) Casi Nunca" , "2",
       ifelse(C1_P1 == "(CS) Casi siempre" , "4",
       ifelse(C1_P1 == "(RV) Rara Vez" , "1", C1_P1)))))))->DF
```

```{r}
DF %>% mutate(C1_P2=
       ifelse(C1_P2 == "(N) Nunca" , "0",
       ifelse(C1_P2 == "(S) Siempre" , "5",
       ifelse(C1_P2 == "(AV) Algunas veces" , "3",
       ifelse(C1_P2 == "(CN) Casi Nunca" , "2",
       ifelse(C1_P2 == "(CS) Casi siempre" , "4",
       ifelse(C1_P2 == "(RV) Rara Vez" , "1", C1_P2)))))))->DF
```

```{r}
DF %>% mutate(C1_P3=
       ifelse(C1_P3 == "(N) Nunca" , "0",
       ifelse(C1_P3 == "(S) Siempre" , "5",
       ifelse(C1_P3 == "(AV) Algunas veces" , "3",
       ifelse(C1_P3 == "(CN) Casi Nunca" , "2",
       ifelse(C1_P3 == "(CS) Casi siempre" , "4",
       ifelse(C1_P3 == "(RV) Rara Vez" , "1", C1_P3)))))))->DF
```

```{r}
DF %>% mutate(C1_P4=
       ifelse(C1_P4 == "(N) Nunca" , "0",
       ifelse(C1_P4 == "(S) Siempre" , "5",
       ifelse(C1_P4 == "(AV) Algunas veces" , "3",
       ifelse(C1_P4 == "(CN) Casi Nunca" , "2",
       ifelse(C1_P4 == "(CS) Casi siempre" , "4",
       ifelse(C1_P4 == "(RV) Rara Vez" , "1", C1_P4)))))))->DF
```

```{r}
DF %>% mutate(C1_P5=
       ifelse(C1_P5 == "(N) Nunca" , "0",
       ifelse(C1_P5 == "(S) Siempre" , "5",
       ifelse(C1_P5 == "(AV) Algunas veces" , "3",
       ifelse(C1_P5 == "(CN) Casi Nunca" , "2",
       ifelse(C1_P5 == "(CS) Casi siempre" , "4",
       ifelse(C1_P5 == "(RV) Rara Vez" , "1", C1_P5)))))))->DF
```

```{r}
DF %>% mutate(C1_P6=
       ifelse(C1_P6 == "(N) Nunca" , "0",
       ifelse(C1_P6 == "(S) Siempre" , "5",
       ifelse(C1_P6 == "(AV) Algunas veces" , "3",
       ifelse(C1_P6 == "(CN) Casi Nunca" , "2",
       ifelse(C1_P6 == "(CS) Casi siempre" , "4",
       ifelse(C1_P6 == "(RV) Rara Vez" , "1", C1_P6)))))))->DF
```

```{r}
DF %>% mutate(C1_P7=
       ifelse(C1_P7 == "(N) Nunca" , "0",
       ifelse(C1_P7 == "(S) Siempre" , "5",
       ifelse(C1_P7 == "(AV) Algunas veces" , "3",
       ifelse(C1_P7 == "(CN) Casi Nunca" , "2",
       ifelse(C1_P7 == "(CS) Casi siempre" , "4",
       ifelse(C1_P7 == "(RV) Rara Vez" , "1", C1_P7)))))))->DF
```

```{r}
unique(DF$C_P) #Permite conocer todas las formas que han respondido para la variable periodo
```
```{r}
DF %>% mutate(C2_P1=
       ifelse(C2_P1 == "Si" , "5", C_P))->DF
```

```{r}
DF %>% mutate(C2_P1=
       ifelse(C2_P1 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P1 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P1 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P1 == "Algunas veces / Poco (3-4días)" , "3", C2_P1)))))->DF
```

```{r}
DF %>% mutate(C2_P2=
       ifelse(C2_P2 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P2 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P2 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P2 == "Algunas veces / Poco (3-4días)" , "3", C2_P2)))))->DF
```


```{r}
DF %>% mutate(C2_P3=
      ifelse(C2_P3 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P3 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P3 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P3 == "Algunas veces / Poco (3-4días)" , "3", C2_P3)))))->DF
```



```{r}
DF %>% mutate(C2_P4=
      ifelse(C2_P4 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P4 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P4 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P4 == "Algunas veces / Poco (3-4días)" , "3", C2_P4)))))->DF
```


```{r}
DF %>% mutate(C2_P5=
      ifelse(C2_P5 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P5 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P5 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P5 == "Algunas veces / Poco (3-4días)" , "3", C2_P5)))))->DF
```


```{r}
DF %>% mutate(C2_P6=
      ifelse(C2_P6 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P6 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P6 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P6 == "Algunas veces / Poco (3-4días)" , "3", C2_P6)))))->DF
```


```{r}
DF %>% mutate(C2_P7=
      ifelse(C2_P7 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P7 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P7 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P7 == "Algunas veces / Poco (3-4días)" , "3", C2_P7)))))->DF
```


```{r}
DF %>% mutate(C2_P8=
      ifelse(C2_P8 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P8 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P8 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P8 == "Algunas veces / Poco (3-4días)" , "3", C2_P8)))))->DF
```


```{r}
DF %>% mutate(C2_P9=
      ifelse(C2_P9 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P9 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P9 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P9 == "Algunas veces / Poco (3-4días)" , "3", C2_P9)))))->DF
```


```{r}
DF %>% mutate(C2_P10=
      ifelse(C2_P10 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P10 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P10 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P10 == "Algunas veces / Poco (3-4días)" , "3", C2_P10)))))->DF
```


```{r}
DF %>% mutate(C2_P11=
      ifelse(C2_P11 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P11 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P11 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P11 == "Algunas veces / Poco (3-4días)" , "3", C2_P11)))))->DF
```


```{r}
DF %>% mutate(C2_P12=
      ifelse(C2_P12 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P12 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P12 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P12 == "Algunas veces / Poco (3-4días)" , "3", C2_P12)))))->DF
```


```{r}
DF %>% mutate(C2_P13=
      ifelse(C2_P13 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P13 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P13 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P13 == "Algunas veces / Poco (3-4días)" , "3", C2_P13)))))->DF
```


```{r}
DF %>% mutate(C2_P14=
      ifelse(C2_P14 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P14 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P14 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P14 == "Algunas veces / Poco (3-4días)" , "3", C2_P14)))))->DF

```


```{r}
DF %>% mutate(C2_P15=
      ifelse(C2_P15 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P15 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P15 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P15 == "Algunas veces / Poco (3-4días)" , "3", C2_P15)))))->DF
```


```{r}
DF %>% mutate(C2_P16=
      ifelse(C2_P16 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P16 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P16 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P16 == "Algunas veces / Poco (3-4días)" , "3", C2_P16)))))->DF

```

```{r}
DF %>% mutate(C2_P17=
      ifelse(C2_P17 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P17 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P17 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P17 == "Algunas veces / Poco (3-4días)" , "3", C2_P17)))))->DF
```

```{r}
DF %>% mutate(C2_P18=
      ifelse(C2_P18 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P18 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P18 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P18 == "Algunas veces / Poco (3-4días)" , "3", C2_P18)))))->DF
```

```{r}
DF %>% mutate(C2_P19=
      ifelse(C2_P19 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P19 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P19 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P19 == "Algunas veces / Poco (3-4días)" , "3", C2_P19)))))->DF
```


```{r}
DF %>% mutate(C2_P20=
      ifelse(C2_P20 == "Muy poco (1-2 días)" , "2",
       ifelse(C2_P20 == "Casi nunca / Nunca (menos de 1 día)" , "1",
       ifelse(C2_P20 == "Casi siempre/ Siempre (5-7 días)" , "4",
       ifelse(C2_P20 == "Algunas veces / Poco (3-4días)" , "3", C2_P20)))))->DF
```


*Convertir la variable cuantitativa en una cualitativa*
```{r}
DF %>% mutate(Sexo=
       ifelse(Sexo == "1" , "Masculino",
       ifelse(Sexo == "0" , "Femenino", Sexo)))-> DF
```



*Corregir la variable Promedio ponderado*
Ya tenemos los datos todos completo con numeros, pero aun no lo esta reconociendo como tal, entonces agregaremos la función as.numeric y ya podremos encontrar los indicadores de resumen de la variable.

```{r}
DF$Promedio_ponderado= as.numeric(DF$Promedio_ponderado)
```


*Corregir la Horas de estudio a la semana*
```{r}
DF %>% mutate(
  Horas_de_estudio = ifelse(Horas_de_estudio <= 10, 7*Horas_de_estudio, Horas_de_estudio)
) -> DF
range(DF$Horas_de_estudio, na.rm=TRUE)
```
```{r}
DF %>% mutate(
  Horas_de_sueño = ifelse(Horas_de_sueño < 3, 2*Horas_de_sueño, Horas_de_sueño)
) -> DF
range(DF$Horas_de_sueño, na.rm=TRUE)
```

*Corregir la datos del test*
```{r}
DF$Horas_de_estudio=as.integer(DF$Horas_de_estudio)
DF$C1_P1=as.numeric(DF$C1_P1)
DF$C1_P2=as.numeric(DF$C1_P2)
DF$C1_P3=as.numeric(DF$C1_P3)
DF$C1_P4=as.numeric(DF$C1_P4)
DF$C1_P5=as.numeric(DF$C1_P5)
DF$C1_P6=as.numeric(DF$C1_P6)
DF$C1_P7=as.numeric(DF$C1_P7)

DF$C2_P1=as.numeric(DF$C2_P1)
DF$C_P=as.numeric(DF$C_P)
DF$C2_P2=as.numeric(DF$C2_P2)
DF$C2_P3=as.numeric(DF$C2_P3)
DF$C2_P4=as.numeric(DF$C2_P4)
DF$C2_P5=as.numeric(DF$C2_P5)
DF$C2_P6=as.numeric(DF$C2_P6)
DF$C2_P7=as.numeric(DF$C2_P7)
DF$C2_P8=as.numeric(DF$C2_P8)
DF$C2_P9=as.numeric(DF$C2_P9)
DF$C2_P10=as.numeric(DF$C2_P10)
DF$C2_P11=as.numeric(DF$C2_P11)
DF$C2_P12=as.numeric(DF$C2_P12)
DF$C2_P13=as.numeric(DF$C2_P13)
DF$C2_P14=as.numeric(DF$C2_P14)
DF$C2_P15=as.numeric(DF$C2_P15)
DF$C2_P16=as.numeric(DF$C2_P16)
DF$C2_P17=as.numeric(DF$C2_P17)
DF$C2_P18=as.numeric(DF$C2_P18)
DF$C2_P19=as.numeric(DF$C2_P19)
DF$C2_P20=as.numeric(DF$C2_P20)

```


*Armado de las tres filas del cuestionario, C1, C2, C3 Y C4.*
```{r}
C1<- transmute(DF, C1 = C1_P1+C1_P2+ C1_P3+ C1_P4+ C1_P4+ C1_P5+ C1_P6+ C1_P7)
```


```{r}
C2<- transmute(DF, C02 = C_P+C2_P1+C2_P2+ C2_P3+ C2_P4+ C2_P5+ C2_P6+ C2_P7+C2_P8+C2_P9+C2_P10+C2_P11+C2_P12+C2_P13+C2_P14+C2_P15+C2_P16+C2_P17+C2_P18+C2_P19+C2_P20)
```

```{r}
C3<- transmute(DF, C3 = C3_P1+C3_P2+ C3_P3+ C3_P4+ C3_P5+ C3_P6+ C3_P7)
```

```{r}
C4<- transmute(DF, C4 = C4_P1+C4_P2+ C4_P3+ C4_P4)
```


*Nivel de estrés que presenta el estudiante según el test*

```{r}
C_total<- transmute(DF, C_total= C1+C2+C3+C4)
```

```{r}
Nivel_de_estres_clinico <- transmute(DF, C_total= C_total)
```

## Tabla de los niveles de estrés

```{r, echo=FALSE}
NiveInt <- read_delim("NivelesdeestresINTERVALO.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(NiveInt)
```

```{r, echo=FALSE}
require(knitr)
kable_styling(kable(head(NiveInt,4),
                    booktabs = TRUE,
                    caption = "Tabla 2: Tipos de niveles de estrés. Elaboración propia",
                    digits = 3, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "white", background = "black") %>%
  column_spec(1, bold = T, color = "green")
```
![Figura 3: Extraído de https://twitter.com/pacomailkickfre/status/1470097225170800644](Nivel de estres.jpg){width='500px'}

## Tabla de datos unificada con el nivel de estres

```{r}
DF<- cbind(DF,Nivel_de_estres_clínico=Nivel_de_estres_clinico)
```


```{r}
NE<- transmute(DF, NE= C1+C2+C3+C4)
```


```{r}
colnames(DF)[55]="Nivel_de_estres_clínico"
```


```{r}
DF<- cbind(DF,Tipo_de_estres=Nivel_de_estres_clinico)
```

```{r}
DF %>% mutate(C_total=

         ifelse((C_total>37 & C_total<=76),"Poco estres",


         ifelse((C_total>76 & C_total<=114),"Estres positivo",


         ifelse((C_total>114 & C_total<=152),"Demasiado estres",


         ifelse((C_total>152 & C_total<=190),"Burnout", C_total

         )))))-> DF
```


## Convertir ctotal y Nivel de estres clínico en variables


```{r}
DL$NIVEL_DE_ESTRES=as.character(DL$NIVEL_DE_ESTRES)
```

```{r}
DL$Nivel_de_estres_clínico= as.numeric(DL$Nivel_de_estres_clínico)
```


```{r}
DL <- DF
```

```{r}
DL <- DL[-c(35), ]
```

```{r}
which.max(DL$Horas_de_estudio)
```

```{r}
DL$Horas_de_estudio[130]
```

```{r}
DL <- DL[-c(130),]
```

```{r}
DL <- DL
view(DL)
```


```{r}
NE<- C1+C2+C3+C4
```

```{r}
DL$NIVEL_DE_ESTRES<-DL$C_total;
colnames(DL)
```
```{r}
DL<-DL[-56]
```



# <b style = 'color : black;'><FONT FACE="roman">Análisis descriptivo</FONT></b>


## Grafico de frecuencia de alumnos por edad y género
```{r, echo=FALSE}
library(plotrix)
histStack(DL$Edad,DL$Sexo,main="Gráfica 1. Frecuencia de alumnos por edad y género",legend.pos="topright",xlab = "Edad")
```

## Gráfica de distribución de alumnos por carrera
```{r, echo=FALSE}
barplot(table(DL$Carrera),xlab="Cantidad de alumnos",main="Gráfica 2. Distribución de alumnos por carrera",col=rainbow(12), horiz = T, las=1)
legend("bottomright", c("Administración & Negocios Digitales","Bioingeniería","Ciencia de Datos","Ciencia de la Computación","Ingeniería Ambiental","Ingeniería Civil","Ingeniería de la Energía","Ingeniería electrónica","Ingeniería Industrial","Ingeniería Mecánica","Ingeniería Mecatrónica","Ingeniería Química"), border="black", fill=rainbow(12), cex= 0.5)
```

## Gráfica de percepción de estrés propia con relación al promedio
```{r, echo=FALSE}
boxplot(DF$Nivel_propio_de_estres, DF$Promedio_ponderado, xlab = "Nivel propio de estres", ylab = "Promedio ponderado", main="Gráfica 3.Percepción de estrés propia y la relacion con el promedio")
```

## Gráfica del nivel de estres propio por distritos
```{r, echo=FALSE}
boxplot(DL$Nivel_propio_de_estres ~DL$Distrito,las=3,cex.axis=0.4,xlab="Distrito",ylab="Nivel de estres propio", main="Gráfica 4.Distribución del nivel de estres propio por distritos", col=rainbow(43))
```

## Gráfica de promedio y horas de sueño
```{r, echo=FALSE}
boxplot(DL$Promedio_ponderado~DL$Horas_de_sueño,las=3,cex.axis=1,xlab="Horas de sueño",ylab="Promedio ponderado", main="Gráfica 5.Distribución del promedio ponderado y la cantidad de horas de sueño",col=rainbow(30))
```
## Gráfica del nivel de estrés según el sexo
```{r, echo=FALSE}
mosaicplot(DL$NIVEL_DE_ESTRES ~ DL$Sexo,
           col=2:5,
           main="Gráfico 6. Niveles de estres según sexo",
           xlab="Nivel de estres",
           ylab="Sexo",
           cex.axis=0.8,as=1)
```
## Gráfica de las horas de estudio, promedio ponderado y nivel de estres
```{r, echo=FALSE}
ggplot(DL, aes(DL$Promedio_ponderado,DL$Horas_de_estudio, color=DL$NIVEL_DE_ESTRES)) +
  geom_point() +
  geom_smooth(method="lm", se=FALSE)
    labs(title="Diagrama de dispersión Promedio ponderado y horas de estudio",
       x="Promedio ponderado",
       y="Horas de estudio")
```

## Gráfica de las horas de estudio, promedio ponderado y nivel de estres
```{r, echo=FALSE}
ggplot(DL, aes(DL$Promedio_ponderado,DL$Horas_de_sueño)) +
  geom_point(aes(color=DL$NIVEL_DE_ESTRES)) +
    labs(title="Grafica 8. Diagrama de dispersión Nivel de Estres y Horas de sueño",
       x="Promedio ponderado",
       y="Horas de sueño") +
  scale_color_discrete("Nivel de estres", labels=c("Burnout","Demasiado estres","Estres Moderado","Poco estres"))
```



# <b style = 'color : black;'><FONT FACE="roman">Descriptores numéricos</FONT></b>


## Hallando el rango, varianza y desviación estándar

1. **Variable Niveles de estrés**
```{r, echo=FALSE}
unique(DL$NIVEL_DE_ESTRES)
```
```{r , echo=FALSE}
range(NE)
max(NE)-min(NE)
var(NE)
sqrt(var(NE))
mode(NE)
```

```{r, echo=FALSE}
H <- matrix(c(149,626.16,25.02),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(H) <- c("Variable Niveles de estrés")
colnames(H) <- c("Rango","  Varianza","  Desviación estándar")
```

```{r, echo=FALSE}
print(H)
```


2. **Variable Edad**
```{r, echo=FALSE}
summary(DL$Edad)
```
```{r, echo=FALSE }
range(DL$Edad)
max(DL$Edad)-min(DL$Edad)
round(var(DL$Edad),2)
round(sd(DL$Edad),2)
```
```{r, echo=FALSE}
B <- matrix(c(11,3.62,1.9),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(B) <- c("Variable edad")
colnames(B) <- c("Rango","  Varianza","  Desviación estándar")
```

```{r, echo=FALSE}
print(B)
```

3. **Variable Promedio ponderado**
```{r, echo=FALSE}
summary(DL$Promedio_ponderado)
```
```{r, echo=FALSE}
range(DL$Promedio_ponderado)
max(DL$Promedio_ponderado)-min(DL$Promedio_ponderado)
round(var(DL$Promedio_ponderado),2)
round(sd(DL$Promedio_ponderado),2)

```
```{r, echo=FALSE}
C <- matrix(c(19,7.34,2.71),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(C) <- c("Variable Promedio ponderado")
colnames(C) <- c("Rango","  Varianza","  Desviación estándar")
```

```{r, echo=FALSE}
print(C)
```

4. **Variable Horas de sueño**
```{r, echo=FALSE}
summary(DL$Horas_de_sueño)
```
```{r, echo=FALSE}
range(DL$Horas_de_sueño)
max(DL$Horas_de_sueño)-min(DL$Horas_de_sueño)
round(var(DL$Horas_de_sueño),2)
round(sd(DL$Horas_de_sueño),2)
```
```{r, echo=FALSE}
E <- matrix(c(8,1.86,1.36),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(E) <- c("Variable Horas de sueño")
colnames(E) <- c("Rango","  Varianza","  Desviación estándar")
```

```{r, echo=FALSE}
print(E)
```

5. **Variable Horas de estudio**
```{r, echo=FALSE}
summary(DL$Horas_de_estudio)
```
```{r, echo=FALSE}
range(DL$Horas_de_estudio)
max(DL$Horas_de_estudio)-min(DL$Horas_de_estudio)
round(var(DL$Horas_de_estudio),2)
round(sd(DL$Horas_de_estudio),2)
```
```{r, echo=FALSE}
G <- matrix(c(89,325.91,18.05),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(G) <- c("Variable Horas de estudio")
colnames(G) <- c("Rango","  Varianza","  Desviación estándar")
```

```{r, echo=FALSE}
print(G)
```

## Descriptor numerico *"Media, mediana y moda"*

1. **Histograma de la variable edad**

```{r, echo=FALSE}
I <- matrix(c(5.95,6,6),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(I) <- c("Variable edad")
colnames(I) <- c("Media","  Moda","Mediana")
```

```{r, echo=FALSE}
print(I)
```

```{r, echo=FALSE}
media = round(mean(DL$Horas_de_sueño),2)
mediana = median(DL$Horas_de_sueño)
moda = mode(DL$Horas_de_sueño)  
Promedio = DL$Horas_de_sueño
titulo <- "Grafica 9. Histograma Horas de sueño"
subtitulo <- paste("Media=",media, " Mediana = ",mediana, " Moda=",moda)

ggplot(data = DL, mapping = aes(x=Promedio)) +
  geom_histogram(bins=50) +
   ggtitle(titulo, subtitle = subtitulo) +
  xlab('Horas de sueño') + ylab('Frecuencia') +
  geom_vline(aes(xintercept = media,
                  color = "media"),
              linetype = "dashed",
              size = 1)  +
   geom_vline(aes(xintercept = mediana,
                  color = "mediana"),
              linetype = "dashed",
              size = 1) +
   geom_vline(aes(xintercept = moda,
                  color = "moda"),
              linetype = "dashed",
              size = 1) 
```

2. **Histograma de la variable promedio**


```{r, echo=FALSE}
K <- matrix(c(14.35,15,14.60),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(K) <- c("Variable edad")
colnames(K) <- c("Media","  Moda","Mediana")
```

```{r, echo=FALSE}
print(K)
```

```{r, echo=FALSE}
media = round(mean(DL$Promedio_ponderado),2)
mediana = median(DL$Promedio_ponderado)
moda = mode(DL$Promedio_ponderado)  
Promedio = DL$Promedio_ponderado
titulo <- "Grafica 10. Histograma Promedio ponderado"
subtitulo <- paste("Media=",media, " Mediana = ",mediana, " Moda=",moda)

ggplot(data = DL, mapping = aes(x=Promedio)) +  geom_histogram(bins=50) + ggtitle(titulo, subtitle = subtitulo) +
  xlab('Promedio ponderado') + ylab('Frecuencia') +
  geom_vline(aes(xintercept = media, color = "media"),
              linetype = "dashed",
              size = 1)  +
   geom_vline(aes(xintercept = mediana,
                  color = "mediana"),
              linetype = "dashed",
              size = 1) +
   geom_vline(aes(xintercept = moda,
                  color = "moda"),
              linetype = "dashed",
              size = 1) 
```

3. **Variable "Tipos de Estrés"**

```{r, echo=FALSE}
J <- matrix(c(19.38,18,19),
            nrow = 1,
            ncol= 3,
            byrow=TRUE,)
rownames(J) <- c("Niveles de estrés")
colnames(J) <- c("Media","  Moda","Mediana")
```

```{r, echo=FALSE}
print(J)
```

```{r, echo=FALSE}
barplot(table(DL$NIVEL_DE_ESTRES),col=c("orange","blue","pink","skyblue"),main="Grafica 11. Tipos de estrés y su frecuencia" ,xlab= "Edad", ylab="Frecuencia")
legend("topright", "Moda", fill = "pink")
```

4. **Promedio de las variables horas de sueño, cantidad de cursos, horas de estudio y promedio ponderado.**
```{r, echo=FALSE}
A <- matrix(c(5.95,5.61,6.1,14.35),
            nrow = 1,
            ncol= 4,
            byrow=TRUE,)
rownames(A) <- c("promedio")
colnames(A) <- c("Horas de sueño"," Cantidad cursos"," Horas de estudio"," Promedio")
```

```{r, echo=FALSE}
print(A)
```

5. **Promedio de los tipos de estrés**
```{r, echo=FALSE}
round(tapply(DL$Nivel_propio_de_estres*43.36, DL$C_total, mean),2)
```

6. **Histograma de densidad de las horas de sueño**
```{r, echo=FALSE}
hist(DL$Horas_de_sueño,freq=FALSE,col="orange", main="Grafica 12. Histograma del las horas de sueño por día",ylim=c(0,0.5), xlab="",ylab="Densidad")
lines(density(DL$Horas_de_sueño),col="red",lwd=2)
curve(dnorm(x,mean=mean(DL$Horas_de_sueño),sd=sd(DL$Horas_de_sueño)), from=0,to=12, 
      add=TRUE, col="blue", lwd=2)
legend("topleft",col=c("blue","red"),legend =c("Densidad normal estimada","Estimador de núcleo de la densidad"),lwd=2, bty = "n")
```
7. **Histograma de densidad de Niveles de estres**
```{r, echo=FALSE}
hist(DL$Nivel_propio_de_estres,freq=FALSE,col="lightcyan", main="Grafica 13. Histograma del Nivel de estres",ylim=c(0,2), xlab="Nivel de estres",ylab="Densidad")
lines(density(DL$Nivel_propio_de_estres),col="red",lwd=2)
curve(dnorm(x,mean=mean(DL$Nivel_propio_de_estres),sd=sd(DL$Nivel_propio_de_estres)), from=0,to=5, 
      add=TRUE, col="blue", lwd=2)
legend("topleft",col=c("blue","red"),legend =c("Densidad normal estimada","Estimador de núcleo de la densidad"),lwd=2, bty = "n")
```

# <b style = 'color : black;'><FONT FACE="roman">Probabilidades</FONT></b>

1. **Tabla resumen sobre los axiomas utilizados y la probabilidad**

```{r, echo=FALSE}
Probability =c("Hallando la Probabilidad ", "#CASOS FAVORABLES/#CASOS TOTALES")
Probabilidad=data.frame(Probability)
Probabilidad
```
```{r, echo=FALSE}
require(knitr)
kable_styling(kable(head(Probabilidad,19),
                    booktabs = TRUE,
                    digits = 20, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "red", background = "black") %>%
  column_spec(1, bold = T, color = "black")
```

```{r, echo=FALSE}
Axiomas =c("AXIOMAS DE PROBABILIDAD", "0 <= P(A)<=1","P(A^c)=1-P(A)","P(A/B)=P(A∩B)/P(B)")
Ax=data.frame(Axiomas)
Ax
```
```{r, echo=FALSE}
require(knitr)
kable_styling(kable(head(Ax,19),
                    booktabs = TRUE,
                    digits = 20, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "red", background = "black") %>%
  column_spec(1, bold = T, color = "black")

```

2. **Tabla que relaciona los tipos de estrés con el género**

```{r, echo=FALSE}
Nivel_de_Estres=c("Poco estrés","Estrés positivo","Demasiado estrés","Burnout","Total")
Varones=c(13 ,73, 59 ,11,156)
Mujeres=c(1,38,50,4,93)
fV=c(13/156,73/156,59/156,11/156,1)
fM=c(1/93,38/93,50/93,4/93,1)

dataf=data.frame(Nivel_de_Estres,Varones,Mujeres,fV,fM)
dataf

```
```{r, echo=FALSE}
require(knitr)
kable_styling(kable(head(dataf,5),
                    booktabs = TRUE,
                    caption = "Tabla 3: Cantidad total mujeres y varones de los tipos de estrés. Elaboración propia.",
                    digits = 4, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "white", background = "black") %>%
  column_spec(1, bold = T, color = "orange")
```

3. **Tabla que relaciona la edad, nivel de estrés y sexo**

```{r, echo=FALSE}
Edad <- read_excel("Edad.xlsx")
```

```{r, echo=FALSE}
require(knitr)
kable_styling(kable(head(Edad,19),
                    booktabs = TRUE,
                    caption = "Tabla 4: Relación entre edad, nivel, sexo. Elaboración propia.",
                    digits = 20, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "white", background = "skyblue") %>%
  column_spec(1, bold = T, color = "red")

```

<center>
![Figura 3: Elaboración propia](Imagen3.png){width='500px'}
</center>

<center>
![Figura 4: Elaboración propia](Imagen4.png){width='500px'}
</center>


4.**Tabla que relaciona las carreras y sexo**

```{r, echo=FALSE}
library(readxl)
Carrera <- read_excel("Carrera.xlsx")
```

```{r, echo=FALSE}
require(knitr)
kable_styling(kable(head(Carrera,19),
                    booktabs = TRUE,
                    caption = "Tabla 5: Relación entre carrera y sexo. Elaboración propia.",
                    digits = 20, 
                    label = TRUE,
                    row.names = FALSE, align = "l"),
              latex_options = c("striped", "condensed"),
              position = "center",
              full_width = FALSE) %>%
  row_spec(0, bold = T, color = "white", background = "purple") %>%
  column_spec(1, bold = T, color = "red")

```
<center>
![Figura 5: Elaboración propia](Imagen9.jpg){width='500px'}
</center>

<center>
![Figura 6: Elaboración propia](Imagen10.jpg){width='500px'}
</center>

<center>
![Figura 7: Elaboración propia](Imagen11.jpg){width='500px'}
</center>

<center>
![Figura 8: Elaboración propia](Imagen12.jpg){width='500px'}
</center>

5. Hallando algunas probabilidades

*¿Cuál es la probabilidad que un encuestado tenga Estrés positivo y sea varón?*

```{r, echo=FALSE}
73/246
```
*La probabilidad que un encuestado sea mujer y no estudie Ingeniería Industrial.*
1- P(X)
```{r, echo=FALSE}
1-(33/70)
```

*Probabilidad de que un encuestado estudie Ingeniera civil. Si presenta Demasiado estrés*
```{r, echo=FALSE}
DL%>% filter(NIVEL_DE_ESTRES=="Demasiado estres",  Carrera=="Ingeniería Civil") %>% nrow
DL%>% filter(NIVEL_DE_ESTRES=="Demasiado estres")%>%nrow
```

```{r, echo=FALSE}
13/107
```


*Probabilidad de que un encuestado tenga un promedio 14<=P<=16 y presenta Estrés positivo*
```{r, echo=FALSE}
DL%>% filter(Promedio_ponderado>=14 & Promedio_ponderado<=16,  NIVEL_DE_ESTRES=="Estres positivo") %>% nrow
DL%>% filter(NIVEL_DE_ESTRES=="Estres positivo")%>%nrow
```
```{r, echo=FALSE}
53/111
```
*Probabilidad de que un encuestado tenga un promedio 16<=P<=18 y presenta Estrés positivo*
```{r, echo=FALSE}
DL%>% filter(Promedio_ponderado>=16 & Promedio_ponderado<=18,  NIVEL_DE_ESTRES=="Estres positivo") %>% nrow
DL%>% filter(NIVEL_DE_ESTRES=="Estres positivo")%>%nrow
```

```{r, echo=FALSE}
18/111
```

*Probabilidad de que un encuestado tenga un promedio 13<=P<=15 y presenta Poco positivo*
```{r, echo=FALSE}
DL%>% filter(Promedio_ponderado>=13 & Promedio_ponderado<=15,  NIVEL_DE_ESTRES=="Poco estres") %>% nrow
DL%>% filter(NIVEL_DE_ESTRES=="Poco estres")%>%nrow
```
```{r, echo=FALSE}
5/14
```
