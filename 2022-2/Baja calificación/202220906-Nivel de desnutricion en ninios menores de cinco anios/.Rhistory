FechaNacimiento = str_replace(FechaNacimiento, "nov", "11")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "dic", "12")
)->DF
DF %>% mutate(
FechaAtencion = str_replace(FechaAtencion, "feb", "02")
) %>% mutate(
FechaAtencion = str_replace(FechaAtencion, "ene", "01")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "mar", "03")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "abr", "04")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "may", "05")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "jun", "06")
) ->DF
library(readr)
library(DescTools)
library(ggplot2)
library(stringi)
library("raster")
library("stringr")
library("RColorBrewer")
library(dplyr)
library(dplyr)
tasks <- c ('Planteamiento de los temas', 'Obtención de data', 'Análisis de la data ', 'Entrega de la P0', 'Evaluar el feedback', 'Corregir de acuerdo al feedback','Selección del tema','Análisis de la data seleccionada','Planteamiento de los objetivos','Limpieza de la data', 'Selección de variables','Elaboración del informe', 'Preparación para la exposición','Entrega P1', 'Selección de posibles variables probabilísticas', 'Análisis de las variables', 'Limpieza de datos adicional','Corrección de la P1','Selección de axiomas', 'Aplicación de axiomas','Elaboración de tablas', 'Selección de distribuciones discretas', 'Empleación de la distribución', 'Selección de distribuciones continuas', 'Corroboración de la distribución ','Empleación de la distribución continua', 'Preparación para la exposición 2', 'Entrega de la P2' )
task2 = rev(tasks)
dfr <- data.frame(
name        = factor(task2, levels = task2),
start.date  = c (15,15,14,14,14,13,13,11,11,11,10,10,9,8,7,7,7,7,6,6,6,5,5,5,3,3,2,2),
end.date    =  c (16,16,15,15,15,14,14,12,12,12,11,11,10,9,8,8,8,8,7,7,7,6,6,6,4,4,3,3),
Fases = c ('P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P1','P1','P1','P1','P1','P1','P1','P1','P1','P1', 'P0','P0','P0','P0')
)
ggplot(dfr, aes(x =start.date, xend= end.date, y=name, yend = name, color=Fases)) +
geom_segment(size = 3) +
xlab("Semanas") + ylab("Trabajos") +
labs(title='Gráfico 1',
subtitle='Diagrama de Gantt') + theme(plot.title=element_text(size=13.5, face='bold', color='black')) +theme (plot.subtitle =element_text(size=10, face='bold', color='black'))
library(ggplot2)
tasks <- c ('Planteamiento de los temas', 'Obtención de data', 'Análisis de la data ', 'Entrega de la P0', 'Evaluar el feedback', 'Corregir de acuerdo al feedback','Selección del tema','Análisis de la data seleccionada','Planteamiento de los objetivos','Limpieza de la data', 'Selección de variables','Elaboración del informe', 'Preparación para la exposición','Entrega P1', 'Selección de posibles variables probabilísticas', 'Análisis de las variables', 'Limpieza de datos adicional','Corrección de la P1','Selección de axiomas', 'Aplicación de axiomas','Elaboración de tablas', 'Selección de distribuciones discretas', 'Empleación de la distribución', 'Selección de distribuciones continuas', 'Corroboración de la distribución ','Empleación de la distribución continua', 'Preparación para la exposición 2', 'Entrega de la P2' )
task2 = rev(tasks)
dfr <- data.frame(
name        = factor(task2, levels = task2),
start.date  = c (15,15,14,14,14,13,13,11,11,11,10,10,9,8,7,7,7,7,6,6,6,5,5,5,3,3,2,2),
end.date    =  c (16,16,15,15,15,14,14,12,12,12,11,11,10,9,8,8,8,8,7,7,7,6,6,6,4,4,3,3),
Fases = c ('P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P1','P1','P1','P1','P1','P1','P1','P1','P1','P1', 'P0','P0','P0','P0')
)
ggplot(dfr, aes(x =start.date, xend= end.date, y=name, yend = name, color=Fases)) +
geom_segment(size = 3) +
xlab("Semanas") + ylab("Trabajos") +
labs(title='Gráfico 1',
subtitle='Diagrama de Gantt') + theme(plot.title=element_text(size=13.5, face='bold', color='black')) +theme (plot.subtitle =element_text(size=10, face='bold', color='black'))
install.packages('readr')
install.packages('dplyr')
install.packages('DescTools')
install.packages('ggplot2')
install.packages("car")
library(readr)
library(dplyr)
library(DescTools)
library(ggplot2)
library(stringi)
library(car)
library(fastGraph)
library(readr)
library(dplyr)
library(DescTools)
library(ggplot2)
library(stringi)
library(car)
library(fastGraph)
library(dplyr)
DF<- read_csv('Niños LIMA.csv')
nrow(DF)
ncol(DF)
DF = select(DF,Red,Microred,EESS,Prov_EESS,Dist_EESS,FechaAtencion,Sexo,FechaNacimiento,EdadMeses,DepartamentoPN,ProvinciaPN,DistritoPN,Juntos,SIS,Qaliwarma,Peso,Talla,Hemoglobina,Suplementacion,Consejeria,HBC,Dx_Anemia)
library(readr)
library(DescTools)
library(ggplot2)
library(stringi)
library("raster")
library("stringr")
library("RColorBrewer")
library(dplyr)
tasks <- c ('Planteamiento de los temas', 'Obtención de data', 'Análisis de la data ', 'Entrega de la P0', 'Evaluar el feedback', 'Corregir de acuerdo al feedback','Selección del tema','Análisis de la data seleccionada','Planteamiento de los objetivos','Limpieza de la data', 'Selección de variables','Elaboración del informe', 'Preparación para la exposición','Entrega P1', 'Selección de posibles variables probabilísticas', 'Análisis de las variables', 'Limpieza de datos adicional','Corrección de la P1','Selección de axiomas', 'Aplicación de axiomas','Elaboración de tablas', 'Selección de distribuciones discretas', 'Empleación de la distribución', 'Selección de distribuciones continuas', 'Corroboración de la distribución ','Empleación de la distribución continua', 'Preparación para la exposición 2', 'Entrega de la P2' )
task2 = rev(tasks)
dfr <- data.frame(
name        = factor(task2, levels = task2),
start.date  = c (15,15,14,14,14,13,13,11,11,11,10,10,9,8,7,7,7,7,6,6,6,5,5,5,3,3,2,2),
end.date    =  c (16,16,15,15,15,14,14,12,12,12,11,11,10,9,8,8,8,8,7,7,7,6,6,6,4,4,3,3),
Fases = c ('P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P1','P1','P1','P1','P1','P1','P1','P1','P1','P1', 'P0','P0','P0','P0')
)
ggplot(dfr, aes(x =start.date, xend= end.date, y=name, yend = name, color=Fases)) +
geom_segment(size = 3) +
xlab("Semanas") + ylab("Trabajos") +
labs(title='Gráfico 1',
subtitle='Diagrama de Gantt') + theme(plot.title=element_text(size=13.5, face='bold', color='black')) +theme (plot.subtitle =element_text(size=10, face='bold', color='black'))
library(readr)
library(DescTools)
library(ggplot2)
library(stringi)
library("raster")
library("stringr")
library("RColorBrewer")
library(dplyr)
tasks <- c ('Planteamiento de los temas', 'Obtención de data', 'Análisis de la data ', 'Entrega de la P0', 'Evaluar el feedback', 'Corregir de acuerdo al feedback','Selección del tema','Análisis de la data seleccionada','Planteamiento de los objetivos','Limpieza de la data', 'Selección de variables','Elaboración del informe', 'Preparación para la exposición','Entrega P1', 'Selección de posibles variables probabilísticas', 'Análisis de las variables', 'Limpieza de datos adicional','Corrección de la P1','Selección de axiomas', 'Aplicación de axiomas','Elaboración de tablas', 'Selección de distribuciones discretas', 'Empleación de la distribución', 'Selección de distribuciones continuas', 'Corroboración de la distribución ','Empleación de la distribución continua', 'Preparación para la exposición 2', 'Entrega de la P2' )
task2 = rev(tasks)
dfr <- data.frame(
name        = factor(task2, levels = task2),
start.date  = c (15,15,14,14,14,13,13,11,11,11,10,10,9,8,7,7,7,7,6,6,6,5,5,5,3,3,2,2),
end.date    =  c (16,16,15,15,15,14,14,12,12,12,11,11,10,9,8,8,8,8,7,7,7,6,6,6,4,4,3,3),
Fases = c ('P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P2','P1','P1','P1','P1','P1','P1','P1','P1','P1','P1', 'P0','P0','P0','P0')
)
ggplot(dfr, aes(x =start.date, xend= end.date, y=name, yend = name, color=Fases)) +
geom_segment(size = 3) +
xlab("Semanas") + ylab("Trabajos") +
labs(title='Gráfico 1',
subtitle='Diagrama de Gantt') + theme(plot.title=element_text(size=13.5, face='bold', color='black')) +theme (plot.subtitle =element_text(size=10, face='bold', color='black'))
install.packages('dplyr')
install.packages('DescTools')
install.packages('ggplot2')
library(dplyr)
library(DescTools)
library(ggplot2)
DF<- read_csv('Niños LIMA.csv')
nrow(DF)
ncol(DF)
DF = select(DF,Red,Microred,EESS,Prov_EESS,Dist_EESS,FechaAtencion,Sexo,FechaNacimiento,EdadMeses,DepartamentoPN,ProvinciaPN,DistritoPN,Juntos,SIS,Qaliwarma,Peso,Talla,Hemoglobina,Suplementacion,Consejeria,HBC,Dx_Anemia)
DF = rename(DF,Genero="Sexo",DistritoEESS = "Dist_EESS", ProvinciaEESS = "Prov_EESS" , DiagnosticoAnemia = "Dx_Anemia" )
unique(DF$Red)
DF %>% mutate(Red =
ifelse(Red == "RED VII CAĽETE - YAUYOS", "RED VII CAÑETE - YAUYOS",Red)) -> DF
DF %>% mutate( Peso =
ifelse(Peso == "#ĄNULO!", NA,Peso)) -> DF
DF %>% mutate( Talla =
ifelse(Talla == "#ĄNULO!", NA,Talla)) -> DF
unique(DF$Red)
DF %>% mutate( DistritoEESS=
ifelse(DistritoEESS == "SAN VICENTE DE CAŃETE", "SAN VICENTE DE CAÑETE",
ifelse(DistritoEESS == "HUAŃEC", "HUAÑEC",
ifelse(DistritoEESS == "ZUŃIGA", "ZUÑIGA",
ifelse(DistritoEESS == "VIŃAC", "VIÑAC",
DistritoEESS
)))))-> DF
DF %>% mutate(ProvinciaEESS =
ifelse(ProvinciaEESS == "CAŃETE", "CAÑETE",ProvinciaEESS)
)->DF
DF %>% mutate (ProvinciaPN =
ifelse(ProvinciaPN %in% c("CAĐETE", "CAŃETE","CA+ćETE","CAĂ\u0083â\u0080\u0098ETE","CAĂ\u0091ETE"), "CAÑETE",
ifelse(ProvinciaPN %in% c("FERREŃAFE"), "FERREÑAFE",
ifelse(ProvinciaPN %in% c("MARAŃON"), "MARAÑON"
, ProvinciaPN
)))) -> DF
DF %>% mutate(DistritoPN =
ifelse(DistritoPN %in% c("VIŃAC", "VIĂ\u0091AC","VIĂ\u0083â\u0080\u0098AC"), "VIÑAC",
ifelse(DistritoPN %in% c("SAN VICENTE DE CAĂ\u0091ETE","SAN VICENTE DE CAŃETE","SAN VICENTE DE CAĂ\u0083â\u0080\u0098ET","SAN VICENTE DE CAĐETE","SAN VICENTE DE CA+ćETE" ), "SAN VICENTE DE CAÑETE",
ifelse(DistritoPN %in% c("ZUŃIGA", "ZUĂ\u0091IGA","ZUĂ\u0083â\u0080\u0098IGA"), "ZUÑIGA",
ifelse(DistritoPN %in% c("BREŃA","BREĂ\u0083â\u0080\u0098A"), "BREÑA",
ifelse(DistritoPN %in% c("HUAĂ\u0091EC","HUAŃEC"), "HUAÑEC",
ifelse(DistritoPN %in% c("PUŃOS"),"PUÑOS"     ,
ifelse(DistritoPN %in% c("PARIŃAS"),"PARIÑAS"   ,
ifelse(DistritoPN %in% c("LOS BAŃOS DEL INCA" ), "LOS BAÑOS DEL INCA",
ifelse(DistritoPN %in% c("FERREŃAFE"),"FERREÑAFE",
ifelse(DistritoPN %in% c("MAŃAZO"),"MAÑAZO",
DistritoPN
))))))))))) -> DF
DF %>% mutate(SIS=
ifelse(SIS == 0,"No",
ifelse(SIS == 1,"Sí",SIS))) -> DF
DF %>% mutate(Juntos=
ifelse(Juntos == 0,"No",
ifelse(Juntos == 1,"Sí",Juntos))) -> DF
DF %>% mutate(Qaliwarma=
ifelse(Qaliwarma== 0,"No",
ifelse(Qaliwarma == 1,"Sí",Qaliwarma))) -> DF
DF %>% mutate(Suplementacion=
ifelse(Suplementacion== 0,"No",
ifelse(Suplementacion == 1,"Sí",Suplementacion))) -> DF
DF %>% mutate(Consejeria=
ifelse(Consejeria== 0,"No",
ifelse(Consejeria== 1,"Sí",Consejeria))) -> DF
DF$Talla= as.numeric(DF$Talla)
DF$Peso= as.numeric(DF$Peso)
DF$HBC = as.numeric(DF$HBC)
DF %>% mutate (Talla=
ifelse(Talla > 157 ,Talla/10 ,
ifelse (Talla<2 ,Talla*100,
ifelse (Talla<10 ,Talla *10,
ifelse(Talla <= 16 ,Talla *10,
Talla ))))) -> DF
DF %>% mutate (Talla=
ifelse(Talla <=20  ,Talla*5,Talla)) -> DF
DF %>% mutate (Talla=
ifelse(Talla >=140 & EdadMeses <=23  ,Talla /2,Talla)) -> DF
DF %>% mutate (Talla=
ifelse(Talla <20 & EdadMeses == 54  ,Talla*5,Talla)) -> DF
DF %>% mutate (Peso=
ifelse(Peso > 200 ,Peso/100,
Peso )) -> DF
DF %>% mutate (Peso=
ifelse(Peso > 100 & EdadMeses != 54 ,Peso/10,
Peso )) -> DF
DF %>% mutate (Peso=
ifelse(Peso <100 & Peso >40 & EdadMeses != 54 ,Peso/10,
Peso )) -> DF
DF %>% mutate (Peso=
ifelse(Peso <100 & Peso >60 & EdadMeses != 54 ,Peso/10,
Peso )) -> DF
DF %>% mutate (Peso=
ifelse(Peso >100 & EdadMeses == 54, NA,
Peso )) -> DF
DF %>% mutate (Peso=
ifelse(Peso>80  & EdadMeses == 54, NA,
Peso )) -> DF
DF %>% mutate (Peso=
ifelse(Peso>1  & Peso<2 ,Peso*10,
ifelse(Peso<1 ,Peso*100,
Peso ))) -> DF
DF %>% mutate (Peso=
ifelse(Peso<4 ,Peso*3,
Peso )) -> DF
DF %>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "ene", "01")
) %>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "feb", "02")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "mar", "03")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "abr", "04")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "may", "05")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "jun", "06")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "jul", "07")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "ago", "08")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "sep", "09")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "oct", "10")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "nov", "11")
)%>% mutate(
FechaNacimiento = str_replace(FechaNacimiento, "dic", "12")
)->DF
DF %>% mutate(
FechaAtencion = str_replace(FechaAtencion, "feb", "02")
) %>% mutate(
FechaAtencion = str_replace(FechaAtencion, "ene", "01")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "mar", "03")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "abr", "04")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "may", "05")
)%>% mutate(
FechaAtencion = str_replace(FechaAtencion, "jun", "06")
) ->DF
summary(DF$Peso)
summary(DF$EdadMeses)
summary(DF$Hemoglobina)
summary(DF$HBC)
boxplot(DF$Talla)
title(main = "Gráfico 2: Boxplot de la Talla en cm ",adj =0)
boxplot(DF$Hemoglobina)
title(main = "Gráfico 3: Boxplot de la Hemoglobina en (g/dL) ",adj =0)
boxplot(DF$Peso)
title(main = "Gráfico 4: Boxplot del Peso en Kg ",adj =0)
median(DF$Peso,na.rm=TRUE)
median(DF$Talla,na.rm=TRUE)
median(DF$Hemoglobina)
Mode(DF$Talla,na.rm=TRUE)
Mode(DF$Hemoglobina,na.rm=TRUE)
Mode(DF$Peso,na.rm=TRUE)
Mode(DF$DiagnosticoAnemia)
by(DF$Peso,DF$DiagnosticoAnemia,median,na.rm=TRUE)
by(DF$Talla,DF$Genero,median,na.rm=TRUE)
by(DF$Hemoglobina,DF$Genero,median,na.rm=TRUE)
quantile(DF$Peso,0.25,na.rm=TRUE)
quantile(DF$Peso,0.75,na.rm=TRUE)
quantile(DF$Talla,0.20,na.rm=TRUE)
quantile(DF$Talla,0.90,na.rm=TRUE)
IQR(DF$Peso,na.rm=TRUE)
IQR(DF$Talla,na.rm=TRUE)
Rp = max(DF$Peso,na.rm=TRUE)-min(DF$Peso,na.rm=TRUE)
Rp
Rt = max(DF$Talla,na.rm=TRUE) - min(DF$Talla,na.rm=TRUE)
Rt
Rh = max(DF$Hemoglobina,na.rm=TRUE) - min(DF$Hemoglobina,na.rm=TRUE)
Rh
nrow(filter (DF, DF$SIS =="Sí" | DF$Qaliwarma =="Sí"| DF$Juntos=="Sí" ))
porNAS = (10894/nrow(DF))*100
print(porNAS)
nrow(filter (DF, DF$SIS =="Sí" | DF$Qaliwarma =="Sí"| DF$Juntos=="Sí", DF$DiagnosticoAnemia  != "Normal"))
porNCA = (1932 / 10894)*100
print(porNCA)
porNSA = 100 - porNCA
print(porNSA )
porNCA = (1932 / 10894)*100
print(porNCA)
porNSA = 100 - porNCA
print(porNSA )
hist(DF$EdadMeses, xlab="Edad (meses)", ylab = "Frecuencia", main="Gráfico 5: Histograma de la variable Edad en meses",breaks=15,col="light blue")
abline(v=mean(DF$EdadMeses),col="red")
abline(v=Mode(DF$EdadMeses),col="green")
abline(v=median(DF$EdadMeses),col="blue")
legend("topright",c("Promedio","Moda","Mediana"),col=c("red","green","blue"),lty=1:1,lwd = 5)
hist(DF$Peso, xlab="Peso (Kg)", ylab = "Frecuencia", main="Gráfico 6: Histograma de la variable Peso en kilogramos",breaks=15,col="#DEB887")
abline(v=mean(DF$Peso,na.rm= TRUE),col="red")
abline(v=Mode(DF$Peso,na.rm= TRUE),col="green")
abline(v=median(DF$Peso,na.rm= TRUE),col="blue")
legend("topright",c("Promedio","Moda","Mediana"),col=c("red","green","blue"),lty=1:1,lwd = 5)
hist(DF$Talla, xlab="Talla (cm)", ylab = "Frecuencia", main="Gráfico 7: Histograma de la variable talla en centímetros",breaks=15,col="darkorange")
abline(v=mean(DF$Talla,na.rm= TRUE),col="red")
abline(v=Mode(DF$Talla,na.rm= TRUE),col="green")
abline(v=median(DF$Talla,na.rm= TRUE),col="blue")
legend("topright",c("Promedio","Moda","Mediana"),col=c("red","green","blue"),lty=1:1,lwd = 5)
data<-table(DF$DiagnosticoAnemia,DF$ProvinciaEESS)
data
heatmap(table(DF$DiagnosticoAnemia,DF$ProvinciaEESS), cexCol = 0.8, cexRow = 1.25, Rowv = NA, Colv = NA)
tabla1 <- table(DF$DiagnosticoAnemia, DF$Genero)
barplot(tabla1,main="Gráfico 9: Gráfico de barras del Diagnótico de anemia respecto al género ", cex.main=1, beside = TRUE, las=1,
xlab='Género', ylab='Niños',
col = c("lightblue", "mistyrose","lightyellow","lightgreen"),
ylim = c(0, 8000), )
legend('topleft', legend=rownames(tabla1), bty='n',
fill=c("lightblue", "mistyrose","lightyellow","lightgreen"))
tabla1
plot(DF$Hemoglobina,DF$Peso,pch = 20 ,col=ifelse(DF$Genero =="F" ,rgb(1,0,0,0.2),rgb(0,0,1,0.2)),xlab = "Hemoglobina (g/dL)",ylab = "Peso (Kg)",main = "Gráfico 10: Gráfico de dispersión de la variable Peso respecto a la Hemoglobina de acuerdo al género",cex.main=0.8 )
legend("topright",legend = c("M", "F"),
lwd = 3, col = c("blue", "red"))
ggplot(subset(DF,!is.na(Peso)), aes(x = Peso, y = DiagnosticoAnemia ,fill = DiagnosticoAnemia))+
stat_boxplot(geom = "errorbar",width = 0.25)+
geom_boxplot()+
theme_bw() +labs(title='Gráfico 11',
subtitle='Boxplot de la variable Peso respecto al Diagnóstico de anemia') + theme(plot.title=element_text(size=13.5, face='bold', color='black')) +theme (plot.subtitle =element_text(size=10, face='bold', color='black'))
SIS=nrow(filter (DF, DF$SIS =="Sí"))
QALI=nrow(filter(DF,DF$Qaliwarma =="Sí"))
juntos=nrow(filter(DF,DF$Juntos=="Sí"))
sumple=nrow(filter(DF,DF$Suplementacion =="Sí"))
conse=nrow(filter(DF,DF$Consejeria=="Sí"))
count<-c(SIS,juntos,sumple,conse,QALI)
count2<- c("SIS", "Juntos", "Suplementacion", "Consejeria", "Qaliwarma")
color <- brewer.pal(length(count), "Set2")
pie(count, labels=c("SIS = 10838"  ,"Juntos = 487","sumplementacion = 6030"," Consejeria = 7714","Qaliwarma = 13"), col = color)
title(main = "Gráfico 12: Gráfico circular de los tipos de ayuda social ",adj =0)
N=nrow(filter (DF, DF$DiagnosticoAnemia =="Normal"))
L=nrow(filter (DF, DF$DiagnosticoAnemia =="Anemia Leve"))
M=nrow(filter (DF, DF$DiagnosticoAnemia =="Anemia Moderada"))
S=nrow(filter (DF, DF$DiagnosticoAnemia =="Anemia Severa"))
count<-c(N,L,M,S)
color <- brewer.pal(length(count), "Set2")
pie(count,labels = c("Normal = 12892","Anemia Leve =  1904","Anemia Moderada = 1012","Anemia Severa = 31"),col = color )
title(main = "Gráfico 13: Gráfico circular del diagnóstico de anemia ",adj =0)
Ln = lm(DF$Talla~DF$Peso)
Ln
plot(DF$Talla~DF$Peso,xlab="Peso (Kg)",ylab="Talla (cm)",col=rgb(0,0,1,0.2))
abline(Ln,col="red",lwd=2)
cor.test(DF$Peso,DF$Talla)
title(main = "Gráfico 14: Gráfica de regresión lineal de la Talla respecto al Peso ",adj =0)
summary(Ln)
0.7408 *100
cov(DF$Talla,DF$Peso,use = "complete.obs")
cor(DF$Talla,DF$Peso,use="complete.obs")
install.packages('fastGraph')
install.packages('mosaic')
library(fastGraph)
library(mosaic)
library(DescTools)
library(dplyr)
library(fastGraph)
library(mosaic)
library(DescTools)
library(dplyr)
library(fastGraph)
library(mosaic)
library(DescTools)
library(dplyr)
copyDF = DF
print("Distribución de los pacientes segundo su tipo de anemia y genero")
tb<-table(DF$Genero,DF$DiagnosticoAnemia)
tb<-addmargins(tb,margin=c(1,2))
colnames(tb) <- c("Anemia Leve", "Anemia Moderada" ,"Anemia Severa","Normal"," Total")
rownames(tb) <- c("Femenino","Masculino","Total")
tb
31/15839 + 1012/15839
1904/15839 + 8036/15839 - 1021/15839
unique(copyDF$ProvinciaEESS)
nrow(filter(copyDF,  copyDF$DiagnosticoAnemia != "Normal"))
Prob_Anemia =  (2947/15839)
Prob_Anemia
prob_Huara = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "HUAURA" ))/ nrow(DF)) * Prob_Anemia
prob_Huara
prob_Huaral = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "HUARAL" ))/ nrow(DF)) * Prob_Anemia
prob_Huaral
prob_Barranca = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "BARRANCA" ))/ nrow(DF)) * Prob_Anemia
prob_Barranca
prob_Canete = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "CAÑETE" ))/ nrow(DF)) * Prob_Anemia
prob_Canete
prob_Yauyos = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "YAUYOS" ))/ nrow(DF)) * Prob_Anemia
prob_Yauyos
prob_Huarochiri = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "HUAROCHIRI" ))/ nrow(DF)) * Prob_Anemia
prob_Huarochiri
prob_Oyon = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "OYON" ))/ nrow(DF)) * Prob_Anemia
prob_Oyon
prob_Canta = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "CANTA" ))/ nrow(DF)) * Prob_Anemia
prob_Canta
prob_Cajatambo = (nrow(filter(copyDF, copyDF$ProvinciaEESS == "CAJATAMBO" ))/ nrow(DF)) * Prob_Anemia
prob_Cajatambo
# AS' : no padesca Anemia severa
PM = 8036/15839 # Masculino
PF = 7803/15839 # Femenino
PAl = 1904/15839 # AL :Anemia leve
PAM = 1012/15839 # AM :Anemia Moderada
PN= 12892/15839 # N :Normal
PT = (PM*PAl)+(PM*PAM)+(PM*PN) + (PF*PAl)+(PF*PAM)+(PF*PN)
PT
PM = 8036/15839 # M :sexo masculino
PMnAs = ((PAl*PM)+(PM*PAM)+(PM*PN))/PT
PMnAs
pbinom(4,100,0.064)
Infantes <- 1:4
Probabilidad <- pbinom(Infantes,100,0.064)
plot(x=Infantes, y=Probabilidad,
type='h', las=1, lwd=3,xlab = "Infantes", ylab = "Probabilidad")
title(main = "Gráfico 15: Gráfico de distribución binomial sobre los índices de anemia severa ",cex.main = 1, adj =0)
Esperanza1<-100*0.064
Esperanza1
Varianza1<-100*0.064*0.936
Varianza1
1-pbinom(49,100,0.673)
Infantes <- 50:100
Probabilidad <- 1-pbinom(Infantes,100,0.673)
plot(x=Infantes, y=Probabilidad,
type='h', las=1, lwd=3,xlab = "Infantes", ylab = "Probabilidad")
title(main = "Gráfico 16: Gráfico de distribución binomial sobre los infantes pertenecientes al SIS",cex.main = 0.9, adj =0)
Esperanza2<-100*0.673
Esperanza2
Varianza2<-100*0.673*0.327
Varianza2
1-pbinom(59,100,0.623)
Infantes <- 50:100
Probabilidad <- 1-pbinom(Infantes,100,0.623)
plot(x=Infantes, y=Probabilidad,
type='h', las=1, lwd=3,xlab = "Infantes", ylab = "Probabilidad")
title(main = "Gráfico 17: Gráfico de distribución binomial sobre los infantes sin índices de anemia",cex.main = 0.9, adj =0)
Esperanza3<-100*0.623
Esperanza3
Varianza3<-100*0.623*0.377
Varianza3
nrow(filter(copyDF,  copyDF$DiagnosticoAnemia != "Normal"))
dhyper(1,2947,12892,14)
dhyper(2, 2947,12892,14)
dhyper(3, 2947,12892,14)
dhyper(4, 2947,12892,14)
1 - phyper(4, 2947,12892, 14)
MSReemplazo <- 0:14
Probabilidad <- dhyper(x=MSReemplazo, 2947,12892,14 )
plot(x=MSReemplazo, y=Probabilidad,
type='h', las=1, lwd=3,xlab = "Muestra sin reemplazo", ylab = "Probabilidad") + abline(v=14*2947/15839, col='red', lwd=2)
title(main = "Gráfico 18: Gráfico de distribución hipergeométrica sobre los índices de anemia ",cex.main = 1, adj =0)
14*(2947/15839)
14*(2947/15839) * (1 - (2947/15839) * ((15839 - 14)/(15839-1)))
nrow (filter(copyDF,  (copyDF$Juntos == 'Sí' | copyDF$SIS == 'Sí' | copyDF$Qaliwarma == 'Sí')))
dhyper(1,10894,4945,5)
dhyper(2, 10894,4945,5)
dhyper(3, 10894,4945,5)
dhyper(4, 10894,4945,5)
1 - phyper(4, 10894,4945, 5)
MSReemplazo2 <- 0:5
Probabilidad2 <- dhyper(x=MSReemplazo2, 10894,4945, 5)
plot(x=MSReemplazo2, y=Probabilidad2,
type='h', las=1, lwd=3,xlab = "Muestra sin reemplazo", ylab = "Probabilidad")+ abline(v=5*10894/15839, col='red', lwd=2)
title(main = "Gráfico 19: Gráfico de distribución hipergeométrica sobre los índices de ayuda social estatal",cex.main = 0.8, adj =0)
5*(10894/15839)
5*(10894/15839) * (1 - (10894/15839)) * ((15839- 5)/(15839-1))
data2 = subset(DF,select=c(Genero,Peso,Talla,EdadMeses,Hemoglobina,DiagnosticoAnemia))
data2
data2 %>% mutate(Peso = ifelse( Peso < 5 & EdadMeses < 6,NA,
ifelse(Peso>20 & EdadMeses < 33,NA,
ifelse(Peso >20 & EdadMeses > 33 ,NA,Peso))))%>% mutate(Genero = ifelse( Genero=="F","Femenino",
ifelse(Genero == "M","Masculino",Genero)))-> data2
data = subset(data2,select= c(Genero,Peso,Talla,EdadMeses,Hemoglobina,DiagnosticoAnemia),DiagnosticoAnemia == "Anemia Moderada")
data = data[complete.cases(data),]
data= data[1:200,]
shapiro.test(data$Peso)
mp = mean(data$Peso,na.rm=TRUE)
dst = sd(data$Peso)
medianaP = median(data$Peso)
modaP = Mode(data$Peso)
g2 <- plotDist(dist="norm",mean = mp,sd = dst,type = "h",lab = "x's = Estaturas", col = 'blue', main = "Gráfico 20: Gráfico de comprobación de distribución normal",cex.main = 0.8)
g2
x <- seq(-3, 3, length = 100) *dst + mp
hist(data$Peso,freq=FALSE,col="lightsalmon",main="Gráfico 21: Histograma del Peso", xlab = 'Peso (Kg)')
curve(dnorm(x,mp,dst),col="blue",lwd=2,add=TRUE)
abline(v = mp,lwd = 3,col="red")
abline(v = medianaP,lwd = 3,col="black")
abline(v = modaP,lwd = 2,col="yellow")
legend( x = "topright",y = c("media","mediana","moda"),fill=c("red","black","yellow"))
shadeDist( c( 10,25),"dnorm",mp, dst, lower.tail=FALSE,col=c("purple", "lightgreen"), main ="Gráfico 22: Gráfica de distribución normal del índice de anemia moderada", cex.main = 0.9, adj=0)
round(pnorm(25,mp,dst)-pnorm(10,mp,dst),4)
pnorm(15,mp,dst)
shadeDist(15,"dnorm",mp, dst, lower.tail=FALSE,col=c("orange", "red"), main ="Gráfico 23: Gráfica de distribución normal de infantes con peso de 15 a más Kg ", cex.main = 0.9, adj=0)
mp
var(data$Peso)
DF<- read_csv('Niños LIMA.csv')
library(readr)
DF<- read_csv('Niños LIMA.csv')
dim(DF)
df = dplyr::select(data,Red,Microred,EESS,Prov_EESS,Dist_EESS,FechaAtencion,Sexo,FechaNacimiento,EdadMeses,DepartamentoPN,ProvinciaPN,DistritoPN,Juntos,SIS,Qaliwarma,Peso,Talla,Hemoglobina,Suplementacion,Consejeria,HBC,Dx_Anemia)
