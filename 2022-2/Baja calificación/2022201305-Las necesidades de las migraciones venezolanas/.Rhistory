choose(X-1, k-1)*(PE^k)*((1-PE)^(X-k))
dnbinom(X-k, k, PE)
X = 2
k = 2
total = 3644 # total de personas del Estrato Medio
CF = 192     # total de Ica del Estrato Medio
PE = CF/total
choose(X-1, k-1)*(PE^k)*((1-PE)^(X-k))
dnbinom(X-k, k, PE)
casosTotalesRegistrados=sum(DFT$CAMBIO_DE_VIV, na.rm=TRUE)
casosLima <- colSums(select(filter(DFT, DEPARTAMENTO =="LIMA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
casosIca <- colSums(select(filter(DFT, DEPARTAMENTO =="ICA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
N = casosTotalesRegistrados
r = casosLima
ri = casosIca
n = 100;
# a.)
phyper(49,r, N-r, n, lower.tail = FALSE)
# b.)
phyper(24, r, N-r, n, lower.tail = FALSE)
# c.)
phyper(49, ri, N-ri, n, lower.tail = FALSE)
media <- mean(TOTALES,na.rm=TRUE)
desv_standar <- sd(TOTALES)
n <- 100
pnorm(n, media, desv_standar)
pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar)
1 - pnorm(100, media, desv_standar)
media <- mean(TOTALES,na.rm=TRUE)
desv_standar <- sd(TOTALES)
n <- 100
pnorm(n, media, desv_standar)
media <- mean(TOTALES,na.rm=TRUE)
desv_standar <- sd(TOTALES)
n <- 50
pnorm(n, media, desv_standar)
pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar)
1 - pnorm(100, media, desv_standar)
media <- mean(TOTALES,na.rm=TRUE)
media <- mean(TOTALES,na.rm=TRUE)
media
desv_standar
desv_standar <- sd(TOTALES)
desv_standar <- sd(TOTALES,na.rm=TRUE)
desv_standar
pnorm(n, media, desv_standar)
pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar)
1 - pnorm(100, media, desv_standar)
media <- mean(TOTALES,na.rm=TRUE)
media
pnorm(n, media, desv_standar)
media <- mean(TOTALES,na.rm=TRUE)
media
desv_standar <- sd(TOTALES,na.rm=TRUE)
desv_standar
n <- 100
pnorm(n, media, desv_standar)
pnorm(n, media, desv_standar)
pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar)
pnorm(n, media, desv_standar)
pnorm(n, media, desv_standar)
media <- mean(TOTALES,na.rm=TRUE)
media
desv_standar <- sd(TOTALES,na.rm=TRUE)
desv_standar
n <- 50
pnorm(n, media, desv_standar)
media <- mean(TOTALES,na.rm=TRUE)
#media
desv_standar <- sd(TOTALES,na.rm=TRUE)
#desv_standar
x <- 50
pnorm(x, media, desv_standar)
pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar)
pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar)
1 - pnorm(100, media, desv_standar)
1 - pnorm(x, media, desv_standar)
pnorm(x, media, desv_standar, lower.tail = F)
1 - pnorm(x, media, desv_standar)
1 - pnorm(x, media, desv_standar)
pnorm(x, media, desv_standar, lower.tail = F)
1 - pnorm(x, media, desv_standar)*100
pnorm(x, media, desv_standar, lower.tail = F)*100
pnorm(x, media, desv_standar, lower.tail = F)
1 - pnorm(x, media, desv_standar)*100
1 - pnorm(x, media, desv_standar)
(1 - pnorm(x, media, desv_standar))*100
(pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar))*100
(pnorm(x, media, desv_standar))*100
# Instalación y apertura de librerías
if(!require(naniar)){install.packages("naniar")}
if(!require(readr)){install.packages("readr")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(ggthemes)){install.packages("ggthemes")}
library(naniar)
library(readr)
library(dplyr)
library(ggplot2)
library(ggthemes)
data <- data.frame(name = c('A ', 'B ', 'C ', 'D ', 'E ', 'F ', 'G ', 'H ','I ','J '),
start = c("S02", "S02", "S03", "S05", "S05", "S04", "S03", "S07","S08","S07"),
end = c("S03", "S03", "S04","S06", "S07", "S06","S07","S08","S14","S14"),
Actividades = c(' Tema del proyecto', ' P0', ' Recoleccion de Datos', ' Población, muestra y muestreo', 'Descriptores y Variables', ' Limpieza de Datos', ' P1', ' Corrección de P1 - Código |  Informe',' Variables Aleatorias',' P2')
)
ggplot(data, aes(x=start, xend=end, y=name, yend=name, color=Actividades)) +
theme_bw() +
geom_segment(size=10) +
labs(title='Planificacion de Actividades', x='Semanas', y='Actividades') +
scale_colour_manual(values = c('turquoise3', 'red', 'tan3', 'brown', 'orange', 'violet', 'blue', 'purple',
'chartreuse2','darkslategrey'))
# Leer las bases de datos 1,2 y 3
BM1<-read_csv("M1.csv")
BM2<-read_csv("M2.csv")
BM3<-read_csv("M3.csv")
DT<-bind_rows(BM1,BM2,BM3)
DFT<-select(DT,DEPARTAMENTO,ESTRATO,P111A,P204,P205_A,P208,P307)
dim(DFT)
sum(is.na(DFT))
sum(!is.na(DFT))
colSums(is.na(DFT))
DFT <- DFT %>% rename(CAMBIO_DE_VIV=P111A, SEXO=P204, EDAD=P205_A,MIGRO_DE_VEN=P208, PERMISO_MIGRATORIO=P307)
DFT <-mutate_all(DFT,~replace(.,is.na(.),0))
colSums(is.na(DFT))
BM4<-read_csv("M4.csv")
BM5<-read_csv("M5.csv")
BM6<-read_csv("M6.csv")
# 4, 5 y 6
names(BM4)
names(BM5)
names(BM6)
DB4 <- select(BM4, DEPARTAMENTO, ESTRATO, RESFIN, P15 , P15_N)
DB4 <- DB4 %>% rename(DISTRITO=RESFIN, MIGRACION_VENEZUELA=P15, CANT_MIGRACION_VENEZUELA=P15_N)
DB4 <-mutate_all(DB4,~replace(.,is.na(.),0))
DB5 <- select(BM5, DEPARTAMENTO, ESTRATO, RESFIN, P15, P15_N, P401_1, P401_2, P401_3, P401_4, P401_5)
DB5 <- DB5 %>% rename(DISTRITO=RESFIN, MIGRACION_VENEZUELA=P15, CANT_MIGRACION_VENEZUELA=P15_N, ESSALUD=P401_1, SEG_PRIV_SALUD=P401_2, SEG_INTEG_SALUD=P401_3, OTRO=P401_4, NO_AFILIADO=P401_5)
DB5 <-mutate_all(DB5,~replace(.,is.na(.),0))
DB6 <- select(BM6, DEPARTAMENTO, ESTRATO, RESFIN, P15, P15_N, P501B)
DB6 <- DB6 %>% rename(DISTRITO=RESFIN, MIGRACION_VENEZUELA=P15, CANT_MIGRACION_VENEZUELA=P15_N, INSTRUCCION=P501B)
DB6 <-mutate_all(DB5,~replace(.,is.na(.),0))
# 7
db7 <- read_csv("M7.csv")
# Variables de la base de datos M7 original:
names(db7)
# Extraemos las variables a trabajar:
db7_new<- select(db7, DEPARTAMENTO, PROVINCIA, DISTRITO:RESFIN, P615_T , P622_1:P622_2)
# Renombrando variables:
db7_new %>% rename(TOTALES = `P615_T`, INGRESODINERO = `P622_1`, INGRESOESPECIE = `P622_2`)-> db7_new
# Mostrando las variables luego de renombrarlas:
names(db7_new)
# Resumen del tipo de variables luego de renombrarlas:
glimpse(db7_new)
# Datos faltantes en la 7ma base de datos: Empleo
sum(is.na(db7_new))
n_miss(db7_new)
# Tabla de datos faltantes (NA's) y datos no faltantes.
table(is.na(db7_new))
# Observaciones completas
sum(complete.cases(db7_new))
n_case_complete(db7_new)
# Observaciones incompletas
sum(!complete.cases(db7_new))
n_case_miss(db7_new)
unique(db7_new$VRESFIN) # RESULTADO FINAL DE LA ENCUESTA VIVIENDA
#table(db7_new$VRESFIN)
unique(db7_new$RESFIN) # RESULTADO FINAL DE LA ENCUESTA HOGAR
#table(db7_new$RESFIN)
unique(db7_new$TOTALES) # Horas de trabajo a la semana
#table(db7_new$TOTALES)
unique(db7_new$INGRESODINERO) # Ingreso total en dinero
#table(db7_new$INGRESODINERO)
unique(db7_new$INGRESOESPECIE) # Ingreso total en especie
#table(db7_new$INGRESOESPECIE)
# 8
db8 <- read_csv("M8.csv")
# Variables de la base de datos M8 original:
names(db8)
# Extraemos las variables a trabajar:
db8_new<- select(db8, DEPARTAMENTO, PROVINCIA, DISTRITO:RESFIN, P709_1:P709_12)
# Renombrando variables:
db8_new %>% rename(NECESALIMENTO = `P709_1`, NECESSALUD = `P709_2`, NECESSITUACION = `P709_3`, NECESINGRESOSEMPLEO = `P709_4`, NECESEDUCACION = `P709_5`, NECESPERSONALES = `P709_6`, NECESALOJAMIENTO = `P709_7`, NECESAGUA = `P709_8`, NECESFAMILIA = `P709_9`, NECESDIVERSION = `P709_10`, NECESOTROS = `P709_11`, NECESESPECIFICAR = `P709_12`) -> db8_new
# Resumen del tipo de variables luego de renombrarlas:
glimpse(db8_new)
# Datos faltantes en la 8ma base de datos: Empleo
sum(is.na(db8_new))
n_miss(db8_new)
# Tabla de datos faltantes (NA's) y datos no faltantes.
table(is.na(db8_new))
# Observaciones completas
sum(complete.cases(db8_new))
n_case_complete(db8_new)
# Observaciones incompletas
sum(!complete.cases(db8_new))
n_case_miss(db8_new)
unique(db8_new$NECESALIMENTO) # NECESIDAD NO CUBIERTA: Alimento
#table(db8_new$NECESALIMENTO)
unique(db8_new$NECESSALUD) # NECESIDAD NO CUBIERTA: Acceso a salud
#table(db8_new$NECESSALUD)
unique(db8_new$NECESSITUACION) # NECESIDAD NO CUBIERTA: Asistencia para regularizar la situación                                                 migratoria y/o estatus de refugiado
#table(db8_new$NECESSITUACION)
unique(db8_new$NECESINGRESOSEMPLEO) # NECESIDAD NO CUBIERTA: Generación de ingresos/empleo
#table(db8_new$NECESINGRESOSEMPLEO)
unique(db8_new$NECESEDUCACION) # NECESIDAD NO CUBIERTA: Educación y capacitación
#table(db8_new$NECESEDUCACION)
unique(db8_new$NECESPERSONALES) # NECESIDAD NO CUBIERTA: Artículos no alimentarios (ropa/cuidado personal, etc.)
#table(db8_new$NECESPERSONALES)
unique(db8_new$NECESALOJAMIENTO) # NECESIDAD NO CUBIERTA: Alojamiento
#table(db8_new$NECESALOJAMIENTO)
unique(db8_new$NECESAGUA) # NECESIDAD NO CUBIERTA: Acceso a servicios de agua y/o desagüe
#table(db8_new$NECESAGUA)
unique(db8_new$NECESFAMILIA) # NECESIDAD NO CUBIERTA: Reunificación familiar
#table(db8_new$NECESFAMILIA)
unique(db8_new$NECESDIVERSION) # NECESIDAD NO CUBIERTA: Esparcimiento y diversión
#table(db8_new$NECESDIVERSION)
unique(db8_new$NECESOTROS) # NECESIDAD NO CUBIERTA: Otra necesidad
#table(db8_new$NECESOTROS)
unique(db8_new$NECESESPECIFICAR) # NECESIDAD NO CUBIERTA: Generación de ingresos/empleo
#table(db8_new$NECESESPECIFICAR)
# 9
db9 <- read_csv("M9.csv")
# Variables de la base de datos M7 original:
names(db9)
# Extraemos las variables a trabajar:
db9_new<- select(db9,  DEPARTAMENTO, PROVINCIA, DISTRITO:RESFIN)
names(db9_new)
# NO NECESITAMOS LIMPIAR O EXTRAER VARIABLES YA QUE EN NUESTRO RESPECTIVO PROYECTO NO UTILIZAMOS NADA DE LA 9na Base de datos
# 1 2 3
DFT %>% ggplot(mapping = aes(x = reorder(ESTRATO,CAMBIO_DE_VIV),y=CAMBIO_DE_VIV)) + geom_bar(stat="identity")+ coord_flip()+
labs(title="        Cambio de vivienda por estrato socioeconómico", x="Estratos", y="Cantidad de cambio de vivienda")
DFT %>% ggplot(mapping = aes(x = reorder(DEPARTAMENTO,CAMBIO_DE_VIV),y=CAMBIO_DE_VIV)) + geom_bar(stat="identity")+ coord_flip()+
labs(title="          Departamentos donde hay más mudanzas", x="Departamentos", y="Cantidad de cambios de vivienda")
TOTALES<-db7_new$TOTALES
# table(TOTALES)
max(TOTALES,na.rm = TRUE)
summary(TOTALES)
boxplot(TOTALES , horizontal = T, col = "skyblue")
abline(v=mean(TOTALES,na.rm=TRUE),col="firebrick4",lwd=2)
Mayores <-filter(db7_new, TOTALES > 90)
# Ahora un diagrama de cajas para las Horas de trabajo por semana clasificada por Estratos:
boxplot(formula= TOTALES~db7_new$ESTRATO, data = db7_new, xlab = "ESTRATO",ylab= "HORAS DE TRABAJO POR SEMANA", col = c("green","yellow","red","skyblue","pink"))
# Tabla graficada, con todas las posibilidades entre 2 variables cualitativas (DEPARTAMENTO Y ESTRATO)
tabEstratoyDepartamento<-table(db7_new$DEPARTAMENTO, db7_new$ESTRATO)
tabEstratoyDepartamento
mosaicplot(tabEstratoyDepartamento, main = "Estrato vs Departamento", col = c("green","red","pink","purple","yellow","blue","brown","skyblue"))
DesNum<-function(X){
return(list(Min=round(min(X,na.rm=TRUE),2),
Max=round(max(X,na.rm=TRUE),2),
Mean=round(mean(X,na.rm = TRUE ),2),
Median=round(median(X, na.rm = TRUE),2),
SD=round(sd(X,na.rm=TRUE),2),
CV=round((sd(X,na.rm=TRUE)/mean(X,na.rm=TRUE)),2),
IQR=round(IQR(X,na.rm=TRUE),2)))
}
mapply(DesNum, list(Horas_Semanales = as.numeric(db7_new$TOTALES),
Ingreso_Dinero = as.numeric(db7_new$INGRESODINERO),
Edad = as.numeric(DFT$EDAD),
Migrantes_Venezuela = as.numeric(DB6$CANT_MIGRACION_VENEZUELA)))
tabEstratoyDepartamento
X = 2
k = 2
total = 1205 # total de personas del Estrato Bajo
CF = 574     # total de Lima del Estrato Bajo
PE = CF/total
choose(X-1, k-1)*(PE^k)*((1-PE)^(X-k))
dnbinom(X-k, k, PE)
X = 2
k = 2
total = 3644 # total de personas del Estrato Medio
CF = 192     # total de Ica del Estrato Medio
PE = CF/total
choose(X-1, k-1)*(PE^k)*((1-PE)^(X-k))
dnbinom(X-k, k, PE)
casosTotalesRegistrados=sum(DFT$CAMBIO_DE_VIV, na.rm=TRUE)
casosLima <- colSums(select(filter(DFT, DEPARTAMENTO =="LIMA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
casosIca <- colSums(select(filter(DFT, DEPARTAMENTO =="ICA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
N = casosTotalesRegistrados
r = casosLima
ri = casosIca
n = 100;
# a.)
phyper(49,r, N-r, n, lower.tail = FALSE)
# b.)
phyper(24, r, N-r, n, lower.tail = FALSE)
# c.)
phyper(49, ri, N-ri, n, lower.tail = FALSE)
media <- mean(TOTALES,na.rm=TRUE)
#media
desv_standar <- sd(TOTALES,na.rm=TRUE)
#desv_standar
x <- 50
(pnorm(x, media, desv_standar))*100
(pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar))*100
(1 - pnorm(x, media, desv_standar))*100
(pnorm(x, media, desv_standar, lower.tail = F))*100
casosTotalesRegistrados=sum(DFT$CAMBIO_DE_VIV, na.rm=TRUE)
casosLima <- colSums(select(filter(DFT, DEPARTAMENTO =="LIMA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
# Instalación y apertura de librerías
if(!require(naniar)){install.packages("naniar")}
if(!require(readr)){install.packages("readr")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(ggthemes)){install.packages("ggthemes")}
library(naniar)
library(readr)
library(dplyr)
library(ggplot2)
library(ggthemes)
data <- data.frame(name = c('A ', 'B ', 'C ', 'D ', 'E ', 'F ', 'G ', 'H ','I ','J '),
start = c("S02", "S02", "S03", "S05", "S05", "S04", "S03", "S07","S08","S07"),
end = c("S03", "S03", "S04","S06", "S07", "S06","S07","S08","S14","S14"),
Actividades = c(' Tema del proyecto', ' P0', ' Recoleccion de Datos', ' Población, muestra y muestreo', 'Descriptores y Variables', ' Limpieza de Datos', ' P1', ' Corrección de P1 - Código |  Informe',' Variables Aleatorias',' P2')
)
ggplot(data, aes(x=start, xend=end, y=name, yend=name, color=Actividades)) +
theme_bw() +
geom_segment(size=10) +
labs(title='Planificacion de Actividades', x='Semanas', y='Actividades') +
scale_colour_manual(values = c('turquoise3', 'red', 'tan3', 'brown', 'orange', 'violet', 'blue', 'purple',
'chartreuse2','darkslategrey'))
# Leer las bases de datos 1,2 y 3
BM1<-read_csv("M1.csv")
BM2<-read_csv("M2.csv")
BM3<-read_csv("M3.csv")
DT<-bind_rows(BM1,BM2,BM3)
DFT<-select(DT,DEPARTAMENTO,ESTRATO,P111A,P204,P205_A,P208,P307)
dim(DFT)
sum(is.na(DFT))
sum(!is.na(DFT))
colSums(is.na(DFT))
DFT <- DFT %>% rename(CAMBIO_DE_VIV=P111A, SEXO=P204, EDAD=P205_A,MIGRO_DE_VEN=P208, PERMISO_MIGRATORIO=P307)
DFT <-mutate_all(DFT,~replace(.,is.na(.),0))
colSums(is.na(DFT))
BM4<-read_csv("M4.csv")
BM5<-read_csv("M5.csv")
BM6<-read_csv("M6.csv")
# 4, 5 y 6
names(BM4)
names(BM5)
names(BM6)
DB4 <- select(BM4, DEPARTAMENTO, ESTRATO, RESFIN, P15 , P15_N)
DB4 <- DB4 %>% rename(DISTRITO=RESFIN, MIGRACION_VENEZUELA=P15, CANT_MIGRACION_VENEZUELA=P15_N)
DB4 <-mutate_all(DB4,~replace(.,is.na(.),0))
DB5 <- select(BM5, DEPARTAMENTO, ESTRATO, RESFIN, P15, P15_N, P401_1, P401_2, P401_3, P401_4, P401_5)
DB5 <- DB5 %>% rename(DISTRITO=RESFIN, MIGRACION_VENEZUELA=P15, CANT_MIGRACION_VENEZUELA=P15_N, ESSALUD=P401_1, SEG_PRIV_SALUD=P401_2, SEG_INTEG_SALUD=P401_3, OTRO=P401_4, NO_AFILIADO=P401_5)
DB5 <-mutate_all(DB5,~replace(.,is.na(.),0))
DB6 <- select(BM6, DEPARTAMENTO, ESTRATO, RESFIN, P15, P15_N, P501B)
DB6 <- DB6 %>% rename(DISTRITO=RESFIN, MIGRACION_VENEZUELA=P15, CANT_MIGRACION_VENEZUELA=P15_N, INSTRUCCION=P501B)
DB6 <-mutate_all(DB5,~replace(.,is.na(.),0))
# 7
db7 <- read_csv("M7.csv")
# Variables de la base de datos M7 original:
names(db7)
# Extraemos las variables a trabajar:
db7_new<- select(db7, DEPARTAMENTO, PROVINCIA, DISTRITO:RESFIN, P615_T , P622_1:P622_2)
# Renombrando variables:
db7_new %>% rename(TOTALES = `P615_T`, INGRESODINERO = `P622_1`, INGRESOESPECIE = `P622_2`)-> db7_new
# Mostrando las variables luego de renombrarlas:
names(db7_new)
# Resumen del tipo de variables luego de renombrarlas:
glimpse(db7_new)
# Datos faltantes en la 7ma base de datos: Empleo
sum(is.na(db7_new))
n_miss(db7_new)
# Tabla de datos faltantes (NA's) y datos no faltantes.
table(is.na(db7_new))
# Observaciones completas
sum(complete.cases(db7_new))
n_case_complete(db7_new)
# Observaciones incompletas
sum(!complete.cases(db7_new))
n_case_miss(db7_new)
unique(db7_new$VRESFIN) # RESULTADO FINAL DE LA ENCUESTA VIVIENDA
#table(db7_new$VRESFIN)
unique(db7_new$RESFIN) # RESULTADO FINAL DE LA ENCUESTA HOGAR
#table(db7_new$RESFIN)
unique(db7_new$TOTALES) # Horas de trabajo a la semana
#table(db7_new$TOTALES)
unique(db7_new$INGRESODINERO) # Ingreso total en dinero
#table(db7_new$INGRESODINERO)
unique(db7_new$INGRESOESPECIE) # Ingreso total en especie
#table(db7_new$INGRESOESPECIE)
# 8
db8 <- read_csv("M8.csv")
# Variables de la base de datos M8 original:
names(db8)
# Extraemos las variables a trabajar:
db8_new<- select(db8, DEPARTAMENTO, PROVINCIA, DISTRITO:RESFIN, P709_1:P709_12)
# Renombrando variables:
db8_new %>% rename(NECESALIMENTO = `P709_1`, NECESSALUD = `P709_2`, NECESSITUACION = `P709_3`, NECESINGRESOSEMPLEO = `P709_4`, NECESEDUCACION = `P709_5`, NECESPERSONALES = `P709_6`, NECESALOJAMIENTO = `P709_7`, NECESAGUA = `P709_8`, NECESFAMILIA = `P709_9`, NECESDIVERSION = `P709_10`, NECESOTROS = `P709_11`, NECESESPECIFICAR = `P709_12`) -> db8_new
# Resumen del tipo de variables luego de renombrarlas:
glimpse(db8_new)
# Datos faltantes en la 8ma base de datos: Empleo
sum(is.na(db8_new))
n_miss(db8_new)
# Tabla de datos faltantes (NA's) y datos no faltantes.
table(is.na(db8_new))
# Observaciones completas
sum(complete.cases(db8_new))
n_case_complete(db8_new)
# Observaciones incompletas
sum(!complete.cases(db8_new))
n_case_miss(db8_new)
unique(db8_new$NECESALIMENTO) # NECESIDAD NO CUBIERTA: Alimento
#table(db8_new$NECESALIMENTO)
unique(db8_new$NECESSALUD) # NECESIDAD NO CUBIERTA: Acceso a salud
#table(db8_new$NECESSALUD)
unique(db8_new$NECESSITUACION) # NECESIDAD NO CUBIERTA: Asistencia para regularizar la situación                                                 migratoria y/o estatus de refugiado
#table(db8_new$NECESSITUACION)
unique(db8_new$NECESINGRESOSEMPLEO) # NECESIDAD NO CUBIERTA: Generación de ingresos/empleo
#table(db8_new$NECESINGRESOSEMPLEO)
unique(db8_new$NECESEDUCACION) # NECESIDAD NO CUBIERTA: Educación y capacitación
#table(db8_new$NECESEDUCACION)
unique(db8_new$NECESPERSONALES) # NECESIDAD NO CUBIERTA: Artículos no alimentarios (ropa/cuidado personal, etc.)
#table(db8_new$NECESPERSONALES)
unique(db8_new$NECESALOJAMIENTO) # NECESIDAD NO CUBIERTA: Alojamiento
#table(db8_new$NECESALOJAMIENTO)
unique(db8_new$NECESAGUA) # NECESIDAD NO CUBIERTA: Acceso a servicios de agua y/o desagüe
#table(db8_new$NECESAGUA)
unique(db8_new$NECESFAMILIA) # NECESIDAD NO CUBIERTA: Reunificación familiar
#table(db8_new$NECESFAMILIA)
unique(db8_new$NECESDIVERSION) # NECESIDAD NO CUBIERTA: Esparcimiento y diversión
#table(db8_new$NECESDIVERSION)
unique(db8_new$NECESOTROS) # NECESIDAD NO CUBIERTA: Otra necesidad
#table(db8_new$NECESOTROS)
unique(db8_new$NECESESPECIFICAR) # NECESIDAD NO CUBIERTA: Generación de ingresos/empleo
#table(db8_new$NECESESPECIFICAR)
# 9
db9 <- read_csv("M9.csv")
# Variables de la base de datos M7 original:
names(db9)
# Extraemos las variables a trabajar:
db9_new<- select(db9,  DEPARTAMENTO, PROVINCIA, DISTRITO:RESFIN)
names(db9_new)
# NO NECESITAMOS LIMPIAR O EXTRAER VARIABLES YA QUE EN NUESTRO RESPECTIVO PROYECTO NO UTILIZAMOS NADA DE LA 9na Base de datos
# 1 2 3
DFT %>% ggplot(mapping = aes(x = reorder(ESTRATO,CAMBIO_DE_VIV),y=CAMBIO_DE_VIV)) + geom_bar(stat="identity")+ coord_flip()+
labs(title="        Cambio de vivienda por estrato socioeconómico", x="Estratos", y="Cantidad de cambio de vivienda")
DFT %>% ggplot(mapping = aes(x = reorder(DEPARTAMENTO,CAMBIO_DE_VIV),y=CAMBIO_DE_VIV)) + geom_bar(stat="identity")+ coord_flip()+
labs(title="          Departamentos donde hay más mudanzas", x="Departamentos", y="Cantidad de cambios de vivienda")
TOTALES<-db7_new$TOTALES
# table(TOTALES)
max(TOTALES,na.rm = TRUE)
summary(TOTALES)
boxplot(TOTALES , horizontal = T, col = "skyblue")
abline(v=mean(TOTALES,na.rm=TRUE),col="firebrick4",lwd=2)
Mayores <-filter(db7_new, TOTALES > 90)
# Ahora un diagrama de cajas para las Horas de trabajo por semana clasificada por Estratos:
boxplot(formula= TOTALES~db7_new$ESTRATO, data = db7_new, xlab = "ESTRATO",ylab= "HORAS DE TRABAJO POR SEMANA", col = c("green","yellow","red","skyblue","pink"))
# Tabla graficada, con todas las posibilidades entre 2 variables cualitativas (DEPARTAMENTO Y ESTRATO)
tabEstratoyDepartamento<-table(db7_new$DEPARTAMENTO, db7_new$ESTRATO)
tabEstratoyDepartamento
mosaicplot(tabEstratoyDepartamento, main = "Estrato vs Departamento", col = c("green","red","pink","purple","yellow","blue","brown","skyblue"))
DesNum<-function(X){
return(list(Min=round(min(X,na.rm=TRUE),2),
Max=round(max(X,na.rm=TRUE),2),
Mean=round(mean(X,na.rm = TRUE ),2),
Median=round(median(X, na.rm = TRUE),2),
SD=round(sd(X,na.rm=TRUE),2),
CV=round((sd(X,na.rm=TRUE)/mean(X,na.rm=TRUE)),2),
IQR=round(IQR(X,na.rm=TRUE),2)))
}
mapply(DesNum, list(Horas_Semanales = as.numeric(db7_new$TOTALES),
Ingreso_Dinero = as.numeric(db7_new$INGRESODINERO),
Edad = as.numeric(DFT$EDAD),
Migrantes_Venezuela = as.numeric(DB6$CANT_MIGRACION_VENEZUELA)))
tabEstratoyDepartamento
X = 2
k = 2
total = 1205 # total de personas del Estrato Bajo
CF = 574     # total de Lima del Estrato Bajo
PE = CF/total
choose(X-1, k-1)*(PE^k)*((1-PE)^(X-k))
dnbinom(X-k, k, PE)
X = 2
k = 2
total = 3644 # total de personas del Estrato Medio
CF = 192     # total de Ica del Estrato Medio
PE = CF/total
choose(X-1, k-1)*(PE^k)*((1-PE)^(X-k))
dnbinom(X-k, k, PE)
casosTotalesRegistrados=sum(DFT$CAMBIO_DE_VIV, na.rm=TRUE)
casosLima <- colSums(select(filter(DFT, DEPARTAMENTO =="LIMA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
casosIca <- colSums(select(filter(DFT, DEPARTAMENTO =="ICA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
N = casosTotalesRegistrados
r = casosLima
ri = casosIca
n = 100;
# a.)
phyper(49,r, N-r, n, lower.tail = FALSE)
# b.)
phyper(24, r, N-r, n, lower.tail = FALSE)
# c.)
phyper(49, ri, N-ri, n, lower.tail = FALSE)
media <- mean(TOTALES,na.rm=TRUE)
#media
desv_standar <- sd(TOTALES,na.rm=TRUE)
#desv_standar
x <- 50
(pnorm(x, media, desv_standar))*100
(pnorm(70, media, desv_standar) - pnorm(50, media, desv_standar))*100
(1 - pnorm(x, media, desv_standar))*100
(pnorm(x, media, desv_standar, lower.tail = F))*100
casosTotalesRegistrados
casosLima
casosIca
casosTotalesRegistrados=sum(DFT$CAMBIO_DE_VIV, na.rm=TRUE)
casosTotalesRegistrados
casosLima <- colSums(select(filter(DFT, DEPARTAMENTO =="LIMA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
casosLima
casosIca <- colSums(select(filter(DFT, DEPARTAMENTO =="ICA"), DEPARTAMENTO, CAMBIO_DE_VIV)[,2])
casosIca
# Instalación y apertura de librerías
install.packages("naniar")
