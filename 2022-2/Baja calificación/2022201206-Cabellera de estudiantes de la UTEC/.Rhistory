count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(silic_genero,aes(SiliC,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que ultizan prodcutos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
CA_silic<- CA%>% count(SiliC)%>%
mutate(prop=n/sum(n))
silic_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(silic_genero,aes(SiliC,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
CA_cruel<- CA%>% count(Cruelfre)%>%
mutate(prop=n/sum(n))
cruel_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(cruel_genero,aes(Cruelfree,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
CA_cruel<- CA%>% count(Cruelfre)%>%
mutate(prop=n/sum(n))
cruel_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
CA_cruel<- CA%>% count(Cruelfree)%>%
mutate(prop=n/sum(n))
CA_cruel<- CA%>% count(Cruelfre)%>%
mutate(prop=n/sum(n))
cruel_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
CA_cruel<- CA%>% count(Cruelfre)%>%
mutate(prop=n/sum(n))
cruel_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(Cruelfre)%>%
mutate(prop=n/sum(n))
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
str(CA)
dev.off()
x11()
matrix(c(1:4), nrow=2, byrow=FALSE)
layout(matrix(c(1:4), nrow=2, byrow=FALSE))
layout.show(4)
Conf2x2 = matrix(c(1:4), nrow=2, byrow=FALSE)
Conf2x2
ggplot(silic_genero,aes(SiliC,n,fill=Genero))
dbinom(3,257,0.31)
Conf2x2 = matrix(c(1:4), nrow=2, byrow=FALSE)
Conf2x2
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
Conf2x2 = matrix(c(1:4), nrow=2, byrow=FALSE)
Conf2x2
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
layout(Conf2x2)
layout.show(4)
layout(Conf2x2)
layout.show(4)
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
layout(Conf2x2)
layout.show(4)
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos Cruelty free",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos Cruelty free",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
CA_silic<- CA%>% count(SiliC)%>%
mutate(prop=n/sum(n))
silic_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(silic_genero,aes(SiliC,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos Cruelty free",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
CA_silic<- CA%>% count(SiliC)%>%
mutate(prop=n/sum(n))
silic_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(silic_genero,aes(SiliC,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
CA_crema<- CA%>% count(Crema_para_peinar)%>%
mutate(prop=n/sum(n))
crema_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(Crema_para_peinar)%>%
mutate(prop=n/sum(n))
ggplot(crema_genero,aes(Crema_para_peinar,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Crema para peinar",
y="Estudiantes",
title = "Número de estudiantes por género que ultizan crema para peinar",
fill="Género")+
theme_classic()+
coord_flip()
CA_sal<- CA%>% count(Sal)%>%
mutate(prop=n/sum(n))
sal_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(Sal)%>%
mutate(prop=n/sum(n))
ggplot(sal_genero,aes(Sal,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con sal",
y="Estudiantes",
title = "Número de estudiantes por género que ultizan productos con salcrema para peinar",
fill="Género")+
theme_classic()+
coord_flip()
layout(Conf2x2)
layout.show(4)
ggplot(cruel_genero,aes(Cruelfre,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos Cruelty free",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos Cruelty free",
fill="Género")+
theme_classic()+
coord_flip()
CA_silic<- CA%>% count(SiliC)%>%
mutate(prop=n/sum(n))
silic_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(SiliC)%>%
mutate(prop=n/sum(n))
ggplot(silic_genero,aes(SiliC,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con siliconas",
y="Estudiantes",
title = "Número de estudiantes por género que utilizan productos con siliconas",
fill="Género")+
theme_classic()+
coord_flip()
CA_crema<- CA%>% count(Crema_para_peinar)%>%
mutate(prop=n/sum(n))
crema_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(Crema_para_peinar)%>%
mutate(prop=n/sum(n))
ggplot(crema_genero,aes(Crema_para_peinar,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Crema para peinar",
y="Estudiantes",
title = "Número de estudiantes por género que ultizan crema para peinar",
fill="Género")+
theme_classic()+
coord_flip()
CA_sal<- CA%>% count(Sal)%>%
mutate(prop=n/sum(n))
sal_genero<-CA%>%
filter(Genero!="No especificado")%>%
group_by(Genero)%>%
count(Sal)%>%
mutate(prop=n/sum(n))
ggplot(sal_genero,aes(Sal,n,fill=Genero))+
geom_bar(stat="identity",position="dodge")+
labs(x="Productos con sal",
y="Estudiantes",
title = "Número de estudiantes por género que ultizan productos con salcrema para peinar",
fill="Género")+
theme_classic()+
coord_flip()
densi_tiempo <- ggplot(data=CA)+
aes(x=Tiempo)+
geom_density()
densi_tiempo +
labs(title="Gráfico de densidad",
x="Edad",
y= "Probabilidad")+
theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5),
plot.caption = element_text(hjust=0.5))
densi_edad <- ggplot(data=CA)+
aes(x=Edad)+
geom_density()
densi_edad +
labs(title="Gráfico de densidad para la edad",
x="Edad",
y= "Probabilidad")+
theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5),
plot.caption = element_text(hjust=0.5))
n_datos=length(CA$Precio)
n_prec=length(CA$Precio[CA$Precio==3])
set.seed(n_datos)
Precio_DistBinom<-rbinom(n=n_datos,size=100,prob=n_prec/n_datos)
hist(Precio_DistBinom,breaks = "Sturges", freq = F,col = c("cadetblue","bisque3","skyblue3","indianred","lightpink3","lightslategrey"))
lines(density(Precio_DistBinom), col = "red", lty = 2, lwd = 3)
plot(CA$Edad,variablesSalud$bienestar_Salud,xlab="IMC",ylab = "Bienestar en salud",main = "IMC VS Bienestar en salud", col=variablesSalud$colorVariable)
densi_precio <- ggplot(data=CA)+
aes(x=Precio)+
geom_density()
densi_precio +
labs(title="Gráfico de densidad",
x="Acondicionador",
y= "Precio")+
theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5),
plot.caption = element_text(hjust=0.5))
densi_mili <- ggplot(data=CA)+
aes(x=MiliS)+
geom_density()
densi_mili +
labs(title="Gráfico de densidad para los mililitros",
x="Mililitros",
y= "Probabilidad")+
theme(plot.title = element_text(hjust=0.5),
plot.subtitle = element_text(hjust=0.5),
plot.caption = element_text(hjust=0.5))
descpNumericos<-function(datosD,alfa=0.05){
media_=r(mean(datosD))
mediana_=r(median(datosD))
desEst_=r(sd(datosD))
var_=r(desEst_^2)
m1<-r( media_ - (qt(1-alfa/2,length(datosD)-1)*(desEst_/sqrt(length(datosD)))))
m2<-r( media_ + (qt(1-alfa/2,length(datosD)-1)*(desEst_/sqrt(length(datosD)))))
v1 <- r(((length(datosD)-1)*(desEst_^2))/qchisq(1-alfa/2,(length(datosD)-1)))
v2 <- r(((length(datosD)-1)*(desEst_^2))/qchisq(alfa/2,(length(datosD)-1)))
d1 <- r(sqrt(((length(datosD)-1)*(desEst_^2))/qchisq(1-alfa/2,(length(datosD)-1))))
d2 <- r(sqrt(((length(datosD)-1)*(desEst_^2))/qchisq(alfa/2,(length(datosD)-1))))
print(paste("Promedio: ",media_))
print(paste("Intervalo de confianza del promedio: [ ",m1," : ",m2," ]"))
print(paste("desviación estandar: ",desEst_))
print(paste("Intervalo de confianza de la desviación estandar: [ ",d1," : ",d2," ]"))
print(paste("Varianza: ",var_))
print(paste("Intervalo de confianza de la varianza: [ ",v1," : ",v2," ]"))
print(paste("Mediana: ",mediana_))
summary(datosD)
}
boxplot(CA$Edad, main="Edades de alumnos que participaron en la encuesta",col="lightblue",horizontal = T)
abline(v=mean(Edad))
boxplot(CA$Edad, main="Edades de alumnos que participaron en la encuesta",col="lightblue",horizontal = T, mean=(Edad))
boxplot(CA$Edad, main="Edades de alumnos que participaron en la encuesta",col="lightblue",horizontal = T, mean(Edad))
boxplot(CA$Edad, main="Edades de alumnos que participaron en la encuesta",col="lightblue",horizontal = T, abline(v=mean(Edad))
boxplot(CA$Edad, main="Edades de alumnos que participaron en la encuesta",col="lightblue",horizontal = T)
knitr::opts_chunk$set(echo = FALSE)
#install.packages("readr")
#install.packages("dplyr")
#install.packages("raster")
#install.packages("DescTools")
#install.packages("lessR")
#install.packages("ggplot2")
#install.packages("car")
install.packages('plyr', repos = "http://cran.us.r-project.org")
install.packages("kableExtra")
library(kableExtra)
data_plan<-data.frame(Estudiante=c("Acuña Uriol Rocío Pamela"),Carrera=c("Bioingeniería"), Participación=c("100%"))
kbl(caption="",data_plan)%>%
kable_styling(
bootstrap_options =c("striped", "hover", "condensed", "responsive"),
full_width = F) %>%
column_spec(1,bold=F) %>%
column_spec(1,color = "Black") %>%
row_spec(1:1,italic = T,background = "#F0FFFF")
library(ggplot2)
library(tidyr)
library(lubridate)
df <- read.csv("Gantt.csv")
df <- data.frame(Tarea = c("Lluvia de ideas" , "Escoger tema" , "Herramienta de datos"          , "Recopilación de data", "Limpieza de data" , "Descriptores numéricos","Descriptores gráficos","Análisis probabilístico", "Modelos probabilísticos","Conclusiones y mejoras")
, Inicio = c("2022-08-24"      ,"2022-08-28"
,"2022-08-31"        ,"2022-10-03"
,"2022-10-10"        , "2022-10-17"
, "2022-10-25", "2022-11-12", "2022-11-14", "2022-11-16")
,Fin = c("2022-08-27"         ,"2022-08-28"
,"2022-09-08"        ,"2022-10-09"
,"2022-10-16"        , "2022-10-24"
, "2022-10-27", "2022-11-24", "2022-11-25", "2022-11-25")
, Completo = c(TRUE, TRUE,TRUE, TRUE, TRUE, TRUE, TRUE,TRUE,TRUE,TRUE))
install.packages("ymd")
library(ymd)
df$Inicio <- ymd(df$Inicio)
df$Fin <- ymd(df$Fin)
df.melt <- df%>%
tidyr::pivot_longer(col = c(Inicio,Fin))
today <- Sys.Date()
install.packages("linewidth2")
pl <- ggplot(df.melt, aes(x = value, y = Tarea, colour = Completo ))
pl <- pl + geom_line( alpha = 0.2, size = 10)
pl <- pl + geom_text(aes(label = format(value, "%d %b")), vjust = -0.5, angle = 45, size = 3, color = "black")
pl <- pl +   theme_classic()
pl <- pl + geom_vline(xintercept = today, color = "red", size = 2, alpha = 0.5)
pl <- pl + labs(title = "Diagrama de Gantt")
pl <- pl + labs(x = "Date")
pl <- pl + labs(y = "Tareas")
pl <- pl + scale_color_manual(values = c("red", "blue"))
pl <- pl + theme(legend.position = "none")
pl <- pl + theme(panel.background = element_rect(color = "black"))
pl <- pl + scale_x_date(name = "Fechas"
,  date_labels = "%d %b"
,  date_breaks = "1 week"
, minor_breaks = "1 day"
,  sec.axis =  dup_axis(name = "Número de semana en el año",labels = scales::date_format('%W')))
pl
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("modeest")
install.packages("readr")
install.packages("car")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("tidyverse")
install.packages("tidyr")
install.packages("stringr")
install.packages("tidyverse")
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("modeest")
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("car")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("tidyverse")
install.packages("tidyr")
install.packages("stringr")
install.packages("tidyverse")
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("modeest")
library(readr)
Encuesta_Estadistica_Grupo6 <- read_csv("Encuesta_Estadistica_Grupo6.csv")
View(Encuesta_Estadistica_Grupo6)
library(readr)
Gantt <- read_csv("Gantt.csv")
View(Gantt)
library(kableExtra)
install.packages("kableExtra")
install.packages("kableExtra")
library(kableExtra)
library(ggplot2)
library(tidyr)
install.packages("tidyr")
library(ggplot2)
library(tidyr)
library(lubridate)
install.packages("lubridate")
library(ggplot2)
library(tidyr)
library(lubridate)
df <- read.csv("Gantt.csv")
install.packages("ymd")
install.packages("linewidth2")
install.packages("linewidth2")
install.packages("readr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("modeest")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
library(car)
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
library(car)
library(tidyverse)
install.packages("tidyverse")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(modeest)
library(car)
library(tidyverse)
library(ggplot2)
