(pnorm(8, mean = 6.97561, sd = 3.306913, lower.tail = F))
DU <- BD
DU %>% mutate(Apple=
ifelse(Apple == "No",0,
ifelse(Apple == "Sí",1,Apple))) -> DU
DU %>% mutate(Huawei=
ifelse(Huawei == "No",0,
ifelse(Huawei == "Sí",1,Huawei))) ->DU
DU %>% mutate(HP=
ifelse(HP== "No",0,
ifelse(HP == "Sí",1,HP))) -> DU
DU %>% mutate(Acer=
ifelse(Acer== "No",0,
ifelse(Acer == "Sí",1,Acer))) -> DU
DU %>% mutate(ZTE=
ifelse(ZTE== "No",0,
ifelse(ZTE== "Sí",1,ZTE))) -> DU
DU %>% mutate(Xiaomi=
ifelse(Xiaomi== "No",0,
ifelse(Xiaomi== "Sí",1,Xiaomi))) -> DU
DU %>% mutate(Asus=
ifelse(Asus== "No",0,
ifelse(Asus== "Sí",1,Asus))) -> DU
DU %>% mutate(Lenovo=
ifelse(Lenovo== "No",0,
ifelse(Lenovo== "Sí",1,Lenovo))) -> DU
DU %>% mutate(MSI=
ifelse(MSI== "No",0,
ifelse(MSI== "Sí",1,MSI))) -> DU
DU %>% mutate(Motorola=
ifelse(Motorola== "No",0,
ifelse(Motorola== "Sí",1,Motorola))) -> DU
DU %>% mutate(Omen=
ifelse(Omen== "No",0,
ifelse(Omen== "Sí",1,Omen))) -> DU
DU %>% mutate(Wacom=
ifelse(Wacom== "No",0,
ifelse(Wacom== "Sí",1,Wacom))) -> DU
DU %>% mutate(Dell=
ifelse(Dell== "No",0,
ifelse(Dell== "Sí",1,Dell))) -> DU
DU %>% mutate(LG=
ifelse(LG== "No",0,
ifelse(LG== "Sí",1,LG))) -> DU
DU %>% mutate(`XP-Pen`=
ifelse(`XP-Pen`== "No",0,
ifelse(`XP-Pen`== "Sí",1,`XP-Pen`))) -> DU
DU %>% mutate(`Razer-Blade`=
ifelse(`Razer-Blade`== "No",0,
ifelse(`Razer-Blade`== "Sí",1,`Razer-Blade`))) -> DU
DU %>% mutate(HTC=
ifelse(HTC== "No",0,
ifelse(HTC== "Sí",1,HTC))) -> DU
DU %>% mutate(Samsung=
ifelse(Samsung== "No",0,
ifelse(Samsung== "Sí",1,Samsung))) -> DU
NewDU <-select(DU,Satisfaccion_dispositivos,Apple,Huawei,HP,Acer,ZTE,Xiaomi,Asus,Lenovo,MSI,Motorola,Omen,Wacom,Dell,LG,`XP-Pen`,`Razer-Blade`,HTC,Samsung)
NewDU$Apple= as.numeric(NewDU$Apple)
NewDU$Huawei= as.numeric(NewDU$Huawei)
NewDU$HP= as.numeric(NewDU$HP)
NewDU$Acer= as.numeric(NewDU$Acer)
NewDU$ZTE= as.numeric(NewDU$ZTE)
NewDU$Xiaomi= as.numeric(NewDU$Xiaomi)
NewDU$Asus= as.numeric(NewDU$Asus)
NewDU$Lenovo= as.numeric(NewDU$Lenovo)
NewDU$MSI= as.numeric(NewDU$MSI)
NewDU$Motorola= as.numeric(NewDU$Motorola)
NewDU$Omen= as.numeric(NewDU$Omen)
NewDU$Wacom= as.numeric(NewDU$Wacom)
NewDU$Dell= as.numeric(NewDU$Dell)
NewDU$LG= as.numeric(NewDU$LG)
NewDU$`XP-Pen`= as.numeric(NewDU$`XP-Pen`)
NewDU$`Razer-Blade`= as.numeric(NewDU$`Razer-Blade`)
NewDU$HTC= as.numeric(NewDU$HTC)
NewDU$Samsung= as.numeric(NewDU$Samsung)
Muy_insatifecho <-c(colSums(filter(NewDU,Satisfaccion_dispositivos == 1)))
Insatisfecho <-c(colSums(filter(NewDU,Satisfaccion_dispositivos == 2)))
Neutral <-c(colSums(filter(NewDU,Satisfaccion_dispositivos == 3)))
Satisfecho <-c(colSums(filter(NewDU,Satisfaccion_dispositivos == 4)))
Muy_Satisfecho <-c(colSums(filter(NewDU,Satisfaccion_dispositivos == 5)))
Mosaico <- data.frame(Muy_insatifecho,Insatisfecho,Neutral,Satisfecho,Muy_Satisfecho)
Mosaico <- Mosaico[2:19,]
MosaicoCopy <-mutate(Mosaico, Suma = rowSums(Mosaico[1:5]))
select(MosaicoCopy,Suma)
sum(MosaicoCopy$Suma)
dgeom(2,0.5)
dnbinom(5,105,0.97)
dnbinom(3,12,0.7)
dnbinom(6,3,5/36)
Prom <- c(BD4$Promedio)
Prom <- c(BD4$Promedio)
Prom <- c(BD$Promedio)
BD$Promedio <- as.numeric(Prom, is.na =TRUE)
# Graficando
plot(BD$Inversion ~ BD$Promedio, ylab = "Inversión (S/.)", xlab = "Promedio ponderado",col = c("blue"),lwd=1.3)
abline ( modelo, col = "magenta",lwd=3)
CopyBD3 <- CopyBD2
CopyBD3$Inversion[CopyBD3$Inversion >= 15000] <- "NA"
Inv <- c(CopyBD3$Inversion)
CopyBD3$Inversion <- as.numeric(Inv, is.na=TRUE)
boxplot(CopyBD3$Inversion~CopyBD2$Satisfaccion_internet,xlab= "Satisfacción del internet", ylab = "Inversión",col = rainbow(5),las =1.8,main = "Gráfico de la relación entre inversión y satisfacción del internet", xaxt="n")
axis(1, at=c(1, 2, 3, 4, 5), labels=c("Muy insatisfecho", "Insatisfecho", "Normal", "Satisfecho", "Muy satisfecho"), cex.axis=0.9)
#create data frame
dataso <- data.frame(name = c('Todos', 'Todos', 'Leandro','Paola','Darcie', 'Leandro', 'Miguel','Miguel','Leandro', 'Darcie','Paola','Todos','Leandro', 'Miguel', 'Darcie','Paola','Leandro', 'Miguel', 'Darcie','Paola', 'Todos', 'Todos'),
start = as.Date(c("2022/08/10", "2022/08/14", "2022/08/20","2022/08/22",  "2022/08/15","2022/08/15", "2022/08/28","2022/09/28","2022/08/18", "2022/10/22", "2022/10/23", "2022/09/1",   "2022/10/1", "2022/08/21", "2022/10/10", "2022/10/03","2022/11/2", "2022/11/2", "2022/08/30", "2022/08/30", "2022/09/18", "2022/11/13")),
end = as.Date(c("2022/08/13"," 2022/08/20"," 2022/08/23"," 2022/08/25","2022/09/6","2022/09/6","2022/09/07", "2022/10/07","2022/09/07", "2022/11/16", "2022/11/13"," 2022/09/14",  "2022/10/15", "2022/09/04", "2022/11/01", "2022/11/01", "2022/11/10","2022/11/10", "2022/09/6", "2022/09/6", "2022/09/30","2022/11/17" )),
Actividades = c('Planteamiento de objetivos', 'Recolección de datos (encuesta)', 'Limpieza de datos','Limpieza de datos','Material de informe ', 'Material de informe', 'Material de presentación','Material de presentación','Material de presentación','Material de informe','Material de presentación', 'Corregir los errores',  'Elaboración de gráficas', 'Elaboración de gráficas','Elaboración de gráficas','Elaboración de gráficas', 'Interpretación de resultados', 'Interpretación de resultados','Interpretación de resultados','Interpretación de resultados', 'Plantemiento de probabilidades','Conclusiones')
)
dataso
#install (if not already installed) and load ggplot2
if(!require(ggplot2)){install.packages('ggplot2')}
if(!require(dplyr)) {install.packages("dplyr",repos = "http://cran.us.r-project.org")}
if(!require(car)) {install.packages("car",repos = "http://cran.us.r-project.org")}
if(!require(DescTools)) {install.packages("DescTools",repos = "http://cran.us.r-project.org")}
if(!require(readxl)) {install.packages("readxl",repos = "http://cran.us.r-project.org")}
if(!require(rmdformats)) {install.packages("rmdformats",repos = "http://cran.us.r-project.org")}
if(!require(RColorBrewer)) {install.packages("RColorBrewer",repos = "http://cran.us.r-project.org")}
if(!require(EnvStats)) {install.packages("EnvStats",repos = "http://cran.us.r-project.org")}
install.packages("vioplot")
ggplot(dataso, aes(x=start, xend=end, y=name, yend=name, color=Actividades)) +
theme_bw()+ #use ggplot theme with black gridlines and white background
geom_segment(size=9) + #increase line width of segments in the chart
labs(title='Planificacion de trabajo', x='Tiempo destinado (Agosto-Noviembre)', y='Integrante del equipo')+
geom_vline(xintercept=as.Date("2022/09/09"),col="red",lwd=1)+
geom_vline(xintercept=as.Date("2022/11/18"),col="red",lwd=1)+ scale_color_brewer(palette='Set3')
library(dplyr)
library(ggplot2)
library(car)
library(DescTools)
library(readxl)
library(rmdformats)
library(RColorBrewer)
library(EnvStats)
library(vioplot)
BD <- read_excel("Datos_encuesta_dispositivos.xlsx")
BD <- rename(BD, Edad = "Edad. Ingresar el valor en años cumplidos. Ejemplo: 19",
Promedio = "Respecto al último ciclo académico ¿Cuál fue tu promedio ponderado? Usar como separador decimal el punto ( . ). Redondear su respuesta a un decimal. Ejemplo: 15.5",
Cursos = "Respecto al último ciclo académico (2022-1)  ¿Cuantos cursos llevaste?",
Dispositivos = "De la siguiente lista de dispositivos electrónicos ¿Cuál utiliza con fines académicos?",
Reprobados = "Respecto al último ciclo académico ¿Reprobaste algún curso?",
Factores = "¿Cuál fue el principal factor que considero al momento de adquirir este dispositivo?", Uso = "¿Cuántas horas usas por lo menos 1 dispositivo con fines académicos? (Al día, poner solo números enteros. Ejemplo: 5)",
Inversion = "¿Cuánto invirtió, en soles, para adquirir sus dispositivos? Usar números enteros (Ejemplo: 3000)",
Apps = "¿Cuál/cuales de las siguientes herramientas/aplicaciones utilizas?",
Satisfaccion_dispositivos = "¿Qué tan satisfecho te encuentras con tus dispositivos electrónicos?",
Dispositivos_influyen_rendimiento = "¿Consideras que tus dispositivos electrónicos influyen en tu desempeño académico?",
Satisfaccion_internet = "¿Qué tan satisfecho estás con el internet de la universidad?")
CopyBD <- BD
CopyBD %>% mutate(Laptop=
ifelse(Laptop == "No",0,
ifelse(Laptop == "Sí",1,Laptop))) -> CopyBD
CopyBD %>% mutate(Celular=
ifelse(Celular == "No",0,
ifelse(Celular == "Sí",1,Celular))) ->CopyBD
CopyBD %>% mutate(Tablet=
ifelse(Tablet== "No",0,
ifelse(Tablet == "Sí",1,Tablet))) -> CopyBD
CopyBD %>% mutate(`Tableta grafica`=
ifelse(`Tableta grafica`== "No",0,
ifelse(`Tableta grafica` == "Sí",1,`Tableta grafica`))) -> CopyBD
CopyBD %>% mutate(PC=
ifelse(PC== "No",0,
ifelse(PC== "Sí",1,PC))) -> CopyBD
CopyBD$Laptop = as.numeric(CopyBD$Laptop)
CopyBD$Celular= as.numeric(CopyBD$Celular)
CopyBD$Tablet= as.numeric(CopyBD$Tablet)
CopyBD$`Tableta grafica`= as.numeric(CopyBD$`Tableta grafica`)
CopyBD$PC= as.numeric(CopyBD$PC)
CopyBD <- cbind(CopyBD, NumDispositivos = CopyBD$Laptop + CopyBD$Celular + CopyBD$Tablet + CopyBD$`Tableta grafica` + CopyBD$PC)
ggplot(CopyBD, aes(x = NumDispositivos, y = Carrera,fill = Carrera))+
stat_boxplot(geom = "errorbar",width = 0.25)+
geom_boxplot()+
theme_bw()
#Hallar la frecuencia de cada dispositivo
Apple<- table(BD$Apple)
Apple
Huawei<- table(BD$Huawei)
Huawei
HP<- table(BD$HP)
HP
Acer<- table(BD$Acer)
Acer
ZTE<- table(BD$ZTE)
ZTE
Xiaomi<- table(BD$Xiaomi)
Xiaomi
Asus<- table(BD$Asus)
Asus
Lenovo<- table(BD$Lenovo)
Lenovo
MSI<- table(BD$MSI)
MSI
Motorola<- table(BD$Motorola)
Motorola
Omen <- table(BD$Omen)
Omen
Wacom<- table(BD$Wacom)
Wacom
Dell<- table(BD$Dell)
Dell
LG<- table(BD$LG)
LG
XP_pen<- table(BD$`XP-Pen`)
XP_pen
Razer_blade<- table(BD$`Razer-Blade`)
Razer_blade
HTC<- table(BD$HTC)
HTC
Samsung<- table(BD$Samsung)
Samsung
#En base a la frecuencia podemos armar el gráfico
Marcas_Dispositivos<- c("Apple"=48,"Huawei"=29, "HP"=61, "Acer"=17, "ZTE"=1,"Xiaomi"=34,"Asus"=32, "Lenovo"=45, "MSI"=7, "Motorola"=15 , "Omen"=1 ,"Wacom"=14, "Dell"=10,"LG"=10,"XP_pen"=3,"Razer_blade"=1, "HTC"=1, "Samsung"=79 )
barplot(Marcas_Dispositivos, col = palette("Pastel 2"), ylab = "Utilidad de marcas",las=2 , ylim = c(0 ,100) )
Razones <- data.frame(razones = c("Precio", "Memoria RAM", "Aspecto", "Tarjeta de video", "Procesador","Marca", "Tarjeta gráfica", "Batería", "Cámara", "Otros"),
Inicio= c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
Cantidad_de_personas = c(126, 159, 81, 68, 124, 69, 74, 88, 53, 4),
Cantidad= c('Estudiantes'))
d<- ggplot(Razones, aes(x=Inicio, xend=Cantidad_de_personas, y=razones, yend=razones, color= Cantidad)) +
theme_bw()+ scale_color_manual(values = c("thistle")) +
geom_segment(size=8) +
labs( x='Frecuencia', y='Factores')+
theme()
d
table(BD$`Memoria RAM`)
mean(BD$Inversion, na.rm = TRUE) -> mediaPrecio
median(BD$Inversion, na.rm = TRUE) -> medianaPrecio
hist(BD$Inversion,
main= "",
xlab = "Inversión (s/)",
ylab = "Frecuencia",
col = rgb(0.941, 0.973, 1, alpha = 1))
abline(v=mediaPrecio,col="red",lwd=4)
abline(v=medianaPrecio,col="green",lwd=4)
legend(x = "topright",
legend = c("Inversión", "Media", "mediana"),
fill = c("aliceblue", "red", "green"),
title = "Descriptores")
mediaPrecio
medianaPrecio
modelo <- lm( Inversion ~ Promedio, data = BD )
summary(modelo)
Inv <- filter(BD,Inversion<=8000)
plot(Inv$Inversion ~ Inv$Promedio, ylab = "Inversión (S/.)", xlab = "Promedio ponderado", main="Gráfico de dispersión entre la inversión y el promedio")
modelo1 <- lm(Inv$Inversion ~ Inv$Promedio)
summary(modelo1)
abline ( modelo1, col = "magenta",lwd=3)
BD$Promedio[BD$Promedio < 04] <- "NA"
Prom <- c(BD$Promedio)
BD$Promedio <- as.numeric(Prom, is.na =TRUE)
Copia_promedio <- BD$Promedio>=13 & BD$Promedio<=16
modelo <- lm(Inversion ~ Copia_promedio, data = BD )
summary(modelo)
str(BD$Promedio)
str(BD$Inversion)
sum(is.na(BD$Promedio)) #is.na() -> este comando detecta los datos incompletos; sum -> sumar
#Sumar la cantidad de datos incompleto
sum(is.na(BD$Inversion)) #is.na() -> este comando detecta los datos incompletos; sum -> sumar
#Sumar la cantidad de datos incompleto
cor(x=BD$Promedio,y=BD$Inversion, use="complete.obs")
CopyBD2 <- BD
CopyBD2 %>% mutate(Notion=
ifelse(Notion == "No",0,
ifelse(Notion == "Sí",1,Notion))) -> CopyBD2
CopyBD2 %>% mutate(Otros=
ifelse(Otros == "No",0,
ifelse(Otros == "Sí",1,Otros))) -> CopyBD2
CopyBD2 %>% mutate(Evernote=
ifelse(Evernote== "No",0,
ifelse(Evernote == "Sí",1,Evernote))) -> CopyBD2
CopyBD2 %>% mutate(OneNote=
ifelse(OneNote== "No",0,
ifelse(OneNote == "Sí",1,OneNote))) -> CopyBD2
CopyBD2 %>% mutate(Anki=
ifelse(Anki== "No",0,
ifelse(Anki== "Sí",1,Anki))) -> CopyBD2
CopyBD2 %>% mutate(`Google Calendar`=
ifelse(`Google Calendar`== "No",0,
ifelse(`Google Calendar`== "Sí",1,`Google Calendar`))) -> CopyBD2
CopyBD2 %>% mutate(`Good Notes`=
ifelse(`Good Notes`== "No",0,
ifelse(`Good Notes`== "Sí",1,`Good Notes`))) -> CopyBD2
CopyBD2 %>% mutate(`No utilizo ninguna`=
ifelse(`No utilizo ninguna`== "No",0,
ifelse(`No utilizo ninguna`== "Sí",1,`No utilizo ninguna`))) -> CopyBD2
CopyBD2$Notion = as.numeric(CopyBD2$Notion)
CopyBD2$Otros= as.numeric(CopyBD2$Otros)
CopyBD2$Evernote= as.numeric(CopyBD2$Evernote)
CopyBD2$OneNote= as.numeric(CopyBD2$OneNote)
CopyBD2$Anki= as.numeric(CopyBD2$Anki)
CopyBD2$`Google Calendar`= as.numeric(CopyBD2$`Google Calendar`)
CopyBD2$`Good Notes`= as.numeric(CopyBD2$`Good Notes`)
CopyBD2$`No utilizo ninguna` = as.numeric(CopyBD2$`No utilizo ninguna`)
CopyBD2 <- cbind(CopyBD2, NApps = CopyBD2$Notion + CopyBD2$Otros + CopyBD2$Evernote + CopyBD2$OneNote + CopyBD2$Anki + CopyBD2$`Google Calendar` + CopyBD2$`Good Notes` + CopyBD2$`No utilizo ninguna`)
boxplot(CopyBD2$Promedio~CopyBD2$NApps,xlab= "Numero de Apps", ylab = "Promedio",col = terrain.colors(6),main="Promedio poderado de los estudiantes por carrera y
número de aplicaciones",cex.main = 1)
ME <-filter(CopyBD2,NApps == 1)
median(ME$Promedio, na.rm = TRUE)
ME <-filter(CopyBD2,NApps == 6)
median(ME$Promedio, na.rm = TRUE)
cor(x=CopyBD2$Promedio,y=CopyBD2$NApps, use="complete.obs")
mean (CopyBD2$NApps)
boxplot(BD$Uso~BD$Reprobados,xlab="Si reprobó un curso", ylab = "Horas de estudio",col = palette("Pastel 2"),main="Cantidad de horas de estudio y si reprobó un curso")
CopyBD3 <- CopyBD2
CopyBD3$Inversion[CopyBD3$Inversion >= 15000] <- "NA"
Inv <- c(CopyBD3$Inversion)
CopyBD3$Inversion <- as.numeric(Inv, is.na=TRUE)
boxplot(CopyBD3$Inversion~CopyBD2$Satisfaccion_internet,xlab= "Satisfacción del internet", ylab = "Inversión",col = rainbow(5),las =1.8,main = "Gráfico de la relación entre inversión y satisfacción del internet", xaxt="n")
axis(1, at=c(1, 2, 3, 4, 5), labels=c("Muy insatisfecho", "Insatisfecho", "Normal", "Satisfecho", "Muy satisfecho"), cex.axis=0.9)
tapply(CopyBD2$Inversion, CopyBD2$Satisfaccion_internet,median )
tapply(CopyBD2$Inversion, CopyBD2$Satisfaccion_internet, sd ) / tapply(CopyBD2$Inversion, CopyBD2$Satisfaccion_internet,mean )
#Invalidar promedios menores a 04
BD$Promedio[BD$Promedio < 4] <- "NA"
#Corregir variable promedio
Prom <- c(BD$Promedio)
BD$Promedio <- as.numeric(Prom, is.na =TRUE)
BD4<-BD
BD4$Inversion[BD4$Inversion >= 15000] <- "NA"
#Corregir variable inversion
Inver <-BD4$Inversion
BD4$Inversion <- as.numeric(Inver, is.na = TRUE)
boxplot(BD4$Inversion~BD4$Carrera,las=2.9, horizontal = TRUE, xlab = "Inversión",ylab="",col = topo.colors(12),main="Gráfico de las tendencias de inversión por carrera")
CopyBD <- cbind(CopyBD, NumDispositivos = CopyBD$Laptop + CopyBD$Celular + CopyBD$Tablet + CopyBD$`Tableta grafica` + CopyBD$PC)
vioplot(CopyBD2$Promedio~CopyBD$NumDispositivos, col = 8:length(levels(CopyBD$NumDispositivos)),
xlab = "Número de dispositivos", ylab = "Promedio", main="Gráfico de la relación entre el promedio ponderado y el número de apps")
stripchart(CopyBD2$Promedio~CopyBD$NumDispositivos, vertical = TRUE, method = "jitter",
pch = 19, add = TRUE, col = "blue")
#Se cambia el nombre de la carrera para obtener los datos
#sum(CopyBD2$NApps==1&CopyBD2$Carrera=="Ingeniería Industrial")
#sum(CopyBD2$NApps==2&CopyBD2$Carrera=="Ingeniería Industrial")
#sum(CopyBD2$NApps==3&CopyBD2$Carrera=="Ingeniería Industrial")
#sum(CopyBD2$NApps==4&CopyBD2$Carrera=="Ingeniería Industrial")
#sum(CopyBD2$NApps==5&CopyBD2$Carrera=="Ingeniería Industrial")
#sum(CopyBD2$NApps==6&CopyBD2$Carrera=="Ingeniería Industrial")
#sum(CopyBD2$Carrera=="Ingeniería Industrial")
table_apps <- matrix(c(12,9,6,4,7,14,10,12,11,4,0,1,90, 19,5,3,5,6,15,2,7,6,3,3,1,75, 1,4,1,1,1,4,1,6,7,1,0,1,28, 3,0,0,0,0,0,0,1,3,0,0,1,8, 0,0,0,1,1,1,0,0,0,0,0,0,3, 0,0,0,0,0,1,0,0,0,0,0,0,1, 35,18,10,11,15,35,13,26,27,8,3,4,205), ncol=7, nrow=13)
rownames(table_apps) <- c("Industrial", "CS", "Electrónica", "Ambiental", "Química", "Civil", "Mecánica", "Mecatrónica","Bioingeniería", "Administración", "DS", "Energía", "TOTAL")
colnames(table_apps) <- c("1 app", "2 apps", "3 apps", "4 apps", "5 apps", "6 apps", "TOTAL")
table_apps
35/205*19/35
10/205*6/10 + 15/205*7/15
28/205
1-((90/205)+(75/205))
#Se reemplaza el nombre de la carrera para obtener los datos
#sum(CopyBD$NumDispositivos==1&CopyBD$Carrera=="Ingeniería de la Energía")
#sum(CopyBD$NumDispositivos==2&CopyBD$Carrera=="Ingeniería de la Energía")
#sum(CopyBD$NumDispositivos==3&CopyBD$Carrera=="Ingeniería de la Energía")
#sum(CopyBD$NumDispositivos==4&CopyBD$Carrera=="Ingeniería de la Energía")
#sum(CopyBD$Carrera=="Ingeniería de la Energía")
table_dispositivos<-matrix(c(3,1,1,2,1,5,0,5,2,3,0,2,25,19,10,4,6,9,22,9,12,17,2,3,1,114,8,5,3,0,4,7,4,6,5,3,0,0,45,5,2,2,3,1,1,0,3,3,0,0,1,21,35,18,10,11,15,35,13,26,27,8,3,4,205), ncol=5, nrow=13)
rownames(table_dispositivos)<- c("Industrial","CS","Electrónica","Ambiental","Química","Civil","Mecánica", "Mecatrónica","Bioingeniería","Administración", "DS", "Energía","TOTAL")
colnames(table_dispositivos)<- c("1 Dispositivo", "2 Dispositivos","3 Dispositivos","4 Dispositivos", "TOTAL")
table_dispositivos
1-(10/18+1/18)
27/205*17/27+26/204*16/26+35/203*17/35
1-(114/205 - 25/205)
CopyBD2 %>% mutate(Apple=
ifelse(Apple == "No",0,
ifelse(Apple == "Sí",1,Apple))) -> CopyBD2
CopyBD2 %>% mutate(Samsung=
ifelse(Samsung == "No",0,
ifelse(Samsung == "Sí",1,Samsung))) -> CopyBD2
CopyBD2 %>% mutate(Huawei=
ifelse(Huawei== "No",0,
ifelse(Huawei == "Sí",1,Huawei))) -> CopyBD2
CopyBD2 %>% mutate(HP=
ifelse(HP== "No",0,
ifelse(HP == "Sí",1,HP))) -> CopyBD2
CopyBD2 %>% mutate(Acer=
ifelse(Acer== "No",0,
ifelse(Acer== "Sí",1,Acer))) -> CopyBD2
CopyBD2 %>% mutate(Xiaomi=
ifelse(Xiaomi== "No",0,
ifelse(Xiaomi== "Sí",1,Xiaomi))) -> CopyBD2
CopyBD2 %>% mutate(Lenovo=
ifelse(Lenovo== "No",0,
ifelse(Lenovo== "Sí",1,Lenovo))) -> CopyBD2
CopyBD2 %>% mutate(Asus=
ifelse(Asus== "No",0,
ifelse(Asus== "Sí",1,Asus))) -> CopyBD2
CopyBD2 %>% mutate(MSI=
ifelse(MSI== "No",0,
ifelse(MSI== "Sí",1,MSI))) -> CopyBD2
CopyBD2 %>% mutate(Motorola=
ifelse(Motorola== "No",0,
ifelse(Motorola== "Sí",1,Motorola))) -> CopyBD2
CopyBD2 %>% mutate(Omen=
ifelse(Omen== "No",0,
ifelse(Omen== "Sí",1,Omen))) -> CopyBD2
CopyBD2 %>% mutate(Wacom=
ifelse(Wacom== "No",0,
ifelse(Wacom== "Sí",1,Wacom))) -> CopyBD2
CopyBD2 %>% mutate(Dell=
ifelse(Dell== "No",0,
ifelse(Dell== "Sí",1,Dell))) -> CopyBD2
CopyBD2 %>% mutate(LG=
ifelse(LG== "No",0,
ifelse(LG== "Sí",1,LG))) -> CopyBD2
CopyBD2$Apple = as.numeric(CopyBD2$Apple)
CopyBD2$Samsung= as.numeric(CopyBD2$Samsung)
CopyBD2$Huawei= as.numeric(CopyBD2$Huawei)
CopyBD2$HP= as.numeric(CopyBD2$HP)
CopyBD2$Acer= as.numeric(CopyBD2$Acer)
CopyBD2$Xiaomi= as.numeric(CopyBD2$Xiaomi)
CopyBD2$Lenovo= as.numeric(CopyBD2$Lenovo)
CopyBD2$Asus = as.numeric(CopyBD2$Asus)
CopyBD2$MSI = as.numeric(CopyBD2$MSI)
CopyBD2$Motorola = as.numeric(CopyBD2$Motorola)
CopyBD2$Omen = as.numeric(CopyBD2$Omen)
CopyBD2$Wacom = as.numeric(CopyBD2$Wacom)
CopyBD2$Dell = as.numeric(CopyBD2$Dell)
CopyBD2$LG = as.numeric(CopyBD2$LG)
CopyBD2$Otros = as.numeric(CopyBD2$Otros)
CopyBD2 <- cbind(CopyBD2, Nmarcas = CopyBD2$Apple + CopyBD2$Samsung + CopyBD2$Huawei + CopyBD2$HP + CopyBD2$Acer + CopyBD2$Xiaomi + CopyBD2$Lenovo + CopyBD2$Asus+ CopyBD2$MSI+ CopyBD2$Motorola+ CopyBD2$Omen+ CopyBD2$Wacom+ CopyBD2$LG)
#Se reemplaza el nombre de la carrera para obtener los datos
#sum(CopyBD2$Nmarcas==1&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Nmarcas==2&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Nmarcas==3&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Nmarcas==4&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Nmarcas==5&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Nmarcas==6&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Nmarcas==7&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Nmarcas==8&CopyBD2$Carrera=="Ingeniería de la Energía")
#sum(CopyBD2$Carrera=="Ingeniería de la Energía")
table_marcass <- matrix(c(8,7,3,3,3,12,4,8,8,3,0,3,62, 17,8,6,4,10,19,7,10,13,5,2,0,101, 8,2,0,3,2,3,2,7,5,0,0,0,32, 1,1,1,0,0,1,0,0,1,0,0,0,5, 1,0,0,1,0,0,0,0,0,0,1,0,3, 0,0,0,0,0,0,0,1,0,0,0,0,1, 0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,1,1, 35,18,10,11,15,35,13,26,27,8,3,4,205), ncol=9, nrow=13)
rownames(table_marcass)<- c("Industrial", "CS", "Electrónica", "Ambiental", "Química", "Civil", "Mecánica", "Mecatrónica","Bioingeniería", "Administración", "DS", "Energía", "TOTAL")
colnames(table_marcass)<- c("1M", "2M", "3M", "4M", "5M","6M","7M","8M","TOTAL")
table_marcass
5/27
35/205*17/35+34/204*16/34+33/203*15/33+35/202*12/35+34/201*11/34
101/205
#Industrial
17/35
#CS
8/18
#Electrónica
6/10
#Ambiental
4/11
#Química
10/15
#Civil
19/35
#Mecánica
7/13
#Mecatrónica
10/26
#Bio
13/27
#Admin
5/8
#DS
2/3
#Energía
0/4
table(CopyBD$NumDispositivos)
25+114+45+21
plot(dhyper(x=0:20,m=114,n=205-114,k=20),lwd=4,type='h', xlab='x', ylab='Probabilidad', main = "Función de probabilidad para un estudiante con dos dispositivos")+abline(v= (20*114)/205, col="red", lwd=3)
Esperanza_hyp=(20*114)/205
Esperanza_hyp
1-phyper(9,114,205-114,20)
qhyper(0.25,114,205-114,23)
25+114+45+21
plot(dhyper(x=0:10,m=101,n=205-101,k=10),lwd=4,type='h', xlab='x', ylab='Probabilidad', main = "Función de probabilidad para un estudiante con dos dispositivos")+abline(v= (10*101)/205, col="red", lwd=3)
Esperanza_hyp=(10*101)/205
Esperanza_hyp
1-phyper(5,101,205-101,10)
qhyper(0.50,101,205-101,9)
sum(BD$Edad<20&BD$Inversion<3000)
sum(BD$Edad<20)
prob1 <- sum(BD$Edad<20&BD$Inversion<3000)/sum(BD$Edad<20)
prob1
x1 <- 0:sum(BD$Edad<20)
y1 <- dbinom(x=x1, size = sum(BD$Edad<20), prob = prob1)
plot(x=x1, y = y1, xlab = "Número de estudiantes", ylab="Probabilidad", type="h", las = 1, lwd=1.5, main="Gráfico de la probabilidad de que un alumno menor a 20 años haya invertido menos de S/.3000", cex.main = 0.8)+abline(v=sum(BD$Edad<20)*prob1, col="blue", lwd=2)
legend("topright", c("Valor esperado"), fill=c("blue"))
1-pbinom(29,137, 0.2044)
pbinom(30, 137, 0.2044) - pbinom(19, 137, 0.2044)
pbinom(40,137,0.2044)
round(137*0.2044,0)
(mean(BD$Edad, na.rm = T))
(median(BD$Edad, na.rm = T))
(as.numeric(names(which.max(table(BD$Edad)))))
(mean(BD$Uso, na.rm = T))
(median(BD$Uso, na.rm = T))
(as.numeric(names(which.max(table(BD$Uso)))))
Inv <- filter(BD, Inversion<=8000)
(mean(Inv$Inversion, na.rm = T))
(median(Inv$Inversion, na.rm = T))
(as.numeric(names(which.max(table(Inv$Inversion)))))
hist(BD$Edad, breaks = 10,freq = FALSE, main = "Edad : Distribucion normal", xlab = "Edad (años)", col = "navajowhite")
lines(density(BD$Edad, na.rm = TRUE), col = "red", lwd = 2)
curve(dnorm(x,mean(BD$Edad, na.rm = TRUE), sd(BD$Edad, na.rm = TRUE)),lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva normal teórica"),lty = 1, lwd = 2, col = c("red", "blue"), bty = "n", cex = 0.8)
hist(BD$Uso, breaks = 10,freq = FALSE, main = "Horas de uso : Distribucion normal", xlab = "Horas de uso (h)", col = "lightsalmon")
lines(density(BD$Uso, na.rm = TRUE), col = "red", lwd = 2)
curve(dnorm(x,mean(BD$Uso, na.rm = TRUE), sd(BD$Uso, na.rm = TRUE)),lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva normal teórica"),lty = 1, lwd = 2, col = c("red", "blue"), bty = "n", cex = 0.8)
hist(Inv$Inversion, breaks = 15,freq = FALSE, main = "Inversión : Distribucion normal", xlab = "Cursos", col = "yellow")
lines(density(Inv$Inversion, na.rm = TRUE), col = "red", lwd = 2)
curve(dnorm(x,mean(Inv$Inversion, na.rm = TRUE), sd(Inv$Inversion, na.rm = TRUE)),lwd = 2, col = "blue", add = T)
legend("topleft", c("curva observada", "curva normal teórica"),lty = 1, lwd = 2, col = c("red", "blue"), bty = "n", cex = 0.8)
install.packages("nortest")
library("nortest")
lillie.test(BD$Edad)
lillie.test(BD$Uso)
lillie.test(Inv$Inversion)
install.packages("MASS")
install.packages("survival")
install.packages("fitdistrplus")
library(MASS)
library(survival)
library(fitdistrplus)
install.packages("MASS")
